// Package ns_p contains models for http://docs.eebus.org/spine/xsd/v1
package model

// Code generated by github.com/andig/xsd2go. DO NOT EDIT.

import "github.com/evcc-io/eebus/util"

// xs:element declarations

// CmiActuatorLevelData message container
type CmiActuatorLevelData struct {
	ActuatorLevelData ActuatorLevelData `json:"actuatorLevelData"`
}

// ActuatorLevelData element
type ActuatorLevelData struct {
	Function string            `json:"function"`
	Value    *ScaledNumberType `json:"value,omitempty"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m ActuatorLevelData) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *ActuatorLevelData) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// CmiActuatorLevelDescriptionData message container
type CmiActuatorLevelDescriptionData struct {
	ActuatorLevelDescriptionData ActuatorLevelDescriptionData `json:"actuatorLevelDescriptionData"`
}

// ActuatorLevelDescriptionData element
type ActuatorLevelDescriptionData struct {
	Label            *LabelType       `json:"label,omitempty"`
	Description      *DescriptionType `json:"description,omitempty"`
	LevelDefaultUnit string           `json:"levelDefaultUnit"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m ActuatorLevelDescriptionData) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *ActuatorLevelDescriptionData) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// CmiActuatorLevelDescriptionDataElements message container
type CmiActuatorLevelDescriptionDataElements struct {
	ActuatorLevelDescriptionDataElements ActuatorLevelDescriptionDataElements `json:"actuatorLevelDescriptionDataElements"`
}

// ActuatorLevelDescriptionDataElements element
type ActuatorLevelDescriptionDataElements struct {
	Label            *ElementTagType `json:"label,omitempty"`
	Description      *ElementTagType `json:"description,omitempty"`
	LevelDefaultUnit *ElementTagType `json:"levelDefaultUnit,omitempty"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m ActuatorLevelDescriptionDataElements) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *ActuatorLevelDescriptionDataElements) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// CmiActuatorSwitchData message container
type CmiActuatorSwitchData struct {
	ActuatorSwitchData ActuatorSwitchData `json:"actuatorSwitchData"`
}

// ActuatorSwitchData element
type ActuatorSwitchData struct {
	Function string `json:"function"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m ActuatorSwitchData) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *ActuatorSwitchData) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// CmiActuatorSwitchDataElements message container
type CmiActuatorSwitchDataElements struct {
	ActuatorSwitchDataElements ActuatorSwitchDataElements `json:"actuatorSwitchDataElements"`
}

// ActuatorSwitchDataElements element
type ActuatorSwitchDataElements struct {
	Function *ElementTagType `json:"function,omitempty"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m ActuatorSwitchDataElements) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *ActuatorSwitchDataElements) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// CmiActuatorSwitchDescriptionData message container
type CmiActuatorSwitchDescriptionData struct {
	ActuatorSwitchDescriptionData ActuatorSwitchDescriptionData `json:"actuatorSwitchDescriptionData"`
}

// ActuatorSwitchDescriptionData element
type ActuatorSwitchDescriptionData struct {
	Label       *LabelType       `json:"label,omitempty"`
	Description *DescriptionType `json:"description,omitempty"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m ActuatorSwitchDescriptionData) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *ActuatorSwitchDescriptionData) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// CmiActuatorSwitchDescriptionDataElements message container
type CmiActuatorSwitchDescriptionDataElements struct {
	ActuatorSwitchDescriptionDataElements ActuatorSwitchDescriptionDataElements `json:"actuatorSwitchDescriptionDataElements"`
}

// ActuatorSwitchDescriptionDataElements element
type ActuatorSwitchDescriptionDataElements struct {
	Label       *ElementTagType `json:"label,omitempty"`
	Description *ElementTagType `json:"description,omitempty"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m ActuatorSwitchDescriptionDataElements) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *ActuatorSwitchDescriptionDataElements) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// CmiAlarmData message container
type CmiAlarmData struct {
	AlarmData AlarmData `json:"alarmData"`
}

// AlarmData element
type AlarmData struct {
	AlarmId          *AlarmIdType      `json:"alarmId,omitempty"`
	ThresholdId      *ThresholdIdType  `json:"thresholdId,omitempty"`
	Timestamp        string            `json:"timestamp"`
	AlarmType        string            `json:"alarmType"`
	MeasuredValue    *ScaledNumberType `json:"measuredValue,omitempty"`
	EvaluationPeriod *TimePeriodType   `json:"evaluationPeriod,omitempty"`
	ScopeType        string            `json:"scopeType"`
	Label            *LabelType        `json:"label,omitempty"`
	Description      *DescriptionType  `json:"description,omitempty"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m AlarmData) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *AlarmData) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// CmiAlarmListData message container
type CmiAlarmListData struct {
	AlarmListData AlarmListData `json:"alarmListData"`
}

// AlarmListData element
type AlarmListData struct {
	AlarmData []AlarmDataType `json:"alarmData"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m AlarmListData) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *AlarmListData) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// CmiAlarmListDataSelectors message container
type CmiAlarmListDataSelectors struct {
	AlarmListDataSelectors AlarmListDataSelectors `json:"alarmListDataSelectors"`
}

// AlarmListDataSelectors element
type AlarmListDataSelectors struct {
	AlarmId   *AlarmIdType `json:"alarmId,omitempty"`
	ScopeType string       `json:"scopeType"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m AlarmListDataSelectors) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *AlarmListDataSelectors) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// CmiBillData message container
type CmiBillData struct {
	BillData BillData `json:"billData"`
}

// BillData element
type BillData struct {
	BillId    *BillIdType `json:"billId,omitempty"`
	BillType  string      `json:"billType"`
	ScopeType string      `json:"scopeType"`
	Total     *Total      `json:"total,omitempty"`
	Position  []Position  `json:"position"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m BillData) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *BillData) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// CmiBillDataElements message container
type CmiBillDataElements struct {
	BillDataElements BillDataElements `json:"billDataElements"`
}

// BillDataElements element
type BillDataElements struct {
	BillId    *ElementTagType `json:"billId,omitempty"`
	BillType  *ElementTagType `json:"billType,omitempty"`
	ScopeType *ElementTagType `json:"scopeType,omitempty"`
	Total     *Total          `json:"total,omitempty"`
	Position  *Position       `json:"position,omitempty"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m BillDataElements) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *BillDataElements) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// CmiBillListData message container
type CmiBillListData struct {
	BillListData BillListData `json:"billListData"`
}

// BillListData element
type BillListData struct {
	BillData []BillDataType `json:"billData"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m BillListData) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *BillListData) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// CmiBillListDataSelectors message container
type CmiBillListDataSelectors struct {
	BillListDataSelectors BillListDataSelectors `json:"billListDataSelectors"`
}

// BillListDataSelectors element
type BillListDataSelectors struct {
	BillId    *BillIdType `json:"billId,omitempty"`
	ScopeType string      `json:"scopeType"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m BillListDataSelectors) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *BillListDataSelectors) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// CmiBillConstraintsData message container
type CmiBillConstraintsData struct {
	BillConstraintsData BillConstraintsData `json:"billConstraintsData"`
}

// BillConstraintsData element
type BillConstraintsData struct {
	BillId           *BillIdType            `json:"billId,omitempty"`
	PositionCountMin *BillPositionCountType `json:"positionCountMin,omitempty"`
	PositionCountMax *BillPositionCountType `json:"positionCountMax,omitempty"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m BillConstraintsData) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *BillConstraintsData) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// CmiBillConstraintsDataElements message container
type CmiBillConstraintsDataElements struct {
	BillConstraintsDataElements BillConstraintsDataElements `json:"billConstraintsDataElements"`
}

// BillConstraintsDataElements element
type BillConstraintsDataElements struct {
	BillId           *ElementTagType `json:"billId,omitempty"`
	PositionCountMin *ElementTagType `json:"positionCountMin,omitempty"`
	PositionCountMax *ElementTagType `json:"positionCountMax,omitempty"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m BillConstraintsDataElements) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *BillConstraintsDataElements) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// CmiBillConstraintsListData message container
type CmiBillConstraintsListData struct {
	BillConstraintsListData BillConstraintsListData `json:"billConstraintsListData"`
}

// BillConstraintsListData element
type BillConstraintsListData struct {
	BillConstraintsData []BillConstraintsDataType `json:"billConstraintsData"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m BillConstraintsListData) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *BillConstraintsListData) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// CmiBillConstraintsListDataSelectors message container
type CmiBillConstraintsListDataSelectors struct {
	BillConstraintsListDataSelectors BillConstraintsListDataSelectors `json:"billConstraintsListDataSelectors"`
}

// BillConstraintsListDataSelectors element
type BillConstraintsListDataSelectors struct {
	BillId *BillIdType `json:"billId,omitempty"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m BillConstraintsListDataSelectors) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *BillConstraintsListDataSelectors) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// CmiBillDescriptionData message container
type CmiBillDescriptionData struct {
	BillDescriptionData BillDescriptionData `json:"billDescriptionData"`
}

// BillDescriptionData element
type BillDescriptionData struct {
	BillId            *BillIdType `json:"billId,omitempty"`
	BillWriteable     *bool       `json:"billWriteable,omitempty"`
	UpdateRequired    *bool       `json:"updateRequired,omitempty"`
	SupportedBillType []string    `json:"supportedBillType"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m BillDescriptionData) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *BillDescriptionData) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// CmiBillDescriptionDataElements message container
type CmiBillDescriptionDataElements struct {
	BillDescriptionDataElements BillDescriptionDataElements `json:"billDescriptionDataElements"`
}

// BillDescriptionDataElements element
type BillDescriptionDataElements struct {
	BillId            *ElementTagType `json:"billId,omitempty"`
	BillWriteable     *ElementTagType `json:"billWriteable,omitempty"`
	UpdateRequired    *ElementTagType `json:"updateRequired,omitempty"`
	SupportedBillType *ElementTagType `json:"supportedBillType,omitempty"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m BillDescriptionDataElements) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *BillDescriptionDataElements) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// CmiBillDescriptionListData message container
type CmiBillDescriptionListData struct {
	BillDescriptionListData BillDescriptionListData `json:"billDescriptionListData"`
}

// BillDescriptionListData element
type BillDescriptionListData struct {
	BillDescriptionData []BillDescriptionDataType `json:"billDescriptionData"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m BillDescriptionListData) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *BillDescriptionListData) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// CmiBillDescriptionListDataSelectors message container
type CmiBillDescriptionListDataSelectors struct {
	BillDescriptionListDataSelectors BillDescriptionListDataSelectors `json:"billDescriptionListDataSelectors"`
}

// BillDescriptionListDataSelectors element
type BillDescriptionListDataSelectors struct {
	BillId *BillIdType `json:"billId,omitempty"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m BillDescriptionListDataSelectors) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *BillDescriptionListDataSelectors) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// CmiBindingManagementEntryData message container
type CmiBindingManagementEntryData struct {
	BindingManagementEntryData BindingManagementEntryData `json:"bindingManagementEntryData"`
}

// BindingManagementEntryData element
type BindingManagementEntryData struct {
	BindingId     *BindingIdType      `json:"bindingId,omitempty"`
	ClientAddress *FeatureAddressType `json:"clientAddress,omitempty"`
	ServerAddress *FeatureAddressType `json:"serverAddress,omitempty"`
	Label         *LabelType          `json:"label,omitempty"`
	Description   *DescriptionType    `json:"description,omitempty"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m BindingManagementEntryData) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *BindingManagementEntryData) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// CmiBindingManagementEntryListData message container
type CmiBindingManagementEntryListData struct {
	BindingManagementEntryListData BindingManagementEntryListData `json:"bindingManagementEntryListData"`
}

// BindingManagementEntryListData element
type BindingManagementEntryListData struct {
	BindingManagementEntryData []BindingManagementEntryDataType `json:"bindingManagementEntryData"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m BindingManagementEntryListData) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *BindingManagementEntryListData) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// CmiBindingManagementEntryListDataSelectors message container
type CmiBindingManagementEntryListDataSelectors struct {
	BindingManagementEntryListDataSelectors BindingManagementEntryListDataSelectors `json:"bindingManagementEntryListDataSelectors"`
}

// BindingManagementEntryListDataSelectors element
type BindingManagementEntryListDataSelectors struct {
	BindingId     *BindingIdType      `json:"bindingId,omitempty"`
	ClientAddress *FeatureAddressType `json:"clientAddress,omitempty"`
	ServerAddress *FeatureAddressType `json:"serverAddress,omitempty"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m BindingManagementEntryListDataSelectors) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *BindingManagementEntryListDataSelectors) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// CmiBindingManagementRequestCall message container
type CmiBindingManagementRequestCall struct {
	BindingManagementRequestCall BindingManagementRequestCall `json:"bindingManagementRequestCall"`
}

// BindingManagementRequestCall element
type BindingManagementRequestCall struct {
	ClientAddress     *FeatureAddressType `json:"clientAddress,omitempty"`
	ServerAddress     *FeatureAddressType `json:"serverAddress,omitempty"`
	ServerFeatureType string              `json:"serverFeatureType"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m BindingManagementRequestCall) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *BindingManagementRequestCall) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// CmiBindingManagementDeleteCall message container
type CmiBindingManagementDeleteCall struct {
	BindingManagementDeleteCall BindingManagementDeleteCall `json:"bindingManagementDeleteCall"`
}

// BindingManagementDeleteCall element
type BindingManagementDeleteCall struct {
	BindingId     *BindingIdType      `json:"bindingId,omitempty"`
	ClientAddress *FeatureAddressType `json:"clientAddress,omitempty"`
	ServerAddress *FeatureAddressType `json:"serverAddress,omitempty"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m BindingManagementDeleteCall) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *BindingManagementDeleteCall) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// CmiCmdClassifier message container
type CmiCmdClassifier struct {
	CmdClassifier CmdClassifier `json:"cmdClassifier"`
}

// CmdClassifier element
type CmdClassifier struct {
	Text string `json:",chardata"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m CmdClassifier) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *CmdClassifier) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// CmiDevice message container
type CmiDevice struct {
	Device Device `json:"device"`
}

// Device element
type Device struct {
	Text string `json:",chardata"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m Device) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *Device) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// CmiEntity message container
type CmiEntity struct {
	Entity Entity `json:"entity"`
}

// Entity element
type Entity struct {
	Text string `json:",chardata"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m Entity) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *Entity) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// CmiFeature message container
type CmiFeature struct {
	Feature Feature `json:"feature"`
}

// Feature element
type Feature struct {
	Text string `json:",chardata"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m Feature) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *Feature) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// CmiDataTunnelingCall message container
type CmiDataTunnelingCall struct {
	DataTunnelingCall DataTunnelingCall `json:"dataTunnelingCall"`
}

// DataTunnelingCall element
type DataTunnelingCall struct {
	Header  *DataTunnelingHeaderType `json:"header,omitempty"`
	Payload *byte                    `json:"payload,omitempty"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m DataTunnelingCall) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *DataTunnelingCall) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// CmiHeader message container
type CmiHeader struct {
	Header Header `json:"header"`
}

// Header element
type Header struct {
	SpecificationVersion *SpecificationVersionType `json:"specificationVersion,omitempty"`
	AddressSource        *FeatureAddressType       `json:"addressSource,omitempty"`
	AddressDestination   *FeatureAddressType       `json:"addressDestination,omitempty"`
	AddressOriginator    *FeatureAddressType       `json:"addressOriginator,omitempty"`
	MsgCounter           *MsgCounterType           `json:"msgCounter,omitempty"`
	MsgCounterReference  *MsgCounterType           `json:"msgCounterReference,omitempty"`
	CmdClassifier        *CmdClassifierType        `json:"cmdClassifier,omitempty"`
	AckRequest           *bool                     `json:"ackRequest,omitempty"`
	Timestamp            string                    `json:"timestamp"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m Header) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *Header) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// CmiDeviceClassificationManufacturerData message container
type CmiDeviceClassificationManufacturerData struct {
	DeviceClassificationManufacturerData DeviceClassificationManufacturerData `json:"deviceClassificationManufacturerData"`
}

// DeviceClassificationManufacturerData element
type DeviceClassificationManufacturerData struct {
	DeviceName                     *DeviceClassificationStringType `json:"deviceName,omitempty"`
	DeviceCode                     *DeviceClassificationStringType `json:"deviceCode,omitempty"`
	SerialNumber                   *DeviceClassificationStringType `json:"serialNumber,omitempty"`
	SoftwareRevision               *DeviceClassificationStringType `json:"softwareRevision,omitempty"`
	HardwareRevision               *DeviceClassificationStringType `json:"hardwareRevision,omitempty"`
	VendorName                     *DeviceClassificationStringType `json:"vendorName,omitempty"`
	VendorCode                     *DeviceClassificationStringType `json:"vendorCode,omitempty"`
	BrandName                      *DeviceClassificationStringType `json:"brandName,omitempty"`
	PowerSource                    string                          `json:"powerSource"`
	ManufacturerNodeIdentification *DeviceClassificationStringType `json:"manufacturerNodeIdentification,omitempty"`
	ManufacturerLabel              *LabelType                      `json:"manufacturerLabel,omitempty"`
	ManufacturerDescription        *DescriptionType                `json:"manufacturerDescription,omitempty"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m DeviceClassificationManufacturerData) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *DeviceClassificationManufacturerData) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// CmiDeviceClassificationManufacturerDataElements message container
type CmiDeviceClassificationManufacturerDataElements struct {
	DeviceClassificationManufacturerDataElements DeviceClassificationManufacturerDataElements `json:"deviceClassificationManufacturerDataElements"`
}

// DeviceClassificationManufacturerDataElements element
type DeviceClassificationManufacturerDataElements struct {
	DeviceName                     *ElementTagType `json:"deviceName,omitempty"`
	DeviceCode                     *ElementTagType `json:"deviceCode,omitempty"`
	SerialNumber                   *ElementTagType `json:"serialNumber,omitempty"`
	SoftwareRevision               *ElementTagType `json:"softwareRevision,omitempty"`
	HardwareRevision               *ElementTagType `json:"hardwareRevision,omitempty"`
	VendorName                     *ElementTagType `json:"vendorName,omitempty"`
	VendorCode                     *ElementTagType `json:"vendorCode,omitempty"`
	BrandName                      *ElementTagType `json:"brandName,omitempty"`
	PowerSource                    *ElementTagType `json:"powerSource,omitempty"`
	ManufacturerNodeIdentification *ElementTagType `json:"manufacturerNodeIdentification,omitempty"`
	ManufacturerLabel              *ElementTagType `json:"manufacturerLabel,omitempty"`
	ManufacturerDescription        *ElementTagType `json:"manufacturerDescription,omitempty"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m DeviceClassificationManufacturerDataElements) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *DeviceClassificationManufacturerDataElements) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// CmiDeviceClassificationUserData message container
type CmiDeviceClassificationUserData struct {
	DeviceClassificationUserData DeviceClassificationUserData `json:"deviceClassificationUserData"`
}

// DeviceClassificationUserData element
type DeviceClassificationUserData struct {
	UserNodeIdentification *DeviceClassificationStringType `json:"userNodeIdentification,omitempty"`
	UserLabel              *LabelType                      `json:"userLabel,omitempty"`
	UserDescription        *DescriptionType                `json:"userDescription,omitempty"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m DeviceClassificationUserData) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *DeviceClassificationUserData) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// CmiDeviceClassificationUserDataElements message container
type CmiDeviceClassificationUserDataElements struct {
	DeviceClassificationUserDataElements DeviceClassificationUserDataElements `json:"deviceClassificationUserDataElements"`
}

// DeviceClassificationUserDataElements element
type DeviceClassificationUserDataElements struct {
	UserNodeIdentification *ElementTagType `json:"userNodeIdentification,omitempty"`
	UserLabel              *ElementTagType `json:"userLabel,omitempty"`
	UserDescription        *ElementTagType `json:"userDescription,omitempty"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m DeviceClassificationUserDataElements) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *DeviceClassificationUserDataElements) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// CmiDeviceConfigurationKeyValueData message container
type CmiDeviceConfigurationKeyValueData struct {
	DeviceConfigurationKeyValueData DeviceConfigurationKeyValueData `json:"deviceConfigurationKeyValueData"`
}

// DeviceConfigurationKeyValueData element
type DeviceConfigurationKeyValueData struct {
	KeyId             *DeviceConfigurationKeyIdType         `json:"keyId,omitempty"`
	Value             *DeviceConfigurationKeyValueValueType `json:"value,omitempty"`
	IsValueChangeable *bool                                 `json:"isValueChangeable,omitempty"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m DeviceConfigurationKeyValueData) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *DeviceConfigurationKeyValueData) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// CmiDeviceConfigurationKeyValueListData message container
type CmiDeviceConfigurationKeyValueListData struct {
	DeviceConfigurationKeyValueListData DeviceConfigurationKeyValueListData `json:"deviceConfigurationKeyValueListData"`
}

// DeviceConfigurationKeyValueListData element
type DeviceConfigurationKeyValueListData struct {
	DeviceConfigurationKeyValueData []DeviceConfigurationKeyValueDataType `json:"deviceConfigurationKeyValueData"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m DeviceConfigurationKeyValueListData) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *DeviceConfigurationKeyValueListData) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// CmiDeviceConfigurationKeyValueListDataSelectors message container
type CmiDeviceConfigurationKeyValueListDataSelectors struct {
	DeviceConfigurationKeyValueListDataSelectors DeviceConfigurationKeyValueListDataSelectors `json:"deviceConfigurationKeyValueListDataSelectors"`
}

// DeviceConfigurationKeyValueListDataSelectors element
type DeviceConfigurationKeyValueListDataSelectors struct {
	KeyId *DeviceConfigurationKeyIdType `json:"keyId,omitempty"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m DeviceConfigurationKeyValueListDataSelectors) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *DeviceConfigurationKeyValueListDataSelectors) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// CmiDeviceConfigurationKeyValueDescriptionData message container
type CmiDeviceConfigurationKeyValueDescriptionData struct {
	DeviceConfigurationKeyValueDescriptionData DeviceConfigurationKeyValueDescriptionData `json:"deviceConfigurationKeyValueDescriptionData"`
}

// DeviceConfigurationKeyValueDescriptionData element
type DeviceConfigurationKeyValueDescriptionData struct {
	KeyId       *DeviceConfigurationKeyIdType        `json:"keyId,omitempty"`
	KeyName     string                               `json:"keyName"`
	ValueType   *DeviceConfigurationKeyValueTypeType `json:"valueType,omitempty"`
	Unit        string                               `json:"unit"`
	Label       *LabelType                           `json:"label,omitempty"`
	Description *DescriptionType                     `json:"description,omitempty"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m DeviceConfigurationKeyValueDescriptionData) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *DeviceConfigurationKeyValueDescriptionData) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// CmiDeviceConfigurationKeyValueDescriptionDataElements message container
type CmiDeviceConfigurationKeyValueDescriptionDataElements struct {
	DeviceConfigurationKeyValueDescriptionDataElements DeviceConfigurationKeyValueDescriptionDataElements `json:"deviceConfigurationKeyValueDescriptionDataElements"`
}

// DeviceConfigurationKeyValueDescriptionDataElements element
type DeviceConfigurationKeyValueDescriptionDataElements struct {
	KeyId       *ElementTagType `json:"keyId,omitempty"`
	KeyName     *ElementTagType `json:"keyName,omitempty"`
	ValueType   *ElementTagType `json:"valueType,omitempty"`
	Unit        *ElementTagType `json:"unit,omitempty"`
	Label       *ElementTagType `json:"label,omitempty"`
	Description *ElementTagType `json:"description,omitempty"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m DeviceConfigurationKeyValueDescriptionDataElements) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *DeviceConfigurationKeyValueDescriptionDataElements) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// CmiDeviceConfigurationKeyValueDescriptionListData message container
type CmiDeviceConfigurationKeyValueDescriptionListData struct {
	DeviceConfigurationKeyValueDescriptionListData DeviceConfigurationKeyValueDescriptionListData `json:"deviceConfigurationKeyValueDescriptionListData"`
}

// DeviceConfigurationKeyValueDescriptionListData element
type DeviceConfigurationKeyValueDescriptionListData struct {
	DeviceConfigurationKeyValueDescriptionData []DeviceConfigurationKeyValueDescriptionDataType `json:"deviceConfigurationKeyValueDescriptionData"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m DeviceConfigurationKeyValueDescriptionListData) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *DeviceConfigurationKeyValueDescriptionListData) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// CmiDeviceConfigurationKeyValueDescriptionListDataSelectors message container
type CmiDeviceConfigurationKeyValueDescriptionListDataSelectors struct {
	DeviceConfigurationKeyValueDescriptionListDataSelectors DeviceConfigurationKeyValueDescriptionListDataSelectors `json:"deviceConfigurationKeyValueDescriptionListDataSelectors"`
}

// DeviceConfigurationKeyValueDescriptionListDataSelectors element
type DeviceConfigurationKeyValueDescriptionListDataSelectors struct {
	KeyId   *DeviceConfigurationKeyIdType `json:"keyId,omitempty"`
	KeyName string                        `json:"keyName"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m DeviceConfigurationKeyValueDescriptionListDataSelectors) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *DeviceConfigurationKeyValueDescriptionListDataSelectors) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// CmiDeviceConfigurationKeyValueConstraintsData message container
type CmiDeviceConfigurationKeyValueConstraintsData struct {
	DeviceConfigurationKeyValueConstraintsData DeviceConfigurationKeyValueConstraintsData `json:"deviceConfigurationKeyValueConstraintsData"`
}

// DeviceConfigurationKeyValueConstraintsData element
type DeviceConfigurationKeyValueConstraintsData struct {
	KeyId         *DeviceConfigurationKeyIdType         `json:"keyId,omitempty"`
	ValueRangeMin *DeviceConfigurationKeyValueValueType `json:"valueRangeMin,omitempty"`
	ValueRangeMax *DeviceConfigurationKeyValueValueType `json:"valueRangeMax,omitempty"`
	ValueStepSize *DeviceConfigurationKeyValueValueType `json:"valueStepSize,omitempty"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m DeviceConfigurationKeyValueConstraintsData) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *DeviceConfigurationKeyValueConstraintsData) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// CmiDeviceConfigurationKeyValueConstraintsListData message container
type CmiDeviceConfigurationKeyValueConstraintsListData struct {
	DeviceConfigurationKeyValueConstraintsListData DeviceConfigurationKeyValueConstraintsListData `json:"deviceConfigurationKeyValueConstraintsListData"`
}

// DeviceConfigurationKeyValueConstraintsListData element
type DeviceConfigurationKeyValueConstraintsListData struct {
	DeviceConfigurationKeyValueConstraintsData []DeviceConfigurationKeyValueConstraintsDataType `json:"deviceConfigurationKeyValueConstraintsData"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m DeviceConfigurationKeyValueConstraintsListData) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *DeviceConfigurationKeyValueConstraintsListData) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// CmiDeviceConfigurationKeyValueConstraintsListDataSelectors message container
type CmiDeviceConfigurationKeyValueConstraintsListDataSelectors struct {
	DeviceConfigurationKeyValueConstraintsListDataSelectors DeviceConfigurationKeyValueConstraintsListDataSelectors `json:"deviceConfigurationKeyValueConstraintsListDataSelectors"`
}

// DeviceConfigurationKeyValueConstraintsListDataSelectors element
type DeviceConfigurationKeyValueConstraintsListDataSelectors struct {
	KeyId *DeviceConfigurationKeyIdType `json:"keyId,omitempty"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m DeviceConfigurationKeyValueConstraintsListDataSelectors) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *DeviceConfigurationKeyValueConstraintsListDataSelectors) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// CmiDirectControlActivityData message container
type CmiDirectControlActivityData struct {
	DirectControlActivityData DirectControlActivityData `json:"directControlActivityData"`
}

// DirectControlActivityData element
type DirectControlActivityData struct {
	Timestamp                 string               `json:"timestamp"`
	ActivityState             string               `json:"activityState"`
	IsActivityStateChangeable *bool                `json:"isActivityStateChangeable,omitempty"`
	EnergyMode                string               `json:"energyMode"`
	IsEnergyModeChangeable    *bool                `json:"isEnergyModeChangeable,omitempty"`
	Power                     *ScaledNumberType    `json:"power,omitempty"`
	IsPowerChangeable         *bool                `json:"isPowerChangeable,omitempty"`
	Energy                    *ScaledNumberType    `json:"energy,omitempty"`
	IsEnergyChangeable        *bool                `json:"isEnergyChangeable,omitempty"`
	SequenceId                *PowerSequenceIdType `json:"sequenceId,omitempty"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m DirectControlActivityData) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *DirectControlActivityData) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// CmiDirectControlActivityListData message container
type CmiDirectControlActivityListData struct {
	DirectControlActivityListData DirectControlActivityListData `json:"directControlActivityListData"`
}

// DirectControlActivityListData element
type DirectControlActivityListData struct {
	DirectControlActivityData []DirectControlActivityDataType `json:"directControlActivityData"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m DirectControlActivityListData) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *DirectControlActivityListData) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// CmiDirectControlActivityListDataSelectors message container
type CmiDirectControlActivityListDataSelectors struct {
	DirectControlActivityListDataSelectors DirectControlActivityListDataSelectors `json:"directControlActivityListDataSelectors"`
}

// DirectControlActivityListDataSelectors element
type DirectControlActivityListDataSelectors struct {
	TimestampInterval *TimestampIntervalType `json:"timestampInterval,omitempty"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m DirectControlActivityListDataSelectors) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *DirectControlActivityListDataSelectors) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// CmiDirectControlDescriptionData message container
type CmiDirectControlDescriptionData struct {
	DirectControlDescriptionData DirectControlDescriptionData `json:"directControlDescriptionData"`
}

// DirectControlDescriptionData element
type DirectControlDescriptionData struct {
	PositiveEnergyDirection string `json:"positiveEnergyDirection"`
	PowerUnit               string `json:"powerUnit"`
	EnergyUnit              string `json:"energyUnit"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m DirectControlDescriptionData) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *DirectControlDescriptionData) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// CmiDirectControlDescriptionDataElements message container
type CmiDirectControlDescriptionDataElements struct {
	DirectControlDescriptionDataElements DirectControlDescriptionDataElements `json:"directControlDescriptionDataElements"`
}

// DirectControlDescriptionDataElements element
type DirectControlDescriptionDataElements struct {
	PositiveEnergyDirection *ElementTagType `json:"positiveEnergyDirection,omitempty"`
	PowerUnit               *ElementTagType `json:"powerUnit,omitempty"`
	EnergyUnit              *ElementTagType `json:"energyUnit,omitempty"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m DirectControlDescriptionDataElements) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *DirectControlDescriptionDataElements) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// CmiElectricalConnectionParameterDescriptionData message container
type CmiElectricalConnectionParameterDescriptionData struct {
	ElectricalConnectionParameterDescriptionData ElectricalConnectionParameterDescriptionData `json:"electricalConnectionParameterDescriptionData"`
}

// ElectricalConnectionParameterDescriptionData element
type ElectricalConnectionParameterDescriptionData struct {
	ElectricalConnectionId  *ElectricalConnectionIdType          `json:"electricalConnectionId,omitempty"`
	ParameterId             *ElectricalConnectionParameterIdType `json:"parameterId,omitempty"`
	MeasurementId           *MeasurementIdType                   `json:"measurementId,omitempty"`
	VoltageType             string                               `json:"voltageType"`
	AcMeasuredPhases        string                               `json:"acMeasuredPhases"`
	AcMeasuredInReferenceTo string                               `json:"acMeasuredInReferenceTo"`
	AcMeasurementType       string                               `json:"acMeasurementType"`
	AcMeasurementVariant    string                               `json:"acMeasurementVariant"`
	AcMeasuredHarmonic      *uint8                               `json:"acMeasuredHarmonic,omitempty"`
	ScopeType               string                               `json:"scopeType"`
	Label                   *LabelType                           `json:"label,omitempty"`
	Description             *DescriptionType                     `json:"description,omitempty"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m ElectricalConnectionParameterDescriptionData) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *ElectricalConnectionParameterDescriptionData) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// CmiElectricalConnectionParameterDescriptionDataElements message container
type CmiElectricalConnectionParameterDescriptionDataElements struct {
	ElectricalConnectionParameterDescriptionDataElements ElectricalConnectionParameterDescriptionDataElements `json:"electricalConnectionParameterDescriptionDataElements"`
}

// ElectricalConnectionParameterDescriptionDataElements element
type ElectricalConnectionParameterDescriptionDataElements struct {
	ElectricalConnectionId  *ElementTagType `json:"electricalConnectionId,omitempty"`
	ParameterId             *ElementTagType `json:"parameterId,omitempty"`
	MeasurementId           *ElementTagType `json:"measurementId,omitempty"`
	VoltageType             *ElementTagType `json:"voltageType,omitempty"`
	AcMeasuredPhases        *ElementTagType `json:"acMeasuredPhases,omitempty"`
	AcMeasuredInReferenceTo *ElementTagType `json:"acMeasuredInReferenceTo,omitempty"`
	AcMeasurementType       *ElementTagType `json:"acMeasurementType,omitempty"`
	AcMeasurementVariant    *ElementTagType `json:"acMeasurementVariant,omitempty"`
	AcMeasuredHarmonic      *ElementTagType `json:"acMeasuredHarmonic,omitempty"`
	ScopeType               *ElementTagType `json:"scopeType,omitempty"`
	Label                   *ElementTagType `json:"label,omitempty"`
	Description             *ElementTagType `json:"description,omitempty"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m ElectricalConnectionParameterDescriptionDataElements) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *ElectricalConnectionParameterDescriptionDataElements) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// CmiElectricalConnectionParameterDescriptionListData message container
type CmiElectricalConnectionParameterDescriptionListData struct {
	ElectricalConnectionParameterDescriptionListData ElectricalConnectionParameterDescriptionListData `json:"electricalConnectionParameterDescriptionListData"`
}

// ElectricalConnectionParameterDescriptionListData element
type ElectricalConnectionParameterDescriptionListData struct {
	ElectricalConnectionParameterDescriptionData []ElectricalConnectionParameterDescriptionDataType `json:"electricalConnectionParameterDescriptionData"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m ElectricalConnectionParameterDescriptionListData) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *ElectricalConnectionParameterDescriptionListData) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// CmiElectricalConnectionParameterDescriptionListDataSelectors message container
type CmiElectricalConnectionParameterDescriptionListDataSelectors struct {
	ElectricalConnectionParameterDescriptionListDataSelectors ElectricalConnectionParameterDescriptionListDataSelectors `json:"electricalConnectionParameterDescriptionListDataSelectors"`
}

// ElectricalConnectionParameterDescriptionListDataSelectors element
type ElectricalConnectionParameterDescriptionListDataSelectors struct {
	ElectricalConnectionId *ElectricalConnectionIdType          `json:"electricalConnectionId,omitempty"`
	ParameterId            *ElectricalConnectionParameterIdType `json:"parameterId,omitempty"`
	MeasurementId          *MeasurementIdType                   `json:"measurementId,omitempty"`
	ScopeType              string                               `json:"scopeType"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m ElectricalConnectionParameterDescriptionListDataSelectors) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *ElectricalConnectionParameterDescriptionListDataSelectors) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// CmiElectricalConnectionPermittedValueSetData message container
type CmiElectricalConnectionPermittedValueSetData struct {
	ElectricalConnectionPermittedValueSetData ElectricalConnectionPermittedValueSetData `json:"electricalConnectionPermittedValueSetData"`
}

// ElectricalConnectionPermittedValueSetData element
type ElectricalConnectionPermittedValueSetData struct {
	ElectricalConnectionId *ElectricalConnectionIdType          `json:"electricalConnectionId,omitempty"`
	ParameterId            *ElectricalConnectionParameterIdType `json:"parameterId,omitempty"`
	PermittedValueSet      []ScaledNumberSetType                `json:"permittedValueSet"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m ElectricalConnectionPermittedValueSetData) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *ElectricalConnectionPermittedValueSetData) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// CmiElectricalConnectionPermittedValueSetListData message container
type CmiElectricalConnectionPermittedValueSetListData struct {
	ElectricalConnectionPermittedValueSetListData ElectricalConnectionPermittedValueSetListData `json:"electricalConnectionPermittedValueSetListData"`
}

// ElectricalConnectionPermittedValueSetListData element
type ElectricalConnectionPermittedValueSetListData struct {
	ElectricalConnectionPermittedValueSetData []ElectricalConnectionPermittedValueSetDataType `json:"electricalConnectionPermittedValueSetData"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m ElectricalConnectionPermittedValueSetListData) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *ElectricalConnectionPermittedValueSetListData) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// CmiElectricalConnectionPermittedValueSetListDataSelectors message container
type CmiElectricalConnectionPermittedValueSetListDataSelectors struct {
	ElectricalConnectionPermittedValueSetListDataSelectors ElectricalConnectionPermittedValueSetListDataSelectors `json:"electricalConnectionPermittedValueSetListDataSelectors"`
}

// ElectricalConnectionPermittedValueSetListDataSelectors element
type ElectricalConnectionPermittedValueSetListDataSelectors struct {
	ElectricalConnectionId *ElectricalConnectionIdType          `json:"electricalConnectionId,omitempty"`
	ParameterId            *ElectricalConnectionParameterIdType `json:"parameterId,omitempty"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m ElectricalConnectionPermittedValueSetListDataSelectors) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *ElectricalConnectionPermittedValueSetListDataSelectors) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// CmiElectricalConnectionStateData message container
type CmiElectricalConnectionStateData struct {
	ElectricalConnectionStateData ElectricalConnectionStateData `json:"electricalConnectionStateData"`
}

// ElectricalConnectionStateData element
type ElectricalConnectionStateData struct {
	ElectricalConnectionId *ElectricalConnectionIdType `json:"electricalConnectionId,omitempty"`
	Timestamp              string                      `json:"timestamp"`
	CurrentEnergyMode      string                      `json:"currentEnergyMode"`
	ConsumptionTime        string                      `json:"consumptionTime"`
	ProductionTime         string                      `json:"productionTime"`
	TotalConsumptionTime   string                      `json:"totalConsumptionTime"`
	TotalProductionTime    string                      `json:"totalProductionTime"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m ElectricalConnectionStateData) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *ElectricalConnectionStateData) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// CmiElectricalConnectionStateDataElements message container
type CmiElectricalConnectionStateDataElements struct {
	ElectricalConnectionStateDataElements ElectricalConnectionStateDataElements `json:"electricalConnectionStateDataElements"`
}

// ElectricalConnectionStateDataElements element
type ElectricalConnectionStateDataElements struct {
	ElectricalConnectionId *ElementTagType `json:"electricalConnectionId,omitempty"`
	Timestamp              *ElementTagType `json:"timestamp,omitempty"`
	CurrentEnergyMode      *ElementTagType `json:"currentEnergyMode,omitempty"`
	ConsumptionTime        *ElementTagType `json:"consumptionTime,omitempty"`
	ProductionTime         *ElementTagType `json:"productionTime,omitempty"`
	TotalConsumptionTime   *ElementTagType `json:"totalConsumptionTime,omitempty"`
	TotalProductionTime    *ElementTagType `json:"totalProductionTime,omitempty"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m ElectricalConnectionStateDataElements) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *ElectricalConnectionStateDataElements) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// CmiElectricalConnectionStateListData message container
type CmiElectricalConnectionStateListData struct {
	ElectricalConnectionStateListData ElectricalConnectionStateListData `json:"electricalConnectionStateListData"`
}

// ElectricalConnectionStateListData element
type ElectricalConnectionStateListData struct {
	ElectricalConnectionStateData []ElectricalConnectionStateDataType `json:"electricalConnectionStateData"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m ElectricalConnectionStateListData) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *ElectricalConnectionStateListData) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// CmiElectricalConnectionStateListDataSelectors message container
type CmiElectricalConnectionStateListDataSelectors struct {
	ElectricalConnectionStateListDataSelectors ElectricalConnectionStateListDataSelectors `json:"electricalConnectionStateListDataSelectors"`
}

// ElectricalConnectionStateListDataSelectors element
type ElectricalConnectionStateListDataSelectors struct {
	ElectricalConnectionId *ElectricalConnectionIdType `json:"electricalConnectionId,omitempty"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m ElectricalConnectionStateListDataSelectors) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *ElectricalConnectionStateListDataSelectors) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// CmiElectricalConnectionDescriptionData message container
type CmiElectricalConnectionDescriptionData struct {
	ElectricalConnectionDescriptionData ElectricalConnectionDescriptionData `json:"electricalConnectionDescriptionData"`
}

// ElectricalConnectionDescriptionData element
type ElectricalConnectionDescriptionData struct {
	ElectricalConnectionId  *ElectricalConnectionIdType `json:"electricalConnectionId,omitempty"`
	PowerSupplyType         string                      `json:"powerSupplyType"`
	AcConnectedPhases       *uint                       `json:"acConnectedPhases,omitempty"`
	AcRmsPeriodDuration     string                      `json:"acRmsPeriodDuration"`
	PositiveEnergyDirection string                      `json:"positiveEnergyDirection"`
	ScopeType               string                      `json:"scopeType"`
	Label                   *LabelType                  `json:"label,omitempty"`
	Description             *DescriptionType            `json:"description,omitempty"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m ElectricalConnectionDescriptionData) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *ElectricalConnectionDescriptionData) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// CmiElectricalConnectionDescriptionDataElements message container
type CmiElectricalConnectionDescriptionDataElements struct {
	ElectricalConnectionDescriptionDataElements ElectricalConnectionDescriptionDataElements `json:"electricalConnectionDescriptionDataElements"`
}

// ElectricalConnectionDescriptionDataElements element
type ElectricalConnectionDescriptionDataElements struct {
	ElectricalConnectionId  *ElementTagType `json:"electricalConnectionId,omitempty"`
	PowerSupplyType         *ElementTagType `json:"powerSupplyType,omitempty"`
	AcConnectedPhases       *ElementTagType `json:"acConnectedPhases,omitempty"`
	AcRmsPeriodDuration     *ElementTagType `json:"acRmsPeriodDuration,omitempty"`
	PositiveEnergyDirection *ElementTagType `json:"positiveEnergyDirection,omitempty"`
	ScopeType               *ElementTagType `json:"scopeType,omitempty"`
	Label                   *ElementTagType `json:"label,omitempty"`
	Description             *ElementTagType `json:"description,omitempty"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m ElectricalConnectionDescriptionDataElements) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *ElectricalConnectionDescriptionDataElements) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// CmiElectricalConnectionDescriptionListData message container
type CmiElectricalConnectionDescriptionListData struct {
	ElectricalConnectionDescriptionListData ElectricalConnectionDescriptionListData `json:"electricalConnectionDescriptionListData"`
}

// ElectricalConnectionDescriptionListData element
type ElectricalConnectionDescriptionListData struct {
	ElectricalConnectionDescriptionData []ElectricalConnectionDescriptionDataType `json:"electricalConnectionDescriptionData"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m ElectricalConnectionDescriptionListData) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *ElectricalConnectionDescriptionListData) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// CmiElectricalConnectionDescriptionListDataSelectors message container
type CmiElectricalConnectionDescriptionListDataSelectors struct {
	ElectricalConnectionDescriptionListDataSelectors ElectricalConnectionDescriptionListDataSelectors `json:"electricalConnectionDescriptionListDataSelectors"`
}

// ElectricalConnectionDescriptionListDataSelectors element
type ElectricalConnectionDescriptionListDataSelectors struct {
	ElectricalConnectionId *ElectricalConnectionIdType `json:"electricalConnectionId,omitempty"`
	ScopeType              string                      `json:"scopeType"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m ElectricalConnectionDescriptionListDataSelectors) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *ElectricalConnectionDescriptionListDataSelectors) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// CmiHvacSystemFunctionData message container
type CmiHvacSystemFunctionData struct {
	HvacSystemFunctionData HvacSystemFunctionData `json:"hvacSystemFunctionData"`
}

// HvacSystemFunctionData element
type HvacSystemFunctionData struct {
	SystemFunctionId            *HvacSystemFunctionIdType `json:"systemFunctionId,omitempty"`
	CurrentOperationModeId      *HvacOperationModeIdType  `json:"currentOperationModeId,omitempty"`
	IsOperationModeIdChangeable *bool                     `json:"isOperationModeIdChangeable,omitempty"`
	CurrentSetpointId           *SetpointIdType           `json:"currentSetpointId,omitempty"`
	IsSetpointIdChangeable      *bool                     `json:"isSetpointIdChangeable,omitempty"`
	IsOverrunActive             *bool                     `json:"isOverrunActive,omitempty"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m HvacSystemFunctionData) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *HvacSystemFunctionData) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// CmiHvacSystemFunctionDataElements message container
type CmiHvacSystemFunctionDataElements struct {
	HvacSystemFunctionDataElements HvacSystemFunctionDataElements `json:"hvacSystemFunctionDataElements"`
}

// HvacSystemFunctionDataElements element
type HvacSystemFunctionDataElements struct {
	SystemFunctionId            *ElementTagType `json:"systemFunctionId,omitempty"`
	CurrentOperationModeId      *ElementTagType `json:"currentOperationModeId,omitempty"`
	IsOperationModeIdChangeable *ElementTagType `json:"isOperationModeIdChangeable,omitempty"`
	CurrentSetpointId           *ElementTagType `json:"currentSetpointId,omitempty"`
	IsSetpointIdChangeable      *ElementTagType `json:"isSetpointIdChangeable,omitempty"`
	IsOverrunActive             *ElementTagType `json:"isOverrunActive,omitempty"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m HvacSystemFunctionDataElements) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *HvacSystemFunctionDataElements) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// CmiHvacSystemFunctionListData message container
type CmiHvacSystemFunctionListData struct {
	HvacSystemFunctionListData HvacSystemFunctionListData `json:"hvacSystemFunctionListData"`
}

// HvacSystemFunctionListData element
type HvacSystemFunctionListData struct {
	HvacSystemFunctionData []HvacSystemFunctionDataType `json:"hvacSystemFunctionData"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m HvacSystemFunctionListData) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *HvacSystemFunctionListData) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// CmiHvacSystemFunctionListDataSelectors message container
type CmiHvacSystemFunctionListDataSelectors struct {
	HvacSystemFunctionListDataSelectors HvacSystemFunctionListDataSelectors `json:"hvacSystemFunctionListDataSelectors"`
}

// HvacSystemFunctionListDataSelectors element
type HvacSystemFunctionListDataSelectors struct {
	SystemFunctionId *HvacSystemFunctionIdType `json:"systemFunctionId,omitempty"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m HvacSystemFunctionListDataSelectors) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *HvacSystemFunctionListDataSelectors) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// CmiHvacSystemFunctionOperationModeRelationData message container
type CmiHvacSystemFunctionOperationModeRelationData struct {
	HvacSystemFunctionOperationModeRelationData HvacSystemFunctionOperationModeRelationData `json:"hvacSystemFunctionOperationModeRelationData"`
}

// HvacSystemFunctionOperationModeRelationData element
type HvacSystemFunctionOperationModeRelationData struct {
	SystemFunctionId *HvacSystemFunctionIdType `json:"systemFunctionId,omitempty"`
	OperationModeId  []HvacOperationModeIdType `json:"operationModeId"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m HvacSystemFunctionOperationModeRelationData) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *HvacSystemFunctionOperationModeRelationData) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// CmiHvacSystemFunctionOperationModeRelationDataElements message container
type CmiHvacSystemFunctionOperationModeRelationDataElements struct {
	HvacSystemFunctionOperationModeRelationDataElements HvacSystemFunctionOperationModeRelationDataElements `json:"hvacSystemFunctionOperationModeRelationDataElements"`
}

// HvacSystemFunctionOperationModeRelationDataElements element
type HvacSystemFunctionOperationModeRelationDataElements struct {
	SystemFunctionId *ElementTagType `json:"systemFunctionId,omitempty"`
	OperationModeId  *ElementTagType `json:"operationModeId,omitempty"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m HvacSystemFunctionOperationModeRelationDataElements) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *HvacSystemFunctionOperationModeRelationDataElements) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// CmiHvacSystemFunctionOperationModeRelationListData message container
type CmiHvacSystemFunctionOperationModeRelationListData struct {
	HvacSystemFunctionOperationModeRelationListData HvacSystemFunctionOperationModeRelationListData `json:"hvacSystemFunctionOperationModeRelationListData"`
}

// HvacSystemFunctionOperationModeRelationListData element
type HvacSystemFunctionOperationModeRelationListData struct {
	HvacSystemFunctionOperationModeRelationData []HvacSystemFunctionOperationModeRelationDataType `json:"hvacSystemFunctionOperationModeRelationData"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m HvacSystemFunctionOperationModeRelationListData) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *HvacSystemFunctionOperationModeRelationListData) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// CmiHvacSystemFunctionOperationModeRelationListDataSelectors message container
type CmiHvacSystemFunctionOperationModeRelationListDataSelectors struct {
	HvacSystemFunctionOperationModeRelationListDataSelectors HvacSystemFunctionOperationModeRelationListDataSelectors `json:"hvacSystemFunctionOperationModeRelationListDataSelectors"`
}

// HvacSystemFunctionOperationModeRelationListDataSelectors element
type HvacSystemFunctionOperationModeRelationListDataSelectors struct {
	SystemFunctionId *HvacSystemFunctionIdType `json:"systemFunctionId,omitempty"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m HvacSystemFunctionOperationModeRelationListDataSelectors) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *HvacSystemFunctionOperationModeRelationListDataSelectors) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// CmiHvacSystemFunctionSetpointRelationData message container
type CmiHvacSystemFunctionSetpointRelationData struct {
	HvacSystemFunctionSetpointRelationData HvacSystemFunctionSetpointRelationData `json:"hvacSystemFunctionSetpointRelationData"`
}

// HvacSystemFunctionSetpointRelationData element
type HvacSystemFunctionSetpointRelationData struct {
	SystemFunctionId *HvacSystemFunctionIdType `json:"systemFunctionId,omitempty"`
	OperationModeId  *HvacOperationModeIdType  `json:"operationModeId,omitempty"`
	SetpointId       []SetpointIdType          `json:"setpointId"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m HvacSystemFunctionSetpointRelationData) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *HvacSystemFunctionSetpointRelationData) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// CmiHvacSystemFunctionSetpointRelationDataElements message container
type CmiHvacSystemFunctionSetpointRelationDataElements struct {
	HvacSystemFunctionSetpointRelationDataElements HvacSystemFunctionSetpointRelationDataElements `json:"hvacSystemFunctionSetpointRelationDataElements"`
}

// HvacSystemFunctionSetpointRelationDataElements element
type HvacSystemFunctionSetpointRelationDataElements struct {
	SystemFunctionId *ElementTagType `json:"systemFunctionId,omitempty"`
	OperationModeId  *ElementTagType `json:"operationModeId,omitempty"`
	SetpointId       *ElementTagType `json:"setpointId,omitempty"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m HvacSystemFunctionSetpointRelationDataElements) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *HvacSystemFunctionSetpointRelationDataElements) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// CmiHvacSystemFunctionSetpointRelationListData message container
type CmiHvacSystemFunctionSetpointRelationListData struct {
	HvacSystemFunctionSetpointRelationListData HvacSystemFunctionSetpointRelationListData `json:"hvacSystemFunctionSetpointRelationListData"`
}

// HvacSystemFunctionSetpointRelationListData element
type HvacSystemFunctionSetpointRelationListData struct {
	HvacSystemFunctionSetpointRelationData []HvacSystemFunctionSetpointRelationDataType `json:"hvacSystemFunctionSetpointRelationData"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m HvacSystemFunctionSetpointRelationListData) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *HvacSystemFunctionSetpointRelationListData) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// CmiHvacSystemFunctionSetpointRelationListDataSelectors message container
type CmiHvacSystemFunctionSetpointRelationListDataSelectors struct {
	HvacSystemFunctionSetpointRelationListDataSelectors HvacSystemFunctionSetpointRelationListDataSelectors `json:"hvacSystemFunctionSetpointRelationListDataSelectors"`
}

// HvacSystemFunctionSetpointRelationListDataSelectors element
type HvacSystemFunctionSetpointRelationListDataSelectors struct {
	SystemFunctionId *HvacSystemFunctionIdType `json:"systemFunctionId,omitempty"`
	OperationModeId  *HvacOperationModeIdType  `json:"operationModeId,omitempty"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m HvacSystemFunctionSetpointRelationListDataSelectors) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *HvacSystemFunctionSetpointRelationListDataSelectors) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// CmiHvacSystemFunctionPowerSequenceRelationData message container
type CmiHvacSystemFunctionPowerSequenceRelationData struct {
	HvacSystemFunctionPowerSequenceRelationData HvacSystemFunctionPowerSequenceRelationData `json:"hvacSystemFunctionPowerSequenceRelationData"`
}

// HvacSystemFunctionPowerSequenceRelationData element
type HvacSystemFunctionPowerSequenceRelationData struct {
	SystemFunctionId *HvacSystemFunctionIdType `json:"systemFunctionId,omitempty"`
	SequenceId       []PowerSequenceIdType     `json:"sequenceId"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m HvacSystemFunctionPowerSequenceRelationData) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *HvacSystemFunctionPowerSequenceRelationData) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// CmiHvacSystemFunctionPowerSequenceRelationDataElements message container
type CmiHvacSystemFunctionPowerSequenceRelationDataElements struct {
	HvacSystemFunctionPowerSequenceRelationDataElements HvacSystemFunctionPowerSequenceRelationDataElements `json:"hvacSystemFunctionPowerSequenceRelationDataElements"`
}

// HvacSystemFunctionPowerSequenceRelationDataElements element
type HvacSystemFunctionPowerSequenceRelationDataElements struct {
	SystemFunctionId *ElementTagType `json:"systemFunctionId,omitempty"`
	SequenceId       *ElementTagType `json:"sequenceId,omitempty"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m HvacSystemFunctionPowerSequenceRelationDataElements) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *HvacSystemFunctionPowerSequenceRelationDataElements) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// CmiHvacSystemFunctionPowerSequenceRelationListData message container
type CmiHvacSystemFunctionPowerSequenceRelationListData struct {
	HvacSystemFunctionPowerSequenceRelationListData HvacSystemFunctionPowerSequenceRelationListData `json:"hvacSystemFunctionPowerSequenceRelationListData"`
}

// HvacSystemFunctionPowerSequenceRelationListData element
type HvacSystemFunctionPowerSequenceRelationListData struct {
	HvacSystemFunctionPowerSequenceRelationData []HvacSystemFunctionPowerSequenceRelationDataType `json:"hvacSystemFunctionPowerSequenceRelationData"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m HvacSystemFunctionPowerSequenceRelationListData) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *HvacSystemFunctionPowerSequenceRelationListData) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// CmiHvacSystemFunctionPowerSequenceRelationListDataSelectors message container
type CmiHvacSystemFunctionPowerSequenceRelationListDataSelectors struct {
	HvacSystemFunctionPowerSequenceRelationListDataSelectors HvacSystemFunctionPowerSequenceRelationListDataSelectors `json:"hvacSystemFunctionPowerSequenceRelationListDataSelectors"`
}

// HvacSystemFunctionPowerSequenceRelationListDataSelectors element
type HvacSystemFunctionPowerSequenceRelationListDataSelectors struct {
	SystemFunctionId *HvacSystemFunctionIdType `json:"systemFunctionId,omitempty"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m HvacSystemFunctionPowerSequenceRelationListDataSelectors) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *HvacSystemFunctionPowerSequenceRelationListDataSelectors) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// CmiHvacSystemFunctionDescriptionData message container
type CmiHvacSystemFunctionDescriptionData struct {
	HvacSystemFunctionDescriptionData HvacSystemFunctionDescriptionData `json:"hvacSystemFunctionDescriptionData"`
}

// HvacSystemFunctionDescriptionData element
type HvacSystemFunctionDescriptionData struct {
	SystemFunctionId   *HvacSystemFunctionIdType `json:"systemFunctionId,omitempty"`
	SystemFunctionType string                    `json:"systemFunctionType"`
	Label              *LabelType                `json:"label,omitempty"`
	Description        *DescriptionType          `json:"description,omitempty"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m HvacSystemFunctionDescriptionData) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *HvacSystemFunctionDescriptionData) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// CmiHvacSystemFunctionDescriptionDataElements message container
type CmiHvacSystemFunctionDescriptionDataElements struct {
	HvacSystemFunctionDescriptionDataElements HvacSystemFunctionDescriptionDataElements `json:"hvacSystemFunctionDescriptionDataElements"`
}

// HvacSystemFunctionDescriptionDataElements element
type HvacSystemFunctionDescriptionDataElements struct {
	SystemFunctionId   *ElementTagType `json:"systemFunctionId,omitempty"`
	SystemFunctionType *ElementTagType `json:"systemFunctionType,omitempty"`
	Label              *ElementTagType `json:"label,omitempty"`
	Description        *ElementTagType `json:"description,omitempty"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m HvacSystemFunctionDescriptionDataElements) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *HvacSystemFunctionDescriptionDataElements) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// CmiHvacSystemFunctionDescriptionListData message container
type CmiHvacSystemFunctionDescriptionListData struct {
	HvacSystemFunctionDescriptionListData HvacSystemFunctionDescriptionListData `json:"hvacSystemFunctionDescriptionListData"`
}

// HvacSystemFunctionDescriptionListData element
type HvacSystemFunctionDescriptionListData struct {
	HvacSystemFunctionDescriptionData []HvacSystemFunctionDescriptionDataType `json:"hvacSystemFunctionDescriptionData"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m HvacSystemFunctionDescriptionListData) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *HvacSystemFunctionDescriptionListData) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// CmiHvacSystemFunctionDescriptionListDataSelectors message container
type CmiHvacSystemFunctionDescriptionListDataSelectors struct {
	HvacSystemFunctionDescriptionListDataSelectors HvacSystemFunctionDescriptionListDataSelectors `json:"hvacSystemFunctionDescriptionListDataSelectors"`
}

// HvacSystemFunctionDescriptionListDataSelectors element
type HvacSystemFunctionDescriptionListDataSelectors struct {
	SystemFunctionId *HvacSystemFunctionIdType `json:"systemFunctionId,omitempty"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m HvacSystemFunctionDescriptionListDataSelectors) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *HvacSystemFunctionDescriptionListDataSelectors) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// CmiHvacOperationModeDescriptionData message container
type CmiHvacOperationModeDescriptionData struct {
	HvacOperationModeDescriptionData HvacOperationModeDescriptionData `json:"hvacOperationModeDescriptionData"`
}

// HvacOperationModeDescriptionData element
type HvacOperationModeDescriptionData struct {
	OperationModeId   *HvacOperationModeIdType `json:"operationModeId,omitempty"`
	OperationModeType string                   `json:"operationModeType"`
	Label             *LabelType               `json:"label,omitempty"`
	Description       *DescriptionType         `json:"description,omitempty"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m HvacOperationModeDescriptionData) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *HvacOperationModeDescriptionData) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// CmiHvacOperationModeDescriptionDataElements message container
type CmiHvacOperationModeDescriptionDataElements struct {
	HvacOperationModeDescriptionDataElements HvacOperationModeDescriptionDataElements `json:"hvacOperationModeDescriptionDataElements"`
}

// HvacOperationModeDescriptionDataElements element
type HvacOperationModeDescriptionDataElements struct {
	OperationModeId   *ElementTagType `json:"operationModeId,omitempty"`
	OperationModeType *ElementTagType `json:"operationModeType,omitempty"`
	Label             *ElementTagType `json:"label,omitempty"`
	Description       *ElementTagType `json:"description,omitempty"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m HvacOperationModeDescriptionDataElements) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *HvacOperationModeDescriptionDataElements) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// CmiHvacOperationModeDescriptionListData message container
type CmiHvacOperationModeDescriptionListData struct {
	HvacOperationModeDescriptionListData HvacOperationModeDescriptionListData `json:"hvacOperationModeDescriptionListData"`
}

// HvacOperationModeDescriptionListData element
type HvacOperationModeDescriptionListData struct {
	HvacOperationModeDescriptionData []HvacOperationModeDescriptionDataType `json:"hvacOperationModeDescriptionData"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m HvacOperationModeDescriptionListData) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *HvacOperationModeDescriptionListData) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// CmiHvacOperationModeDescriptionListDataSelectors message container
type CmiHvacOperationModeDescriptionListDataSelectors struct {
	HvacOperationModeDescriptionListDataSelectors HvacOperationModeDescriptionListDataSelectors `json:"hvacOperationModeDescriptionListDataSelectors"`
}

// HvacOperationModeDescriptionListDataSelectors element
type HvacOperationModeDescriptionListDataSelectors struct {
	OperationModeId *HvacOperationModeIdType `json:"operationModeId,omitempty"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m HvacOperationModeDescriptionListDataSelectors) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *HvacOperationModeDescriptionListDataSelectors) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// CmiHvacOverrunData message container
type CmiHvacOverrunData struct {
	HvacOverrunData HvacOverrunData `json:"hvacOverrunData"`
}

// HvacOverrunData element
type HvacOverrunData struct {
	OverrunId                 *HvacOverrunIdType `json:"overrunId,omitempty"`
	OverrunStatus             string             `json:"overrunStatus"`
	TimeTableId               *TimeTableIdType   `json:"timeTableId,omitempty"`
	IsOverrunStatusChangeable *bool              `json:"isOverrunStatusChangeable,omitempty"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m HvacOverrunData) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *HvacOverrunData) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// CmiHvacOverrunDataElements message container
type CmiHvacOverrunDataElements struct {
	HvacOverrunDataElements HvacOverrunDataElements `json:"hvacOverrunDataElements"`
}

// HvacOverrunDataElements element
type HvacOverrunDataElements struct {
	OverrunId                 *ElementTagType `json:"overrunId,omitempty"`
	OverrunStatus             *ElementTagType `json:"overrunStatus,omitempty"`
	TimeTableId               *ElementTagType `json:"timeTableId,omitempty"`
	IsOverrunStatusChangeable *ElementTagType `json:"isOverrunStatusChangeable,omitempty"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m HvacOverrunDataElements) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *HvacOverrunDataElements) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// CmiHvacOverrunListData message container
type CmiHvacOverrunListData struct {
	HvacOverrunListData HvacOverrunListData `json:"hvacOverrunListData"`
}

// HvacOverrunListData element
type HvacOverrunListData struct {
	HvacOverrunData []HvacOverrunDataType `json:"hvacOverrunData"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m HvacOverrunListData) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *HvacOverrunListData) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// CmiHvacOverrunListDataSelectors message container
type CmiHvacOverrunListDataSelectors struct {
	HvacOverrunListDataSelectors HvacOverrunListDataSelectors `json:"hvacOverrunListDataSelectors"`
}

// HvacOverrunListDataSelectors element
type HvacOverrunListDataSelectors struct {
	OverrunId *HvacOverrunIdType `json:"overrunId,omitempty"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m HvacOverrunListDataSelectors) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *HvacOverrunListDataSelectors) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// CmiHvacOverrunDescriptionData message container
type CmiHvacOverrunDescriptionData struct {
	HvacOverrunDescriptionData HvacOverrunDescriptionData `json:"hvacOverrunDescriptionData"`
}

// HvacOverrunDescriptionData element
type HvacOverrunDescriptionData struct {
	OverrunId                *HvacOverrunIdType         `json:"overrunId,omitempty"`
	OverrunType              string                     `json:"overrunType"`
	AffectedSystemFunctionId []HvacSystemFunctionIdType `json:"affectedSystemFunctionId"`
	Label                    *LabelType                 `json:"label,omitempty"`
	Description              *DescriptionType           `json:"description,omitempty"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m HvacOverrunDescriptionData) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *HvacOverrunDescriptionData) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// CmiHvacOverrunDescriptionDataElements message container
type CmiHvacOverrunDescriptionDataElements struct {
	HvacOverrunDescriptionDataElements HvacOverrunDescriptionDataElements `json:"hvacOverrunDescriptionDataElements"`
}

// HvacOverrunDescriptionDataElements element
type HvacOverrunDescriptionDataElements struct {
	OverrunId                *ElementTagType `json:"overrunId,omitempty"`
	OverrunType              *ElementTagType `json:"overrunType,omitempty"`
	AffectedSystemFunctionId *ElementTagType `json:"affectedSystemFunctionId,omitempty"`
	Label                    *ElementTagType `json:"label,omitempty"`
	Description              *ElementTagType `json:"description,omitempty"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m HvacOverrunDescriptionDataElements) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *HvacOverrunDescriptionDataElements) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// CmiHvacOverrunDescriptionListData message container
type CmiHvacOverrunDescriptionListData struct {
	HvacOverrunDescriptionListData HvacOverrunDescriptionListData `json:"hvacOverrunDescriptionListData"`
}

// HvacOverrunDescriptionListData element
type HvacOverrunDescriptionListData struct {
	HvacOverrunDescriptionData []HvacOverrunDescriptionDataType `json:"hvacOverrunDescriptionData"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m HvacOverrunDescriptionListData) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *HvacOverrunDescriptionListData) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// CmiHvacOverrunDescriptionListDataSelectors message container
type CmiHvacOverrunDescriptionListDataSelectors struct {
	HvacOverrunDescriptionListDataSelectors HvacOverrunDescriptionListDataSelectors `json:"hvacOverrunDescriptionListDataSelectors"`
}

// HvacOverrunDescriptionListDataSelectors element
type HvacOverrunDescriptionListDataSelectors struct {
	OverrunId *HvacOverrunIdType `json:"overrunId,omitempty"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m HvacOverrunDescriptionListDataSelectors) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *HvacOverrunDescriptionListDataSelectors) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// CmiIdentificationData message container
type CmiIdentificationData struct {
	IdentificationData IdentificationData `json:"identificationData"`
}

// IdentificationData element
type IdentificationData struct {
	IdentificationId    *IdentificationIdType    `json:"identificationId,omitempty"`
	IdentificationType  string                   `json:"identificationType"`
	IdentificationValue *IdentificationValueType `json:"identificationValue,omitempty"`
	Authorized          *bool                    `json:"authorized,omitempty"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m IdentificationData) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *IdentificationData) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// CmiIdentificationDataElements message container
type CmiIdentificationDataElements struct {
	IdentificationDataElements IdentificationDataElements `json:"identificationDataElements"`
}

// IdentificationDataElements element
type IdentificationDataElements struct {
	IdentificationId    *ElementTagType `json:"identificationId,omitempty"`
	IdentificationType  *ElementTagType `json:"identificationType,omitempty"`
	IdentificationValue *ElementTagType `json:"identificationValue,omitempty"`
	Authorized          *ElementTagType `json:"authorized,omitempty"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m IdentificationDataElements) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *IdentificationDataElements) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// CmiIdentificationListData message container
type CmiIdentificationListData struct {
	IdentificationListData IdentificationListData `json:"identificationListData"`
}

// IdentificationListData element
type IdentificationListData struct {
	IdentificationData []IdentificationDataType `json:"identificationData"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m IdentificationListData) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *IdentificationListData) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// CmiIdentificationListDataSelectors message container
type CmiIdentificationListDataSelectors struct {
	IdentificationListDataSelectors IdentificationListDataSelectors `json:"identificationListDataSelectors"`
}

// IdentificationListDataSelectors element
type IdentificationListDataSelectors struct {
	IdentificationId   *IdentificationIdType `json:"identificationId,omitempty"`
	IdentificationType string                `json:"identificationType"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m IdentificationListDataSelectors) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *IdentificationListDataSelectors) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// CmiIncentiveTableData message container
type CmiIncentiveTableData struct {
	IncentiveTableData IncentiveTableData `json:"incentiveTableData"`
}

// IncentiveTableData element
type IncentiveTableData struct {
	IncentiveTable []IncentiveTableType `json:"incentiveTable"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m IncentiveTableData) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *IncentiveTableData) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// CmiIncentiveTableDataSelectors message container
type CmiIncentiveTableDataSelectors struct {
	IncentiveTableDataSelectors IncentiveTableDataSelectors `json:"incentiveTableDataSelectors"`
}

// IncentiveTableDataSelectors element
type IncentiveTableDataSelectors struct {
	Tariff *Tariff `json:"tariff,omitempty"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m IncentiveTableDataSelectors) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *IncentiveTableDataSelectors) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// CmiIncentiveTableDescriptionData message container
type CmiIncentiveTableDescriptionData struct {
	IncentiveTableDescriptionData IncentiveTableDescriptionData `json:"incentiveTableDescriptionData"`
}

// IncentiveTableDescriptionData element
type IncentiveTableDescriptionData struct {
	IncentiveTableDescription []IncentiveTableDescriptionType `json:"incentiveTableDescription"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m IncentiveTableDescriptionData) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *IncentiveTableDescriptionData) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// CmiIncentiveTableDescriptionDataSelectors message container
type CmiIncentiveTableDescriptionDataSelectors struct {
	IncentiveTableDescriptionDataSelectors IncentiveTableDescriptionDataSelectors `json:"incentiveTableDescriptionDataSelectors"`
}

// IncentiveTableDescriptionDataSelectors element
type IncentiveTableDescriptionDataSelectors struct {
	TariffDescription *TariffDescriptionListDataSelectorsType `json:"tariffDescription,omitempty"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m IncentiveTableDescriptionDataSelectors) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *IncentiveTableDescriptionDataSelectors) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// CmiIncentiveTableConstraintsData message container
type CmiIncentiveTableConstraintsData struct {
	IncentiveTableConstraintsData IncentiveTableConstraintsData `json:"incentiveTableConstraintsData"`
}

// IncentiveTableConstraintsData element
type IncentiveTableConstraintsData struct {
	IncentiveTableConstraints []IncentiveTableConstraintsType `json:"incentiveTableConstraints"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m IncentiveTableConstraintsData) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *IncentiveTableConstraintsData) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// CmiIncentiveTableConstraintsDataSelectors message container
type CmiIncentiveTableConstraintsDataSelectors struct {
	IncentiveTableConstraintsDataSelectors IncentiveTableConstraintsDataSelectors `json:"incentiveTableConstraintsDataSelectors"`
}

// IncentiveTableConstraintsDataSelectors element
type IncentiveTableConstraintsDataSelectors struct {
	Tariff *Tariff `json:"tariff,omitempty"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m IncentiveTableConstraintsDataSelectors) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *IncentiveTableConstraintsDataSelectors) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// CmiLoadControlNodeData message container
type CmiLoadControlNodeData struct {
	LoadControlNodeData LoadControlNodeData `json:"loadControlNodeData"`
}

// LoadControlNodeData element
type LoadControlNodeData struct {
	IsNodeRemoteControllable *bool `json:"isNodeRemoteControllable,omitempty"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m LoadControlNodeData) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *LoadControlNodeData) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// CmiLoadControlNodeDataElements message container
type CmiLoadControlNodeDataElements struct {
	LoadControlNodeDataElements LoadControlNodeDataElements `json:"loadControlNodeDataElements"`
}

// LoadControlNodeDataElements element
type LoadControlNodeDataElements struct {
	IsNodeRemoteControllable *ElementTagType `json:"isNodeRemoteControllable,omitempty"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m LoadControlNodeDataElements) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *LoadControlNodeDataElements) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// CmiLoadControlEventData message container
type CmiLoadControlEventData struct {
	LoadControlEventData LoadControlEventData `json:"loadControlEventData"`
}

// LoadControlEventData element
type LoadControlEventData struct {
	Timestamp          string                  `json:"timestamp"`
	EventId            *LoadControlEventIdType `json:"eventId,omitempty"`
	EventActionConsume string                  `json:"eventActionConsume"`
	EventActionProduce string                  `json:"eventActionProduce"`
	TimePeriod         *TimePeriodType         `json:"timePeriod,omitempty"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m LoadControlEventData) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *LoadControlEventData) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// CmiLoadControlEventListData message container
type CmiLoadControlEventListData struct {
	LoadControlEventListData LoadControlEventListData `json:"loadControlEventListData"`
}

// LoadControlEventListData element
type LoadControlEventListData struct {
	LoadControlEventData []LoadControlEventDataType `json:"loadControlEventData"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m LoadControlEventListData) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *LoadControlEventListData) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// CmiLoadControlEventListDataSelectors message container
type CmiLoadControlEventListDataSelectors struct {
	LoadControlEventListDataSelectors LoadControlEventListDataSelectors `json:"loadControlEventListDataSelectors"`
}

// LoadControlEventListDataSelectors element
type LoadControlEventListDataSelectors struct {
	TimestampInterval *TimestampIntervalType  `json:"timestampInterval,omitempty"`
	EventId           *LoadControlEventIdType `json:"eventId,omitempty"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m LoadControlEventListDataSelectors) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *LoadControlEventListDataSelectors) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// CmiLoadControlStateData message container
type CmiLoadControlStateData struct {
	LoadControlStateData LoadControlStateData `json:"loadControlStateData"`
}

// LoadControlStateData element
type LoadControlStateData struct {
	Timestamp                 string                  `json:"timestamp"`
	EventId                   *LoadControlEventIdType `json:"eventId,omitempty"`
	EventStateConsume         string                  `json:"eventStateConsume"`
	AppliedEventActionConsume string                  `json:"appliedEventActionConsume"`
	EventStateProduce         string                  `json:"eventStateProduce"`
	AppliedEventActionProduce string                  `json:"appliedEventActionProduce"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m LoadControlStateData) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *LoadControlStateData) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// CmiLoadControlStateDataElements message container
type CmiLoadControlStateDataElements struct {
	LoadControlStateDataElements LoadControlStateDataElements `json:"loadControlStateDataElements"`
}

// LoadControlStateDataElements element
type LoadControlStateDataElements struct {
	Timestamp                 *ElementTagType `json:"timestamp,omitempty"`
	EventId                   *ElementTagType `json:"eventId,omitempty"`
	EventStateConsume         *ElementTagType `json:"eventStateConsume,omitempty"`
	AppliedEventActionConsume *ElementTagType `json:"appliedEventActionConsume,omitempty"`
	EventStateProduce         *ElementTagType `json:"eventStateProduce,omitempty"`
	AppliedEventActionProduce *ElementTagType `json:"appliedEventActionProduce,omitempty"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m LoadControlStateDataElements) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *LoadControlStateDataElements) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// CmiLoadControlStateListData message container
type CmiLoadControlStateListData struct {
	LoadControlStateListData LoadControlStateListData `json:"loadControlStateListData"`
}

// LoadControlStateListData element
type LoadControlStateListData struct {
	LoadControlStateData []LoadControlStateDataType `json:"loadControlStateData"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m LoadControlStateListData) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *LoadControlStateListData) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// CmiLoadControlStateListDataSelectors message container
type CmiLoadControlStateListDataSelectors struct {
	LoadControlStateListDataSelectors LoadControlStateListDataSelectors `json:"loadControlStateListDataSelectors"`
}

// LoadControlStateListDataSelectors element
type LoadControlStateListDataSelectors struct {
	TimestampInterval *TimestampIntervalType  `json:"timestampInterval,omitempty"`
	EventId           *LoadControlEventIdType `json:"eventId,omitempty"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m LoadControlStateListDataSelectors) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *LoadControlStateListDataSelectors) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// CmiLoadControlLimitData message container
type CmiLoadControlLimitData struct {
	LoadControlLimitData LoadControlLimitData `json:"loadControlLimitData"`
}

// LoadControlLimitData element
type LoadControlLimitData struct {
	LimitId           *LoadControlLimitIdType `json:"limitId,omitempty"`
	IsLimitChangeable *bool                   `json:"isLimitChangeable,omitempty"`
	IsLimitActive     *bool                   `json:"isLimitActive,omitempty"`
	TimePeriod        *TimePeriodType         `json:"timePeriod,omitempty"`
	Value             *ScaledNumberType       `json:"value,omitempty"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m LoadControlLimitData) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *LoadControlLimitData) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// CmiLoadControlLimitListData message container
type CmiLoadControlLimitListData struct {
	LoadControlLimitListData LoadControlLimitListData `json:"loadControlLimitListData"`
}

// LoadControlLimitListData element
type LoadControlLimitListData struct {
	LoadControlLimitData []LoadControlLimitDataType `json:"loadControlLimitData"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m LoadControlLimitListData) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *LoadControlLimitListData) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// CmiLoadControlLimitListDataSelectors message container
type CmiLoadControlLimitListDataSelectors struct {
	LoadControlLimitListDataSelectors LoadControlLimitListDataSelectors `json:"loadControlLimitListDataSelectors"`
}

// LoadControlLimitListDataSelectors element
type LoadControlLimitListDataSelectors struct {
	LimitId *LoadControlLimitIdType `json:"limitId,omitempty"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m LoadControlLimitListDataSelectors) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *LoadControlLimitListDataSelectors) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// CmiLoadControlLimitConstraintsData message container
type CmiLoadControlLimitConstraintsData struct {
	LoadControlLimitConstraintsData LoadControlLimitConstraintsData `json:"loadControlLimitConstraintsData"`
}

// LoadControlLimitConstraintsData element
type LoadControlLimitConstraintsData struct {
	LimitId       *LoadControlLimitIdType `json:"limitId,omitempty"`
	ValueRangeMin *ScaledNumberType       `json:"valueRangeMin,omitempty"`
	ValueRangeMax *ScaledNumberType       `json:"valueRangeMax,omitempty"`
	ValueStepSize *ScaledNumberType       `json:"valueStepSize,omitempty"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m LoadControlLimitConstraintsData) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *LoadControlLimitConstraintsData) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// CmiLoadControlLimitConstraintsListData message container
type CmiLoadControlLimitConstraintsListData struct {
	LoadControlLimitConstraintsListData LoadControlLimitConstraintsListData `json:"loadControlLimitConstraintsListData"`
}

// LoadControlLimitConstraintsListData element
type LoadControlLimitConstraintsListData struct {
	LoadControlLimitConstraintsData []LoadControlLimitConstraintsDataType `json:"loadControlLimitConstraintsData"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m LoadControlLimitConstraintsListData) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *LoadControlLimitConstraintsListData) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// CmiLoadControlLimitConstraintsListDataSelectors message container
type CmiLoadControlLimitConstraintsListDataSelectors struct {
	LoadControlLimitConstraintsListDataSelectors LoadControlLimitConstraintsListDataSelectors `json:"loadControlLimitConstraintsListDataSelectors"`
}

// LoadControlLimitConstraintsListDataSelectors element
type LoadControlLimitConstraintsListDataSelectors struct {
	LimitId *LoadControlLimitIdType `json:"limitId,omitempty"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m LoadControlLimitConstraintsListDataSelectors) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *LoadControlLimitConstraintsListDataSelectors) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// CmiLoadControlLimitDescriptionData message container
type CmiLoadControlLimitDescriptionData struct {
	LoadControlLimitDescriptionData LoadControlLimitDescriptionData `json:"loadControlLimitDescriptionData"`
}

// LoadControlLimitDescriptionData element
type LoadControlLimitDescriptionData struct {
	LimitId        *LoadControlLimitIdType `json:"limitId,omitempty"`
	LimitType      string                  `json:"limitType"`
	LimitCategory  string                  `json:"limitCategory"`
	LimitDirection string                  `json:"limitDirection"`
	MeasurementId  *MeasurementIdType      `json:"measurementId,omitempty"`
	Unit           string                  `json:"unit"`
	ScopeType      string                  `json:"scopeType"`
	Label          *LabelType              `json:"label,omitempty"`
	Description    *DescriptionType        `json:"description,omitempty"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m LoadControlLimitDescriptionData) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *LoadControlLimitDescriptionData) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// CmiLoadControlLimitDescriptionDataElements message container
type CmiLoadControlLimitDescriptionDataElements struct {
	LoadControlLimitDescriptionDataElements LoadControlLimitDescriptionDataElements `json:"loadControlLimitDescriptionDataElements"`
}

// LoadControlLimitDescriptionDataElements element
type LoadControlLimitDescriptionDataElements struct {
	LimitId        *ElementTagType `json:"limitId,omitempty"`
	LimitType      *ElementTagType `json:"limitType,omitempty"`
	LimitCategory  *ElementTagType `json:"limitCategory,omitempty"`
	LimitDirection *ElementTagType `json:"limitDirection,omitempty"`
	MeasurementId  *ElementTagType `json:"measurementId,omitempty"`
	Unit           *ElementTagType `json:"unit,omitempty"`
	ScopeType      *ElementTagType `json:"scopeType,omitempty"`
	Label          *ElementTagType `json:"label,omitempty"`
	Description    *ElementTagType `json:"description,omitempty"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m LoadControlLimitDescriptionDataElements) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *LoadControlLimitDescriptionDataElements) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// CmiLoadControlLimitDescriptionListData message container
type CmiLoadControlLimitDescriptionListData struct {
	LoadControlLimitDescriptionListData LoadControlLimitDescriptionListData `json:"loadControlLimitDescriptionListData"`
}

// LoadControlLimitDescriptionListData element
type LoadControlLimitDescriptionListData struct {
	LoadControlLimitDescriptionData []LoadControlLimitDescriptionDataType `json:"loadControlLimitDescriptionData"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m LoadControlLimitDescriptionListData) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *LoadControlLimitDescriptionListData) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// CmiLoadControlLimitDescriptionListDataSelectors message container
type CmiLoadControlLimitDescriptionListDataSelectors struct {
	LoadControlLimitDescriptionListDataSelectors LoadControlLimitDescriptionListDataSelectors `json:"loadControlLimitDescriptionListDataSelectors"`
}

// LoadControlLimitDescriptionListDataSelectors element
type LoadControlLimitDescriptionListDataSelectors struct {
	LimitId        *LoadControlLimitIdType `json:"limitId,omitempty"`
	LimitType      string                  `json:"limitType"`
	LimitDirection string                  `json:"limitDirection"`
	MeasurementId  *MeasurementIdType      `json:"measurementId,omitempty"`
	ScopeType      string                  `json:"scopeType"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m LoadControlLimitDescriptionListDataSelectors) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *LoadControlLimitDescriptionListDataSelectors) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// CmiMeasurementData message container
type CmiMeasurementData struct {
	MeasurementData MeasurementData `json:"measurementData"`
}

// MeasurementData element
type MeasurementData struct {
	MeasurementId    *MeasurementIdType `json:"measurementId,omitempty"`
	ValueType        string             `json:"valueType"`
	Timestamp        string             `json:"timestamp"`
	Value            *ScaledNumberType  `json:"value,omitempty"`
	EvaluationPeriod *TimePeriodType    `json:"evaluationPeriod,omitempty"`
	ValueSource      string             `json:"valueSource"`
	ValueTendency    string             `json:"valueTendency"`
	ValueState       string             `json:"valueState"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m MeasurementData) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *MeasurementData) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// CmiMeasurementListData message container
type CmiMeasurementListData struct {
	MeasurementListData MeasurementListData `json:"measurementListData"`
}

// MeasurementListData element
type MeasurementListData struct {
	MeasurementData []MeasurementDataType `json:"measurementData"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m MeasurementListData) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *MeasurementListData) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// CmiMeasurementListDataSelectors message container
type CmiMeasurementListDataSelectors struct {
	MeasurementListDataSelectors MeasurementListDataSelectors `json:"measurementListDataSelectors"`
}

// MeasurementListDataSelectors element
type MeasurementListDataSelectors struct {
	MeasurementId     *MeasurementIdType     `json:"measurementId,omitempty"`
	ValueType         string                 `json:"valueType"`
	TimestampInterval *TimestampIntervalType `json:"timestampInterval,omitempty"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m MeasurementListDataSelectors) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *MeasurementListDataSelectors) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// CmiMeasurementConstraintsData message container
type CmiMeasurementConstraintsData struct {
	MeasurementConstraintsData MeasurementConstraintsData `json:"measurementConstraintsData"`
}

// MeasurementConstraintsData element
type MeasurementConstraintsData struct {
	MeasurementId *MeasurementIdType `json:"measurementId,omitempty"`
	ValueRangeMin *ScaledNumberType  `json:"valueRangeMin,omitempty"`
	ValueRangeMax *ScaledNumberType  `json:"valueRangeMax,omitempty"`
	ValueStepSize *ScaledNumberType  `json:"valueStepSize,omitempty"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m MeasurementConstraintsData) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *MeasurementConstraintsData) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// CmiMeasurementConstraintsListData message container
type CmiMeasurementConstraintsListData struct {
	MeasurementConstraintsListData MeasurementConstraintsListData `json:"measurementConstraintsListData"`
}

// MeasurementConstraintsListData element
type MeasurementConstraintsListData struct {
	MeasurementConstraintsData []MeasurementConstraintsDataType `json:"measurementConstraintsData"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m MeasurementConstraintsListData) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *MeasurementConstraintsListData) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// CmiMeasurementConstraintsListDataSelectors message container
type CmiMeasurementConstraintsListDataSelectors struct {
	MeasurementConstraintsListDataSelectors MeasurementConstraintsListDataSelectors `json:"measurementConstraintsListDataSelectors"`
}

// MeasurementConstraintsListDataSelectors element
type MeasurementConstraintsListDataSelectors struct {
	MeasurementId *MeasurementIdType `json:"measurementId,omitempty"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m MeasurementConstraintsListDataSelectors) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *MeasurementConstraintsListDataSelectors) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// CmiMeasurementDescriptionData message container
type CmiMeasurementDescriptionData struct {
	MeasurementDescriptionData MeasurementDescriptionData `json:"measurementDescriptionData"`
}

// MeasurementDescriptionData element
type MeasurementDescriptionData struct {
	MeasurementId    *MeasurementIdType `json:"measurementId,omitempty"`
	MeasurementType  string             `json:"measurementType"`
	CommodityType    string             `json:"commodityType"`
	Unit             string             `json:"unit"`
	CalibrationValue *ScaledNumberType  `json:"calibrationValue,omitempty"`
	ScopeType        string             `json:"scopeType"`
	Label            *LabelType         `json:"label,omitempty"`
	Description      *DescriptionType   `json:"description,omitempty"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m MeasurementDescriptionData) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *MeasurementDescriptionData) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// CmiMeasurementDescriptionListData message container
type CmiMeasurementDescriptionListData struct {
	MeasurementDescriptionListData MeasurementDescriptionListData `json:"measurementDescriptionListData"`
}

// MeasurementDescriptionListData element
type MeasurementDescriptionListData struct {
	MeasurementDescriptionData []MeasurementDescriptionDataType `json:"measurementDescriptionData"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m MeasurementDescriptionListData) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *MeasurementDescriptionListData) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// CmiMeasurementDescriptionListDataSelectors message container
type CmiMeasurementDescriptionListDataSelectors struct {
	MeasurementDescriptionListDataSelectors MeasurementDescriptionListDataSelectors `json:"measurementDescriptionListDataSelectors"`
}

// MeasurementDescriptionListDataSelectors element
type MeasurementDescriptionListDataSelectors struct {
	MeasurementId   *MeasurementIdType `json:"measurementId,omitempty"`
	MeasurementType string             `json:"measurementType"`
	CommodityType   string             `json:"commodityType"`
	ScopeType       string             `json:"scopeType"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m MeasurementDescriptionListDataSelectors) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *MeasurementDescriptionListDataSelectors) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// CmiMeasurementThresholdRelationData message container
type CmiMeasurementThresholdRelationData struct {
	MeasurementThresholdRelationData MeasurementThresholdRelationData `json:"measurementThresholdRelationData"`
}

// MeasurementThresholdRelationData element
type MeasurementThresholdRelationData struct {
	MeasurementId *MeasurementIdType `json:"measurementId,omitempty"`
	ThresholdId   []ThresholdIdType  `json:"thresholdId"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m MeasurementThresholdRelationData) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *MeasurementThresholdRelationData) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// CmiMeasurementThresholdRelationDataElements message container
type CmiMeasurementThresholdRelationDataElements struct {
	MeasurementThresholdRelationDataElements MeasurementThresholdRelationDataElements `json:"measurementThresholdRelationDataElements"`
}

// MeasurementThresholdRelationDataElements element
type MeasurementThresholdRelationDataElements struct {
	MeasurementId *ElementTagType `json:"measurementId,omitempty"`
	ThresholdId   *ElementTagType `json:"thresholdId,omitempty"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m MeasurementThresholdRelationDataElements) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *MeasurementThresholdRelationDataElements) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// CmiMeasurementThresholdRelationListData message container
type CmiMeasurementThresholdRelationListData struct {
	MeasurementThresholdRelationListData MeasurementThresholdRelationListData `json:"measurementThresholdRelationListData"`
}

// MeasurementThresholdRelationListData element
type MeasurementThresholdRelationListData struct {
	MeasurementThresholdRelationData []MeasurementThresholdRelationDataType `json:"measurementThresholdRelationData"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m MeasurementThresholdRelationListData) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *MeasurementThresholdRelationListData) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// CmiMeasurementThresholdRelationListDataSelectors message container
type CmiMeasurementThresholdRelationListDataSelectors struct {
	MeasurementThresholdRelationListDataSelectors MeasurementThresholdRelationListDataSelectors `json:"measurementThresholdRelationListDataSelectors"`
}

// MeasurementThresholdRelationListDataSelectors element
type MeasurementThresholdRelationListDataSelectors struct {
	MeasurementId *MeasurementIdType `json:"measurementId,omitempty"`
	ThresholdId   *ThresholdIdType   `json:"thresholdId,omitempty"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m MeasurementThresholdRelationListDataSelectors) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *MeasurementThresholdRelationListDataSelectors) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// CmiMessagingData message container
type CmiMessagingData struct {
	MessagingData MessagingData `json:"messagingData"`
}

// MessagingData element
type MessagingData struct {
	Timestamp       string                 `json:"timestamp"`
	MessagingNumber *MessagingNumberType   `json:"messagingNumber,omitempty"`
	Type            string                 `json:"type"`
	Text            *MessagingDataTextType `json:"text,omitempty"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m MessagingData) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *MessagingData) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// CmiMessagingDataElements message container
type CmiMessagingDataElements struct {
	MessagingDataElements MessagingDataElements `json:"messagingDataElements"`
}

// MessagingDataElements element
type MessagingDataElements struct {
	Timestamp       *ElementTagType `json:"timestamp,omitempty"`
	MessagingNumber *ElementTagType `json:"messagingNumber,omitempty"`
	Type            *ElementTagType `json:"type,omitempty"`
	Text            *ElementTagType `json:"text,omitempty"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m MessagingDataElements) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *MessagingDataElements) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// CmiMessagingListData message container
type CmiMessagingListData struct {
	MessagingListData MessagingListData `json:"messagingListData"`
}

// MessagingListData element
type MessagingListData struct {
	MessagingData []MessagingDataType `json:"messagingData"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m MessagingListData) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *MessagingListData) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// CmiMessagingListDataSelectors message container
type CmiMessagingListDataSelectors struct {
	MessagingListDataSelectors MessagingListDataSelectors `json:"messagingListDataSelectors"`
}

// MessagingListDataSelectors element
type MessagingListDataSelectors struct {
	TimestampInterval *TimestampIntervalType `json:"timestampInterval,omitempty"`
	MessagingNumber   *MessagingNumberType   `json:"messagingNumber,omitempty"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m MessagingListDataSelectors) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *MessagingListDataSelectors) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// CmiNetworkManagementAddNodeCall message container
type CmiNetworkManagementAddNodeCall struct {
	NetworkManagementAddNodeCall NetworkManagementAddNodeCall `json:"networkManagementAddNodeCall"`
}

// NetworkManagementAddNodeCall element
type NetworkManagementAddNodeCall struct {
	NodeAddress *FeatureAddressType                  `json:"nodeAddress,omitempty"`
	NativeSetup *NetworkManagementNativeSetupType    `json:"nativeSetup,omitempty"`
	Timeout     *NetworkManagementProcessTimeoutType `json:"timeout,omitempty"`
	Label       *LabelType                           `json:"label,omitempty"`
	Description *DescriptionType                     `json:"description,omitempty"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m NetworkManagementAddNodeCall) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *NetworkManagementAddNodeCall) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// CmiNetworkManagementRemoveNodeCall message container
type CmiNetworkManagementRemoveNodeCall struct {
	NetworkManagementRemoveNodeCall NetworkManagementRemoveNodeCall `json:"networkManagementRemoveNodeCall"`
}

// NetworkManagementRemoveNodeCall element
type NetworkManagementRemoveNodeCall struct {
	NodeAddress *FeatureAddressType                  `json:"nodeAddress,omitempty"`
	Timeout     *NetworkManagementProcessTimeoutType `json:"timeout,omitempty"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m NetworkManagementRemoveNodeCall) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *NetworkManagementRemoveNodeCall) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// CmiNetworkManagementModifyNodeCall message container
type CmiNetworkManagementModifyNodeCall struct {
	NetworkManagementModifyNodeCall NetworkManagementModifyNodeCall `json:"networkManagementModifyNodeCall"`
}

// NetworkManagementModifyNodeCall element
type NetworkManagementModifyNodeCall struct {
	NodeAddress *FeatureAddressType                  `json:"nodeAddress,omitempty"`
	NativeSetup *NetworkManagementNativeSetupType    `json:"nativeSetup,omitempty"`
	Timeout     *NetworkManagementProcessTimeoutType `json:"timeout,omitempty"`
	Label       *LabelType                           `json:"label,omitempty"`
	Description *DescriptionType                     `json:"description,omitempty"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m NetworkManagementModifyNodeCall) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *NetworkManagementModifyNodeCall) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// CmiNetworkManagementScanNetworkCall message container
type CmiNetworkManagementScanNetworkCall struct {
	NetworkManagementScanNetworkCall NetworkManagementScanNetworkCall `json:"networkManagementScanNetworkCall"`
}

// NetworkManagementScanNetworkCall element
type NetworkManagementScanNetworkCall struct {
	ScanSetup *NetworkManagementScanSetupType      `json:"scanSetup,omitempty"`
	Timeout   *NetworkManagementProcessTimeoutType `json:"timeout,omitempty"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m NetworkManagementScanNetworkCall) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *NetworkManagementScanNetworkCall) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// CmiNetworkManagementScanNetworkCallElements message container
type CmiNetworkManagementScanNetworkCallElements struct {
	NetworkManagementScanNetworkCallElements NetworkManagementScanNetworkCallElements `json:"networkManagementScanNetworkCallElements"`
}

// NetworkManagementScanNetworkCallElements element
type NetworkManagementScanNetworkCallElements struct {
	ScanSetup *ElementTagType `json:"scanSetup,omitempty"`
	Timeout   *ElementTagType `json:"timeout,omitempty"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m NetworkManagementScanNetworkCallElements) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *NetworkManagementScanNetworkCallElements) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// CmiNetworkManagementDiscoverCall message container
type CmiNetworkManagementDiscoverCall struct {
	NetworkManagementDiscoverCall NetworkManagementDiscoverCall `json:"networkManagementDiscoverCall"`
}

// NetworkManagementDiscoverCall element
type NetworkManagementDiscoverCall struct {
	DiscoverAddress *FeatureAddressType `json:"discoverAddress,omitempty"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m NetworkManagementDiscoverCall) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *NetworkManagementDiscoverCall) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// CmiNetworkManagementAbortCall message container
type CmiNetworkManagementAbortCall struct {
	NetworkManagementAbortCall NetworkManagementAbortCall `json:"networkManagementAbortCall"`
}

// NetworkManagementAbortCall element
type NetworkManagementAbortCall struct {
}

// MarshalJSON is the SHIP serialization marshaller
func (m NetworkManagementAbortCall) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *NetworkManagementAbortCall) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// CmiNetworkManagementAbortCallElements message container
type CmiNetworkManagementAbortCallElements struct {
	NetworkManagementAbortCallElements NetworkManagementAbortCallElements `json:"networkManagementAbortCallElements"`
}

// NetworkManagementAbortCallElements element
type NetworkManagementAbortCallElements struct {
}

// MarshalJSON is the SHIP serialization marshaller
func (m NetworkManagementAbortCallElements) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *NetworkManagementAbortCallElements) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// CmiNetworkManagementProcessStateData message container
type CmiNetworkManagementProcessStateData struct {
	NetworkManagementProcessStateData NetworkManagementProcessStateData `json:"networkManagementProcessStateData"`
}

// NetworkManagementProcessStateData element
type NetworkManagementProcessStateData struct {
	State       *NetworkManagementProcessStateStateType `json:"state,omitempty"`
	Description *DescriptionType                        `json:"description,omitempty"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m NetworkManagementProcessStateData) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *NetworkManagementProcessStateData) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// CmiNetworkManagementProcessStateDataElements message container
type CmiNetworkManagementProcessStateDataElements struct {
	NetworkManagementProcessStateDataElements NetworkManagementProcessStateDataElements `json:"networkManagementProcessStateDataElements"`
}

// NetworkManagementProcessStateDataElements element
type NetworkManagementProcessStateDataElements struct {
	State       *ElementTagType `json:"state,omitempty"`
	Description *ElementTagType `json:"description,omitempty"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m NetworkManagementProcessStateDataElements) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *NetworkManagementProcessStateDataElements) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// CmiNetworkManagementJoiningModeData message container
type CmiNetworkManagementJoiningModeData struct {
	NetworkManagementJoiningModeData NetworkManagementJoiningModeData `json:"networkManagementJoiningModeData"`
}

// NetworkManagementJoiningModeData element
type NetworkManagementJoiningModeData struct {
	Setup *NetworkManagementSetupType `json:"setup,omitempty"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m NetworkManagementJoiningModeData) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *NetworkManagementJoiningModeData) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// CmiNetworkManagementJoiningModeDataElements message container
type CmiNetworkManagementJoiningModeDataElements struct {
	NetworkManagementJoiningModeDataElements NetworkManagementJoiningModeDataElements `json:"networkManagementJoiningModeDataElements"`
}

// NetworkManagementJoiningModeDataElements element
type NetworkManagementJoiningModeDataElements struct {
	Setup *ElementTagType `json:"setup,omitempty"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m NetworkManagementJoiningModeDataElements) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *NetworkManagementJoiningModeDataElements) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// CmiNetworkManagementReportCandidateData message container
type CmiNetworkManagementReportCandidateData struct {
	NetworkManagementReportCandidateData NetworkManagementReportCandidateData `json:"networkManagementReportCandidateData"`
}

// NetworkManagementReportCandidateData element
type NetworkManagementReportCandidateData struct {
	CandidateSetup    *NetworkManagementCandidateSetupType `json:"candidateSetup,omitempty"`
	SetupUsableForAdd *bool                                `json:"setupUsableForAdd,omitempty"`
	Label             *LabelType                           `json:"label,omitempty"`
	Description       *DescriptionType                     `json:"description,omitempty"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m NetworkManagementReportCandidateData) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *NetworkManagementReportCandidateData) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// CmiNetworkManagementReportCandidateDataElements message container
type CmiNetworkManagementReportCandidateDataElements struct {
	NetworkManagementReportCandidateDataElements NetworkManagementReportCandidateDataElements `json:"networkManagementReportCandidateDataElements"`
}

// NetworkManagementReportCandidateDataElements element
type NetworkManagementReportCandidateDataElements struct {
	CandidateSetup    *ElementTagType `json:"candidateSetup,omitempty"`
	SetupUsableForAdd *ElementTagType `json:"setupUsableForAdd,omitempty"`
	Label             *ElementTagType `json:"label,omitempty"`
	Description       *ElementTagType `json:"description,omitempty"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m NetworkManagementReportCandidateDataElements) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *NetworkManagementReportCandidateDataElements) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// CmiNetworkManagementDeviceDescriptionData message container
type CmiNetworkManagementDeviceDescriptionData struct {
	NetworkManagementDeviceDescriptionData NetworkManagementDeviceDescriptionData `json:"networkManagementDeviceDescriptionData"`
}

// NetworkManagementDeviceDescriptionData element
type NetworkManagementDeviceDescriptionData struct {
	DeviceAddress                       *DeviceAddressType                                        `json:"deviceAddress,omitempty"`
	DeviceType                          string                                                    `json:"deviceType"`
	NetworkManagementResponsibleAddress *FeatureAddressType                                       `json:"networkManagementResponsibleAddress,omitempty"`
	NativeSetup                         *NetworkManagementNativeSetupType                         `json:"nativeSetup,omitempty"`
	TechnologyAddress                   *NetworkManagementTechnologyAddressType                   `json:"technologyAddress,omitempty"`
	CommunicationsTechnologyInformation *NetworkManagementCommunicationsTechnologyInformationType `json:"communicationsTechnologyInformation,omitempty"`
	NetworkFeatureSet                   *NetworkManagementFeatureSetType                          `json:"networkFeatureSet,omitempty"`
	LastStateChange                     *NetworkManagementStateChangeType                         `json:"lastStateChange,omitempty"`
	MinimumTrustLevel                   *NetworkManagementMinimumTrustLevelType                   `json:"minimumTrustLevel,omitempty"`
	Label                               *LabelType                                                `json:"label,omitempty"`
	Description                         *DescriptionType                                          `json:"description,omitempty"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m NetworkManagementDeviceDescriptionData) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *NetworkManagementDeviceDescriptionData) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// CmiNetworkManagementDeviceDescriptionListData message container
type CmiNetworkManagementDeviceDescriptionListData struct {
	NetworkManagementDeviceDescriptionListData NetworkManagementDeviceDescriptionListData `json:"networkManagementDeviceDescriptionListData"`
}

// NetworkManagementDeviceDescriptionListData element
type NetworkManagementDeviceDescriptionListData struct {
	NetworkManagementDeviceDescriptionData []NetworkManagementDeviceDescriptionDataType `json:"networkManagementDeviceDescriptionData"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m NetworkManagementDeviceDescriptionListData) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *NetworkManagementDeviceDescriptionListData) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// CmiNetworkManagementDeviceDescriptionListDataSelectors message container
type CmiNetworkManagementDeviceDescriptionListDataSelectors struct {
	NetworkManagementDeviceDescriptionListDataSelectors NetworkManagementDeviceDescriptionListDataSelectors `json:"networkManagementDeviceDescriptionListDataSelectors"`
}

// NetworkManagementDeviceDescriptionListDataSelectors element
type NetworkManagementDeviceDescriptionListDataSelectors struct {
	DeviceAddress *DeviceAddressType `json:"deviceAddress,omitempty"`
	DeviceType    string             `json:"deviceType"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m NetworkManagementDeviceDescriptionListDataSelectors) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *NetworkManagementDeviceDescriptionListDataSelectors) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// CmiNetworkManagementEntityDescriptionData message container
type CmiNetworkManagementEntityDescriptionData struct {
	NetworkManagementEntityDescriptionData NetworkManagementEntityDescriptionData `json:"networkManagementEntityDescriptionData"`
}

// NetworkManagementEntityDescriptionData element
type NetworkManagementEntityDescriptionData struct {
	EntityAddress     *EntityAddressType                      `json:"entityAddress,omitempty"`
	EntityType        string                                  `json:"entityType"`
	LastStateChange   *NetworkManagementStateChangeType       `json:"lastStateChange,omitempty"`
	MinimumTrustLevel *NetworkManagementMinimumTrustLevelType `json:"minimumTrustLevel,omitempty"`
	Label             *LabelType                              `json:"label,omitempty"`
	Description       *DescriptionType                        `json:"description,omitempty"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m NetworkManagementEntityDescriptionData) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *NetworkManagementEntityDescriptionData) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// CmiNetworkManagementEntityDescriptionListData message container
type CmiNetworkManagementEntityDescriptionListData struct {
	NetworkManagementEntityDescriptionListData NetworkManagementEntityDescriptionListData `json:"networkManagementEntityDescriptionListData"`
}

// NetworkManagementEntityDescriptionListData element
type NetworkManagementEntityDescriptionListData struct {
	NetworkManagementEntityDescriptionData []NetworkManagementEntityDescriptionDataType `json:"networkManagementEntityDescriptionData"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m NetworkManagementEntityDescriptionListData) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *NetworkManagementEntityDescriptionListData) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// CmiNetworkManagementEntityDescriptionListDataSelectors message container
type CmiNetworkManagementEntityDescriptionListDataSelectors struct {
	NetworkManagementEntityDescriptionListDataSelectors NetworkManagementEntityDescriptionListDataSelectors `json:"networkManagementEntityDescriptionListDataSelectors"`
}

// NetworkManagementEntityDescriptionListDataSelectors element
type NetworkManagementEntityDescriptionListDataSelectors struct {
	EntityAddress *EntityAddressType `json:"entityAddress,omitempty"`
	EntityType    string             `json:"entityType"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m NetworkManagementEntityDescriptionListDataSelectors) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *NetworkManagementEntityDescriptionListDataSelectors) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// CmiNetworkManagementFeatureDescriptionData message container
type CmiNetworkManagementFeatureDescriptionData struct {
	NetworkManagementFeatureDescriptionData NetworkManagementFeatureDescriptionData `json:"networkManagementFeatureDescriptionData"`
}

// NetworkManagementFeatureDescriptionData element
type NetworkManagementFeatureDescriptionData struct {
	FeatureAddress    *FeatureAddressType                     `json:"featureAddress,omitempty"`
	FeatureType       string                                  `json:"featureType"`
	SpecificUsage     []string                                `json:"specificUsage"`
	FeatureGroup      *FeatureGroupType                       `json:"featureGroup,omitempty"`
	Role              *RoleType                               `json:"role,omitempty"`
	SupportedFunction []FunctionPropertyType                  `json:"supportedFunction"`
	LastStateChange   *NetworkManagementStateChangeType       `json:"lastStateChange,omitempty"`
	MinimumTrustLevel *NetworkManagementMinimumTrustLevelType `json:"minimumTrustLevel,omitempty"`
	Label             *LabelType                              `json:"label,omitempty"`
	Description       *DescriptionType                        `json:"description,omitempty"`
	MaxResponseDelay  *MaxResponseDelayType                   `json:"maxResponseDelay,omitempty"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m NetworkManagementFeatureDescriptionData) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *NetworkManagementFeatureDescriptionData) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// CmiNetworkManagementFeatureDescriptionListData message container
type CmiNetworkManagementFeatureDescriptionListData struct {
	NetworkManagementFeatureDescriptionListData NetworkManagementFeatureDescriptionListData `json:"networkManagementFeatureDescriptionListData"`
}

// NetworkManagementFeatureDescriptionListData element
type NetworkManagementFeatureDescriptionListData struct {
	NetworkManagementFeatureDescriptionData []NetworkManagementFeatureDescriptionDataType `json:"networkManagementFeatureDescriptionData"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m NetworkManagementFeatureDescriptionListData) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *NetworkManagementFeatureDescriptionListData) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// CmiNetworkManagementFeatureDescriptionListDataSelectors message container
type CmiNetworkManagementFeatureDescriptionListDataSelectors struct {
	NetworkManagementFeatureDescriptionListDataSelectors NetworkManagementFeatureDescriptionListDataSelectors `json:"networkManagementFeatureDescriptionListDataSelectors"`
}

// NetworkManagementFeatureDescriptionListDataSelectors element
type NetworkManagementFeatureDescriptionListDataSelectors struct {
	FeatureAddress *FeatureAddressType `json:"featureAddress,omitempty"`
	FeatureType    string              `json:"featureType"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m NetworkManagementFeatureDescriptionListDataSelectors) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *NetworkManagementFeatureDescriptionListDataSelectors) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// CmiOperatingConstraintsInterruptData message container
type CmiOperatingConstraintsInterruptData struct {
	OperatingConstraintsInterruptData OperatingConstraintsInterruptData `json:"operatingConstraintsInterruptData"`
}

// OperatingConstraintsInterruptData element
type OperatingConstraintsInterruptData struct {
	SequenceId                  *PowerSequenceIdType `json:"sequenceId,omitempty"`
	IsPausable                  *bool                `json:"isPausable,omitempty"`
	IsStoppable                 *bool                `json:"isStoppable,omitempty"`
	NotInterruptibleAtHighPower *bool                `json:"notInterruptibleAtHighPower,omitempty"`
	MaxCyclesPerDay             *uint                `json:"maxCyclesPerDay,omitempty"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m OperatingConstraintsInterruptData) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *OperatingConstraintsInterruptData) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// CmiOperatingConstraintsInterruptDataElements message container
type CmiOperatingConstraintsInterruptDataElements struct {
	OperatingConstraintsInterruptDataElements OperatingConstraintsInterruptDataElements `json:"operatingConstraintsInterruptDataElements"`
}

// OperatingConstraintsInterruptDataElements element
type OperatingConstraintsInterruptDataElements struct {
	SequenceId                  *ElementTagType `json:"sequenceId,omitempty"`
	IsPausable                  *ElementTagType `json:"isPausable,omitempty"`
	IsStoppable                 *ElementTagType `json:"isStoppable,omitempty"`
	NotInterruptibleAtHighPower *ElementTagType `json:"notInterruptibleAtHighPower,omitempty"`
	MaxCyclesPerDay             *ElementTagType `json:"maxCyclesPerDay,omitempty"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m OperatingConstraintsInterruptDataElements) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *OperatingConstraintsInterruptDataElements) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// CmiOperatingConstraintsInterruptListData message container
type CmiOperatingConstraintsInterruptListData struct {
	OperatingConstraintsInterruptListData OperatingConstraintsInterruptListData `json:"operatingConstraintsInterruptListData"`
}

// OperatingConstraintsInterruptListData element
type OperatingConstraintsInterruptListData struct {
	OperatingConstraintsInterruptData []OperatingConstraintsInterruptDataType `json:"operatingConstraintsInterruptData"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m OperatingConstraintsInterruptListData) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *OperatingConstraintsInterruptListData) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// CmiOperatingConstraintsInterruptListDataSelectors message container
type CmiOperatingConstraintsInterruptListDataSelectors struct {
	OperatingConstraintsInterruptListDataSelectors OperatingConstraintsInterruptListDataSelectors `json:"operatingConstraintsInterruptListDataSelectors"`
}

// OperatingConstraintsInterruptListDataSelectors element
type OperatingConstraintsInterruptListDataSelectors struct {
	SequenceId *PowerSequenceIdType `json:"sequenceId,omitempty"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m OperatingConstraintsInterruptListDataSelectors) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *OperatingConstraintsInterruptListDataSelectors) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// CmiOperatingConstraintsDurationData message container
type CmiOperatingConstraintsDurationData struct {
	OperatingConstraintsDurationData OperatingConstraintsDurationData `json:"operatingConstraintsDurationData"`
}

// OperatingConstraintsDurationData element
type OperatingConstraintsDurationData struct {
	SequenceId           *PowerSequenceIdType `json:"sequenceId,omitempty"`
	ActiveDurationMin    string               `json:"activeDurationMin"`
	ActiveDurationMax    string               `json:"activeDurationMax"`
	PauseDurationMin     string               `json:"pauseDurationMin"`
	PauseDurationMax     string               `json:"pauseDurationMax"`
	ActiveDurationSumMin string               `json:"activeDurationSumMin"`
	ActiveDurationSumMax string               `json:"activeDurationSumMax"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m OperatingConstraintsDurationData) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *OperatingConstraintsDurationData) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// CmiOperatingConstraintsDurationDataElements message container
type CmiOperatingConstraintsDurationDataElements struct {
	OperatingConstraintsDurationDataElements OperatingConstraintsDurationDataElements `json:"operatingConstraintsDurationDataElements"`
}

// OperatingConstraintsDurationDataElements element
type OperatingConstraintsDurationDataElements struct {
	SequenceId           *ElementTagType `json:"sequenceId,omitempty"`
	ActiveDurationMin    *ElementTagType `json:"activeDurationMin,omitempty"`
	ActiveDurationMax    *ElementTagType `json:"activeDurationMax,omitempty"`
	PauseDurationMin     *ElementTagType `json:"pauseDurationMin,omitempty"`
	PauseDurationMax     *ElementTagType `json:"pauseDurationMax,omitempty"`
	ActiveDurationSumMin *ElementTagType `json:"activeDurationSumMin,omitempty"`
	ActiveDurationSumMax *ElementTagType `json:"activeDurationSumMax,omitempty"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m OperatingConstraintsDurationDataElements) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *OperatingConstraintsDurationDataElements) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// CmiOperatingConstraintsDurationListData message container
type CmiOperatingConstraintsDurationListData struct {
	OperatingConstraintsDurationListData OperatingConstraintsDurationListData `json:"operatingConstraintsDurationListData"`
}

// OperatingConstraintsDurationListData element
type OperatingConstraintsDurationListData struct {
	OperatingConstraintsDurationData []OperatingConstraintsDurationDataType `json:"operatingConstraintsDurationData"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m OperatingConstraintsDurationListData) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *OperatingConstraintsDurationListData) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// CmiOperatingConstraintsDurationListDataSelectors message container
type CmiOperatingConstraintsDurationListDataSelectors struct {
	OperatingConstraintsDurationListDataSelectors OperatingConstraintsDurationListDataSelectors `json:"operatingConstraintsDurationListDataSelectors"`
}

// OperatingConstraintsDurationListDataSelectors element
type OperatingConstraintsDurationListDataSelectors struct {
	SequenceId *PowerSequenceIdType `json:"sequenceId,omitempty"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m OperatingConstraintsDurationListDataSelectors) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *OperatingConstraintsDurationListDataSelectors) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// CmiOperatingConstraintsPowerDescriptionData message container
type CmiOperatingConstraintsPowerDescriptionData struct {
	OperatingConstraintsPowerDescriptionData OperatingConstraintsPowerDescriptionData `json:"operatingConstraintsPowerDescriptionData"`
}

// OperatingConstraintsPowerDescriptionData element
type OperatingConstraintsPowerDescriptionData struct {
	SequenceId              *PowerSequenceIdType `json:"sequenceId,omitempty"`
	PositiveEnergyDirection string               `json:"positiveEnergyDirection"`
	PowerUnit               string               `json:"powerUnit"`
	EnergyUnit              string               `json:"energyUnit"`
	Description             *DescriptionType     `json:"description,omitempty"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m OperatingConstraintsPowerDescriptionData) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *OperatingConstraintsPowerDescriptionData) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// CmiOperatingConstraintsPowerDescriptionDataElements message container
type CmiOperatingConstraintsPowerDescriptionDataElements struct {
	OperatingConstraintsPowerDescriptionDataElements OperatingConstraintsPowerDescriptionDataElements `json:"operatingConstraintsPowerDescriptionDataElements"`
}

// OperatingConstraintsPowerDescriptionDataElements element
type OperatingConstraintsPowerDescriptionDataElements struct {
	SequenceId              *ElementTagType `json:"sequenceId,omitempty"`
	PositiveEnergyDirection *ElementTagType `json:"positiveEnergyDirection,omitempty"`
	PowerUnit               *ElementTagType `json:"powerUnit,omitempty"`
	EnergyUnit              *ElementTagType `json:"energyUnit,omitempty"`
	Description             *ElementTagType `json:"description,omitempty"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m OperatingConstraintsPowerDescriptionDataElements) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *OperatingConstraintsPowerDescriptionDataElements) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// CmiOperatingConstraintsPowerDescriptionListData message container
type CmiOperatingConstraintsPowerDescriptionListData struct {
	OperatingConstraintsPowerDescriptionListData OperatingConstraintsPowerDescriptionListData `json:"operatingConstraintsPowerDescriptionListData"`
}

// OperatingConstraintsPowerDescriptionListData element
type OperatingConstraintsPowerDescriptionListData struct {
	OperatingConstraintsPowerDescriptionData []OperatingConstraintsPowerDescriptionDataType `json:"operatingConstraintsPowerDescriptionData"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m OperatingConstraintsPowerDescriptionListData) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *OperatingConstraintsPowerDescriptionListData) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// CmiOperatingConstraintsPowerDescriptionListDataSelectors message container
type CmiOperatingConstraintsPowerDescriptionListDataSelectors struct {
	OperatingConstraintsPowerDescriptionListDataSelectors OperatingConstraintsPowerDescriptionListDataSelectors `json:"operatingConstraintsPowerDescriptionListDataSelectors"`
}

// OperatingConstraintsPowerDescriptionListDataSelectors element
type OperatingConstraintsPowerDescriptionListDataSelectors struct {
	SequenceId *PowerSequenceIdType `json:"sequenceId,omitempty"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m OperatingConstraintsPowerDescriptionListDataSelectors) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *OperatingConstraintsPowerDescriptionListDataSelectors) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// CmiOperatingConstraintsPowerRangeData message container
type CmiOperatingConstraintsPowerRangeData struct {
	OperatingConstraintsPowerRangeData OperatingConstraintsPowerRangeData `json:"operatingConstraintsPowerRangeData"`
}

// OperatingConstraintsPowerRangeData element
type OperatingConstraintsPowerRangeData struct {
	SequenceId *PowerSequenceIdType `json:"sequenceId,omitempty"`
	PowerMin   *ScaledNumberType    `json:"powerMin,omitempty"`
	PowerMax   *ScaledNumberType    `json:"powerMax,omitempty"`
	EnergyMin  *ScaledNumberType    `json:"energyMin,omitempty"`
	EnergyMax  *ScaledNumberType    `json:"energyMax,omitempty"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m OperatingConstraintsPowerRangeData) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *OperatingConstraintsPowerRangeData) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// CmiOperatingConstraintsPowerRangeListData message container
type CmiOperatingConstraintsPowerRangeListData struct {
	OperatingConstraintsPowerRangeListData OperatingConstraintsPowerRangeListData `json:"operatingConstraintsPowerRangeListData"`
}

// OperatingConstraintsPowerRangeListData element
type OperatingConstraintsPowerRangeListData struct {
	OperatingConstraintsPowerRangeData []OperatingConstraintsPowerRangeDataType `json:"operatingConstraintsPowerRangeData"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m OperatingConstraintsPowerRangeListData) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *OperatingConstraintsPowerRangeListData) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// CmiOperatingConstraintsPowerRangeListDataSelectors message container
type CmiOperatingConstraintsPowerRangeListDataSelectors struct {
	OperatingConstraintsPowerRangeListDataSelectors OperatingConstraintsPowerRangeListDataSelectors `json:"operatingConstraintsPowerRangeListDataSelectors"`
}

// OperatingConstraintsPowerRangeListDataSelectors element
type OperatingConstraintsPowerRangeListDataSelectors struct {
	SequenceId *PowerSequenceIdType `json:"sequenceId,omitempty"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m OperatingConstraintsPowerRangeListDataSelectors) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *OperatingConstraintsPowerRangeListDataSelectors) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// CmiOperatingConstraintsPowerLevelData message container
type CmiOperatingConstraintsPowerLevelData struct {
	OperatingConstraintsPowerLevelData OperatingConstraintsPowerLevelData `json:"operatingConstraintsPowerLevelData"`
}

// OperatingConstraintsPowerLevelData element
type OperatingConstraintsPowerLevelData struct {
	SequenceId *PowerSequenceIdType `json:"sequenceId,omitempty"`
	Power      []ScaledNumberType   `json:"power"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m OperatingConstraintsPowerLevelData) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *OperatingConstraintsPowerLevelData) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// CmiOperatingConstraintsPowerLevelListData message container
type CmiOperatingConstraintsPowerLevelListData struct {
	OperatingConstraintsPowerLevelListData OperatingConstraintsPowerLevelListData `json:"operatingConstraintsPowerLevelListData"`
}

// OperatingConstraintsPowerLevelListData element
type OperatingConstraintsPowerLevelListData struct {
	OperatingConstraintsPowerLevelData []OperatingConstraintsPowerLevelDataType `json:"operatingConstraintsPowerLevelData"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m OperatingConstraintsPowerLevelListData) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *OperatingConstraintsPowerLevelListData) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// CmiOperatingConstraintsPowerLevelListDataSelectors message container
type CmiOperatingConstraintsPowerLevelListDataSelectors struct {
	OperatingConstraintsPowerLevelListDataSelectors OperatingConstraintsPowerLevelListDataSelectors `json:"operatingConstraintsPowerLevelListDataSelectors"`
}

// OperatingConstraintsPowerLevelListDataSelectors element
type OperatingConstraintsPowerLevelListDataSelectors struct {
	SequenceId *PowerSequenceIdType `json:"sequenceId,omitempty"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m OperatingConstraintsPowerLevelListDataSelectors) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *OperatingConstraintsPowerLevelListDataSelectors) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// CmiOperatingConstraintsResumeImplicationData message container
type CmiOperatingConstraintsResumeImplicationData struct {
	OperatingConstraintsResumeImplicationData OperatingConstraintsResumeImplicationData `json:"operatingConstraintsResumeImplicationData"`
}

// OperatingConstraintsResumeImplicationData element
type OperatingConstraintsResumeImplicationData struct {
	SequenceId            *PowerSequenceIdType `json:"sequenceId,omitempty"`
	ResumeEnergyEstimated *ScaledNumberType    `json:"resumeEnergyEstimated,omitempty"`
	EnergyUnit            string               `json:"energyUnit"`
	ResumeCostEstimated   *ScaledNumberType    `json:"resumeCostEstimated,omitempty"`
	Currency              string               `json:"currency"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m OperatingConstraintsResumeImplicationData) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *OperatingConstraintsResumeImplicationData) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// CmiOperatingConstraintsResumeImplicationListData message container
type CmiOperatingConstraintsResumeImplicationListData struct {
	OperatingConstraintsResumeImplicationListData OperatingConstraintsResumeImplicationListData `json:"operatingConstraintsResumeImplicationListData"`
}

// OperatingConstraintsResumeImplicationListData element
type OperatingConstraintsResumeImplicationListData struct {
	OperatingConstraintsResumeImplicationData []OperatingConstraintsResumeImplicationDataType `json:"operatingConstraintsResumeImplicationData"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m OperatingConstraintsResumeImplicationListData) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *OperatingConstraintsResumeImplicationListData) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// CmiOperatingConstraintsResumeImplicationListDataSelectors message container
type CmiOperatingConstraintsResumeImplicationListDataSelectors struct {
	OperatingConstraintsResumeImplicationListDataSelectors OperatingConstraintsResumeImplicationListDataSelectors `json:"operatingConstraintsResumeImplicationListDataSelectors"`
}

// OperatingConstraintsResumeImplicationListDataSelectors element
type OperatingConstraintsResumeImplicationListDataSelectors struct {
	SequenceId *PowerSequenceIdType `json:"sequenceId,omitempty"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m OperatingConstraintsResumeImplicationListDataSelectors) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *OperatingConstraintsResumeImplicationListDataSelectors) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// CmiPowerTimeSlotScheduleData message container
type CmiPowerTimeSlotScheduleData struct {
	PowerTimeSlotScheduleData PowerTimeSlotScheduleData `json:"powerTimeSlotScheduleData"`
}

// PowerTimeSlotScheduleData element
type PowerTimeSlotScheduleData struct {
	SequenceId          *PowerSequenceIdType     `json:"sequenceId,omitempty"`
	SlotNumber          *PowerTimeSlotNumberType `json:"slotNumber,omitempty"`
	TimePeriod          *TimePeriodType          `json:"timePeriod,omitempty"`
	DefaultDuration     string                   `json:"defaultDuration"`
	DurationUncertainty string                   `json:"durationUncertainty"`
	SlotActivated       *bool                    `json:"slotActivated,omitempty"`
	Description         *DescriptionType         `json:"description,omitempty"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m PowerTimeSlotScheduleData) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *PowerTimeSlotScheduleData) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// CmiPowerTimeSlotScheduleListData message container
type CmiPowerTimeSlotScheduleListData struct {
	PowerTimeSlotScheduleListData PowerTimeSlotScheduleListData `json:"powerTimeSlotScheduleListData"`
}

// PowerTimeSlotScheduleListData element
type PowerTimeSlotScheduleListData struct {
	PowerTimeSlotScheduleData []PowerTimeSlotScheduleDataType `json:"powerTimeSlotScheduleData"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m PowerTimeSlotScheduleListData) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *PowerTimeSlotScheduleListData) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// CmiPowerTimeSlotScheduleListDataSelectors message container
type CmiPowerTimeSlotScheduleListDataSelectors struct {
	PowerTimeSlotScheduleListDataSelectors PowerTimeSlotScheduleListDataSelectors `json:"powerTimeSlotScheduleListDataSelectors"`
}

// PowerTimeSlotScheduleListDataSelectors element
type PowerTimeSlotScheduleListDataSelectors struct {
	SequenceId *PowerSequenceIdType     `json:"sequenceId,omitempty"`
	SlotNumber *PowerTimeSlotNumberType `json:"slotNumber,omitempty"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m PowerTimeSlotScheduleListDataSelectors) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *PowerTimeSlotScheduleListDataSelectors) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// CmiPowerTimeSlotValueData message container
type CmiPowerTimeSlotValueData struct {
	PowerTimeSlotValueData PowerTimeSlotValueData `json:"powerTimeSlotValueData"`
}

// PowerTimeSlotValueData element
type PowerTimeSlotValueData struct {
	SequenceId *PowerSequenceIdType     `json:"sequenceId,omitempty"`
	SlotNumber *PowerTimeSlotNumberType `json:"slotNumber,omitempty"`
	ValueType  string                   `json:"valueType"`
	Value      *ScaledNumberType        `json:"value,omitempty"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m PowerTimeSlotValueData) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *PowerTimeSlotValueData) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// CmiPowerTimeSlotValueListData message container
type CmiPowerTimeSlotValueListData struct {
	PowerTimeSlotValueListData PowerTimeSlotValueListData `json:"powerTimeSlotValueListData"`
}

// PowerTimeSlotValueListData element
type PowerTimeSlotValueListData struct {
	PowerTimeSlotValueData []PowerTimeSlotValueDataType `json:"powerTimeSlotValueData"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m PowerTimeSlotValueListData) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *PowerTimeSlotValueListData) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// CmiPowerTimeSlotValueListDataSelectors message container
type CmiPowerTimeSlotValueListDataSelectors struct {
	PowerTimeSlotValueListDataSelectors PowerTimeSlotValueListDataSelectors `json:"powerTimeSlotValueListDataSelectors"`
}

// PowerTimeSlotValueListDataSelectors element
type PowerTimeSlotValueListDataSelectors struct {
	SequenceId *PowerSequenceIdType     `json:"sequenceId,omitempty"`
	SlotNumber *PowerTimeSlotNumberType `json:"slotNumber,omitempty"`
	ValueType  string                   `json:"valueType"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m PowerTimeSlotValueListDataSelectors) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *PowerTimeSlotValueListDataSelectors) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// CmiPowerTimeSlotScheduleConstraintsData message container
type CmiPowerTimeSlotScheduleConstraintsData struct {
	PowerTimeSlotScheduleConstraintsData PowerTimeSlotScheduleConstraintsData `json:"powerTimeSlotScheduleConstraintsData"`
}

// PowerTimeSlotScheduleConstraintsData element
type PowerTimeSlotScheduleConstraintsData struct {
	SequenceId        *PowerSequenceIdType     `json:"sequenceId,omitempty"`
	SlotNumber        *PowerTimeSlotNumberType `json:"slotNumber,omitempty"`
	EarliestStartTime string                   `json:"earliestStartTime"`
	LatestEndTime     string                   `json:"latestEndTime"`
	MinDuration       string                   `json:"minDuration"`
	MaxDuration       string                   `json:"maxDuration"`
	OptionalSlot      *bool                    `json:"optionalSlot,omitempty"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m PowerTimeSlotScheduleConstraintsData) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *PowerTimeSlotScheduleConstraintsData) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// CmiPowerTimeSlotScheduleConstraintsDataElements message container
type CmiPowerTimeSlotScheduleConstraintsDataElements struct {
	PowerTimeSlotScheduleConstraintsDataElements PowerTimeSlotScheduleConstraintsDataElements `json:"powerTimeSlotScheduleConstraintsDataElements"`
}

// PowerTimeSlotScheduleConstraintsDataElements element
type PowerTimeSlotScheduleConstraintsDataElements struct {
	SequenceId        *ElementTagType `json:"sequenceId,omitempty"`
	SlotNumber        *ElementTagType `json:"slotNumber,omitempty"`
	EarliestStartTime *ElementTagType `json:"earliestStartTime,omitempty"`
	LatestEndTime     *ElementTagType `json:"latestEndTime,omitempty"`
	MinDuration       *ElementTagType `json:"minDuration,omitempty"`
	MaxDuration       *ElementTagType `json:"maxDuration,omitempty"`
	OptionalSlot      *ElementTagType `json:"optionalSlot,omitempty"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m PowerTimeSlotScheduleConstraintsDataElements) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *PowerTimeSlotScheduleConstraintsDataElements) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// CmiPowerTimeSlotScheduleConstraintsListData message container
type CmiPowerTimeSlotScheduleConstraintsListData struct {
	PowerTimeSlotScheduleConstraintsListData PowerTimeSlotScheduleConstraintsListData `json:"powerTimeSlotScheduleConstraintsListData"`
}

// PowerTimeSlotScheduleConstraintsListData element
type PowerTimeSlotScheduleConstraintsListData struct {
	PowerTimeSlotScheduleConstraintsData []PowerTimeSlotScheduleConstraintsDataType `json:"powerTimeSlotScheduleConstraintsData"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m PowerTimeSlotScheduleConstraintsListData) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *PowerTimeSlotScheduleConstraintsListData) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// CmiPowerTimeSlotScheduleConstraintsListDataSelectors message container
type CmiPowerTimeSlotScheduleConstraintsListDataSelectors struct {
	PowerTimeSlotScheduleConstraintsListDataSelectors PowerTimeSlotScheduleConstraintsListDataSelectors `json:"powerTimeSlotScheduleConstraintsListDataSelectors"`
}

// PowerTimeSlotScheduleConstraintsListDataSelectors element
type PowerTimeSlotScheduleConstraintsListDataSelectors struct {
	SequenceId *PowerSequenceIdType     `json:"sequenceId,omitempty"`
	SlotNumber *PowerTimeSlotNumberType `json:"slotNumber,omitempty"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m PowerTimeSlotScheduleConstraintsListDataSelectors) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *PowerTimeSlotScheduleConstraintsListDataSelectors) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// CmiPowerSequenceAlternativesRelationData message container
type CmiPowerSequenceAlternativesRelationData struct {
	PowerSequenceAlternativesRelationData PowerSequenceAlternativesRelationData `json:"powerSequenceAlternativesRelationData"`
}

// PowerSequenceAlternativesRelationData element
type PowerSequenceAlternativesRelationData struct {
	AlternativesId *AlternativesIdType   `json:"alternativesId,omitempty"`
	SequenceId     []PowerSequenceIdType `json:"sequenceId"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m PowerSequenceAlternativesRelationData) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *PowerSequenceAlternativesRelationData) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// CmiPowerSequenceAlternativesRelationDataElements message container
type CmiPowerSequenceAlternativesRelationDataElements struct {
	PowerSequenceAlternativesRelationDataElements PowerSequenceAlternativesRelationDataElements `json:"powerSequenceAlternativesRelationDataElements"`
}

// PowerSequenceAlternativesRelationDataElements element
type PowerSequenceAlternativesRelationDataElements struct {
	AlternativesId *ElementTagType `json:"alternativesId,omitempty"`
	SequenceId     *ElementTagType `json:"sequenceId,omitempty"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m PowerSequenceAlternativesRelationDataElements) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *PowerSequenceAlternativesRelationDataElements) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// CmiPowerSequenceAlternativesRelationListData message container
type CmiPowerSequenceAlternativesRelationListData struct {
	PowerSequenceAlternativesRelationListData PowerSequenceAlternativesRelationListData `json:"powerSequenceAlternativesRelationListData"`
}

// PowerSequenceAlternativesRelationListData element
type PowerSequenceAlternativesRelationListData struct {
	PowerSequenceAlternativesRelationData []PowerSequenceAlternativesRelationDataType `json:"powerSequenceAlternativesRelationData"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m PowerSequenceAlternativesRelationListData) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *PowerSequenceAlternativesRelationListData) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// CmiPowerSequenceAlternativesRelationListDataSelectors message container
type CmiPowerSequenceAlternativesRelationListDataSelectors struct {
	PowerSequenceAlternativesRelationListDataSelectors PowerSequenceAlternativesRelationListDataSelectors `json:"powerSequenceAlternativesRelationListDataSelectors"`
}

// PowerSequenceAlternativesRelationListDataSelectors element
type PowerSequenceAlternativesRelationListDataSelectors struct {
	AlternativesId *AlternativesIdType  `json:"alternativesId,omitempty"`
	SequenceId     *PowerSequenceIdType `json:"sequenceId,omitempty"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m PowerSequenceAlternativesRelationListDataSelectors) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *PowerSequenceAlternativesRelationListDataSelectors) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// CmiPowerSequenceDescriptionData message container
type CmiPowerSequenceDescriptionData struct {
	PowerSequenceDescriptionData PowerSequenceDescriptionData `json:"powerSequenceDescriptionData"`
}

// PowerSequenceDescriptionData element
type PowerSequenceDescriptionData struct {
	SequenceId              *PowerSequenceIdType `json:"sequenceId,omitempty"`
	Description             *DescriptionType     `json:"description,omitempty"`
	PositiveEnergyDirection string               `json:"positiveEnergyDirection"`
	PowerUnit               string               `json:"powerUnit"`
	EnergyUnit              string               `json:"energyUnit"`
	ValueSource             string               `json:"valueSource"`
	Scope                   string               `json:"scope"`
	TaskIdentifier          *uint                `json:"taskIdentifier,omitempty"`
	RepetitionsTotal        *uint                `json:"repetitionsTotal,omitempty"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m PowerSequenceDescriptionData) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *PowerSequenceDescriptionData) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// CmiPowerSequenceDescriptionDataElements message container
type CmiPowerSequenceDescriptionDataElements struct {
	PowerSequenceDescriptionDataElements PowerSequenceDescriptionDataElements `json:"powerSequenceDescriptionDataElements"`
}

// PowerSequenceDescriptionDataElements element
type PowerSequenceDescriptionDataElements struct {
	SequenceId              *ElementTagType `json:"sequenceId,omitempty"`
	Description             *ElementTagType `json:"description,omitempty"`
	PositiveEnergyDirection *ElementTagType `json:"positiveEnergyDirection,omitempty"`
	PowerUnit               *ElementTagType `json:"powerUnit,omitempty"`
	EnergyUnit              *ElementTagType `json:"energyUnit,omitempty"`
	ValueSource             *ElementTagType `json:"valueSource,omitempty"`
	Scope                   *ElementTagType `json:"scope,omitempty"`
	TaskIdentifier          *ElementTagType `json:"taskIdentifier,omitempty"`
	RepetitionsTotal        *ElementTagType `json:"repetitionsTotal,omitempty"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m PowerSequenceDescriptionDataElements) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *PowerSequenceDescriptionDataElements) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// CmiPowerSequenceDescriptionListData message container
type CmiPowerSequenceDescriptionListData struct {
	PowerSequenceDescriptionListData PowerSequenceDescriptionListData `json:"powerSequenceDescriptionListData"`
}

// PowerSequenceDescriptionListData element
type PowerSequenceDescriptionListData struct {
	PowerSequenceDescriptionData []PowerSequenceDescriptionDataType `json:"powerSequenceDescriptionData"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m PowerSequenceDescriptionListData) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *PowerSequenceDescriptionListData) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// CmiPowerSequenceDescriptionListDataSelectors message container
type CmiPowerSequenceDescriptionListDataSelectors struct {
	PowerSequenceDescriptionListDataSelectors PowerSequenceDescriptionListDataSelectors `json:"powerSequenceDescriptionListDataSelectors"`
}

// PowerSequenceDescriptionListDataSelectors element
type PowerSequenceDescriptionListDataSelectors struct {
	SequenceId *PowerSequenceIdType `json:"sequenceId,omitempty"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m PowerSequenceDescriptionListDataSelectors) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *PowerSequenceDescriptionListDataSelectors) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// CmiPowerSequenceStateData message container
type CmiPowerSequenceStateData struct {
	PowerSequenceStateData PowerSequenceStateData `json:"powerSequenceStateData"`
}

// PowerSequenceStateData element
type PowerSequenceStateData struct {
	SequenceId                 *PowerSequenceIdType     `json:"sequenceId,omitempty"`
	State                      string                   `json:"state"`
	ActiveSlotNumber           *PowerTimeSlotNumberType `json:"activeSlotNumber,omitempty"`
	ElapsedSlotTime            string                   `json:"elapsedSlotTime"`
	RemainingSlotTime          string                   `json:"remainingSlotTime"`
	SequenceRemoteControllable *bool                    `json:"sequenceRemoteControllable,omitempty"`
	ActiveRepetitionNumber     *uint                    `json:"activeRepetitionNumber,omitempty"`
	RemainingPauseTime         string                   `json:"remainingPauseTime"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m PowerSequenceStateData) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *PowerSequenceStateData) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// CmiPowerSequenceStateDataElements message container
type CmiPowerSequenceStateDataElements struct {
	PowerSequenceStateDataElements PowerSequenceStateDataElements `json:"powerSequenceStateDataElements"`
}

// PowerSequenceStateDataElements element
type PowerSequenceStateDataElements struct {
	SequenceId                 *ElementTagType `json:"sequenceId,omitempty"`
	State                      *ElementTagType `json:"state,omitempty"`
	ActiveSlotNumber           *ElementTagType `json:"activeSlotNumber,omitempty"`
	ElapsedSlotTime            *ElementTagType `json:"elapsedSlotTime,omitempty"`
	RemainingSlotTime          *ElementTagType `json:"remainingSlotTime,omitempty"`
	SequenceRemoteControllable *ElementTagType `json:"sequenceRemoteControllable,omitempty"`
	ActiveRepetitionNumber     *ElementTagType `json:"activeRepetitionNumber,omitempty"`
	RemainingPauseTime         *ElementTagType `json:"remainingPauseTime,omitempty"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m PowerSequenceStateDataElements) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *PowerSequenceStateDataElements) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// CmiPowerSequenceStateListData message container
type CmiPowerSequenceStateListData struct {
	PowerSequenceStateListData PowerSequenceStateListData `json:"powerSequenceStateListData"`
}

// PowerSequenceStateListData element
type PowerSequenceStateListData struct {
	PowerSequenceStateData []PowerSequenceStateDataType `json:"powerSequenceStateData"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m PowerSequenceStateListData) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *PowerSequenceStateListData) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// CmiPowerSequenceStateListDataSelectors message container
type CmiPowerSequenceStateListDataSelectors struct {
	PowerSequenceStateListDataSelectors PowerSequenceStateListDataSelectors `json:"powerSequenceStateListDataSelectors"`
}

// PowerSequenceStateListDataSelectors element
type PowerSequenceStateListDataSelectors struct {
	SequenceId *PowerSequenceIdType `json:"sequenceId,omitempty"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m PowerSequenceStateListDataSelectors) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *PowerSequenceStateListDataSelectors) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// CmiPowerSequenceScheduleData message container
type CmiPowerSequenceScheduleData struct {
	PowerSequenceScheduleData PowerSequenceScheduleData `json:"powerSequenceScheduleData"`
}

// PowerSequenceScheduleData element
type PowerSequenceScheduleData struct {
	SequenceId *PowerSequenceIdType `json:"sequenceId,omitempty"`
	StartTime  string               `json:"startTime"`
	EndTime    string               `json:"endTime"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m PowerSequenceScheduleData) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *PowerSequenceScheduleData) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// CmiPowerSequenceScheduleDataElements message container
type CmiPowerSequenceScheduleDataElements struct {
	PowerSequenceScheduleDataElements PowerSequenceScheduleDataElements `json:"powerSequenceScheduleDataElements"`
}

// PowerSequenceScheduleDataElements element
type PowerSequenceScheduleDataElements struct {
	SequenceId *ElementTagType `json:"sequenceId,omitempty"`
	StartTime  *ElementTagType `json:"startTime,omitempty"`
	EndTime    *ElementTagType `json:"endTime,omitempty"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m PowerSequenceScheduleDataElements) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *PowerSequenceScheduleDataElements) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// CmiPowerSequenceScheduleListData message container
type CmiPowerSequenceScheduleListData struct {
	PowerSequenceScheduleListData PowerSequenceScheduleListData `json:"powerSequenceScheduleListData"`
}

// PowerSequenceScheduleListData element
type PowerSequenceScheduleListData struct {
	PowerSequenceScheduleData []PowerSequenceScheduleDataType `json:"powerSequenceScheduleData"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m PowerSequenceScheduleListData) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *PowerSequenceScheduleListData) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// CmiPowerSequenceScheduleListDataSelectors message container
type CmiPowerSequenceScheduleListDataSelectors struct {
	PowerSequenceScheduleListDataSelectors PowerSequenceScheduleListDataSelectors `json:"powerSequenceScheduleListDataSelectors"`
}

// PowerSequenceScheduleListDataSelectors element
type PowerSequenceScheduleListDataSelectors struct {
	SequenceId *PowerSequenceIdType `json:"sequenceId,omitempty"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m PowerSequenceScheduleListDataSelectors) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *PowerSequenceScheduleListDataSelectors) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// CmiPowerSequenceScheduleConstraintsData message container
type CmiPowerSequenceScheduleConstraintsData struct {
	PowerSequenceScheduleConstraintsData PowerSequenceScheduleConstraintsData `json:"powerSequenceScheduleConstraintsData"`
}

// PowerSequenceScheduleConstraintsData element
type PowerSequenceScheduleConstraintsData struct {
	SequenceId        *PowerSequenceIdType `json:"sequenceId,omitempty"`
	EarliestStartTime string               `json:"earliestStartTime"`
	LatestStartTime   string               `json:"latestStartTime"`
	EarliestEndTime   string               `json:"earliestEndTime"`
	LatestEndTime     string               `json:"latestEndTime"`
	OptionalSequence  *bool                `json:"optionalSequence,omitempty"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m PowerSequenceScheduleConstraintsData) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *PowerSequenceScheduleConstraintsData) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// CmiPowerSequenceScheduleConstraintsDataElements message container
type CmiPowerSequenceScheduleConstraintsDataElements struct {
	PowerSequenceScheduleConstraintsDataElements PowerSequenceScheduleConstraintsDataElements `json:"powerSequenceScheduleConstraintsDataElements"`
}

// PowerSequenceScheduleConstraintsDataElements element
type PowerSequenceScheduleConstraintsDataElements struct {
	SequenceId        *ElementTagType `json:"sequenceId,omitempty"`
	EarliestStartTime *ElementTagType `json:"earliestStartTime,omitempty"`
	LatestStartTime   *ElementTagType `json:"latestStartTime,omitempty"`
	EarliestEndTime   *ElementTagType `json:"earliestEndTime,omitempty"`
	LatestEndTime     *ElementTagType `json:"latestEndTime,omitempty"`
	OptionalSequence  *ElementTagType `json:"optionalSequence,omitempty"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m PowerSequenceScheduleConstraintsDataElements) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *PowerSequenceScheduleConstraintsDataElements) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// CmiPowerSequenceScheduleConstraintsListData message container
type CmiPowerSequenceScheduleConstraintsListData struct {
	PowerSequenceScheduleConstraintsListData PowerSequenceScheduleConstraintsListData `json:"powerSequenceScheduleConstraintsListData"`
}

// PowerSequenceScheduleConstraintsListData element
type PowerSequenceScheduleConstraintsListData struct {
	PowerSequenceScheduleConstraintsData []PowerSequenceScheduleConstraintsDataType `json:"powerSequenceScheduleConstraintsData"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m PowerSequenceScheduleConstraintsListData) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *PowerSequenceScheduleConstraintsListData) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// CmiPowerSequenceScheduleConstraintsListDataSelectors message container
type CmiPowerSequenceScheduleConstraintsListDataSelectors struct {
	PowerSequenceScheduleConstraintsListDataSelectors PowerSequenceScheduleConstraintsListDataSelectors `json:"powerSequenceScheduleConstraintsListDataSelectors"`
}

// PowerSequenceScheduleConstraintsListDataSelectors element
type PowerSequenceScheduleConstraintsListDataSelectors struct {
	SequenceId *PowerSequenceIdType `json:"sequenceId,omitempty"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m PowerSequenceScheduleConstraintsListDataSelectors) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *PowerSequenceScheduleConstraintsListDataSelectors) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// CmiPowerSequencePriceData message container
type CmiPowerSequencePriceData struct {
	PowerSequencePriceData PowerSequencePriceData `json:"powerSequencePriceData"`
}

// PowerSequencePriceData element
type PowerSequencePriceData struct {
	SequenceId         *PowerSequenceIdType `json:"sequenceId,omitempty"`
	PotentialStartTime string               `json:"potentialStartTime"`
	Price              *ScaledNumberType    `json:"price,omitempty"`
	Currency           string               `json:"currency"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m PowerSequencePriceData) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *PowerSequencePriceData) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// CmiPowerSequencePriceListData message container
type CmiPowerSequencePriceListData struct {
	PowerSequencePriceListData PowerSequencePriceListData `json:"powerSequencePriceListData"`
}

// PowerSequencePriceListData element
type PowerSequencePriceListData struct {
	PowerSequencePriceData []PowerSequencePriceDataType `json:"powerSequencePriceData"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m PowerSequencePriceListData) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *PowerSequencePriceListData) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// CmiPowerSequencePriceListDataSelectors message container
type CmiPowerSequencePriceListDataSelectors struct {
	PowerSequencePriceListDataSelectors PowerSequencePriceListDataSelectors `json:"powerSequencePriceListDataSelectors"`
}

// PowerSequencePriceListDataSelectors element
type PowerSequencePriceListDataSelectors struct {
	SequenceId                 *PowerSequenceIdType   `json:"sequenceId,omitempty"`
	PotentialStartTimeInterval *TimestampIntervalType `json:"potentialStartTimeInterval,omitempty"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m PowerSequencePriceListDataSelectors) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *PowerSequencePriceListDataSelectors) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// CmiPowerSequenceSchedulePreferenceData message container
type CmiPowerSequenceSchedulePreferenceData struct {
	PowerSequenceSchedulePreferenceData PowerSequenceSchedulePreferenceData `json:"powerSequenceSchedulePreferenceData"`
}

// PowerSequenceSchedulePreferenceData element
type PowerSequenceSchedulePreferenceData struct {
	SequenceId *PowerSequenceIdType `json:"sequenceId,omitempty"`
	Greenest   *bool                `json:"greenest,omitempty"`
	Cheapest   *bool                `json:"cheapest,omitempty"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m PowerSequenceSchedulePreferenceData) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *PowerSequenceSchedulePreferenceData) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// CmiPowerSequenceSchedulePreferenceDataElements message container
type CmiPowerSequenceSchedulePreferenceDataElements struct {
	PowerSequenceSchedulePreferenceDataElements PowerSequenceSchedulePreferenceDataElements `json:"powerSequenceSchedulePreferenceDataElements"`
}

// PowerSequenceSchedulePreferenceDataElements element
type PowerSequenceSchedulePreferenceDataElements struct {
	SequenceId *ElementTagType `json:"sequenceId,omitempty"`
	Greenest   *ElementTagType `json:"greenest,omitempty"`
	Cheapest   *ElementTagType `json:"cheapest,omitempty"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m PowerSequenceSchedulePreferenceDataElements) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *PowerSequenceSchedulePreferenceDataElements) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// CmiPowerSequenceSchedulePreferenceListData message container
type CmiPowerSequenceSchedulePreferenceListData struct {
	PowerSequenceSchedulePreferenceListData PowerSequenceSchedulePreferenceListData `json:"powerSequenceSchedulePreferenceListData"`
}

// PowerSequenceSchedulePreferenceListData element
type PowerSequenceSchedulePreferenceListData struct {
	PowerSequenceSchedulePreferenceData []PowerSequenceSchedulePreferenceDataType `json:"powerSequenceSchedulePreferenceData"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m PowerSequenceSchedulePreferenceListData) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *PowerSequenceSchedulePreferenceListData) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// CmiPowerSequenceSchedulePreferenceListDataSelectors message container
type CmiPowerSequenceSchedulePreferenceListDataSelectors struct {
	PowerSequenceSchedulePreferenceListDataSelectors PowerSequenceSchedulePreferenceListDataSelectors `json:"powerSequenceSchedulePreferenceListDataSelectors"`
}

// PowerSequenceSchedulePreferenceListDataSelectors element
type PowerSequenceSchedulePreferenceListDataSelectors struct {
	SequenceId *PowerSequenceIdType `json:"sequenceId,omitempty"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m PowerSequenceSchedulePreferenceListDataSelectors) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *PowerSequenceSchedulePreferenceListDataSelectors) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// CmiPowerSequenceNodeScheduleInformationData message container
type CmiPowerSequenceNodeScheduleInformationData struct {
	PowerSequenceNodeScheduleInformationData PowerSequenceNodeScheduleInformationData `json:"powerSequenceNodeScheduleInformationData"`
}

// PowerSequenceNodeScheduleInformationData element
type PowerSequenceNodeScheduleInformationData struct {
	NodeRemoteControllable           *bool `json:"nodeRemoteControllable,omitempty"`
	SupportsSingleSlotSchedulingOnly *bool `json:"supportsSingleSlotSchedulingOnly,omitempty"`
	AlternativesCount                *uint `json:"alternativesCount,omitempty"`
	TotalSequencesCountMax           *uint `json:"totalSequencesCountMax,omitempty"`
	SupportsReselection              *bool `json:"supportsReselection,omitempty"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m PowerSequenceNodeScheduleInformationData) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *PowerSequenceNodeScheduleInformationData) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// CmiPowerSequenceNodeScheduleInformationDataElements message container
type CmiPowerSequenceNodeScheduleInformationDataElements struct {
	PowerSequenceNodeScheduleInformationDataElements PowerSequenceNodeScheduleInformationDataElements `json:"powerSequenceNodeScheduleInformationDataElements"`
}

// PowerSequenceNodeScheduleInformationDataElements element
type PowerSequenceNodeScheduleInformationDataElements struct {
	NodeRemoteControllable           *ElementTagType `json:"nodeRemoteControllable,omitempty"`
	SupportsSingleSlotSchedulingOnly *ElementTagType `json:"supportsSingleSlotSchedulingOnly,omitempty"`
	AlternativesCount                *ElementTagType `json:"alternativesCount,omitempty"`
	TotalSequencesCountMax           *ElementTagType `json:"totalSequencesCountMax,omitempty"`
	SupportsReselection              *ElementTagType `json:"supportsReselection,omitempty"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m PowerSequenceNodeScheduleInformationDataElements) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *PowerSequenceNodeScheduleInformationDataElements) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// CmiPowerSequenceScheduleConfigurationRequestCall message container
type CmiPowerSequenceScheduleConfigurationRequestCall struct {
	PowerSequenceScheduleConfigurationRequestCall PowerSequenceScheduleConfigurationRequestCall `json:"powerSequenceScheduleConfigurationRequestCall"`
}

// PowerSequenceScheduleConfigurationRequestCall element
type PowerSequenceScheduleConfigurationRequestCall struct {
	SequenceId *PowerSequenceIdType `json:"sequenceId,omitempty"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m PowerSequenceScheduleConfigurationRequestCall) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *PowerSequenceScheduleConfigurationRequestCall) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// CmiPowerSequenceScheduleConfigurationRequestCallElements message container
type CmiPowerSequenceScheduleConfigurationRequestCallElements struct {
	PowerSequenceScheduleConfigurationRequestCallElements PowerSequenceScheduleConfigurationRequestCallElements `json:"powerSequenceScheduleConfigurationRequestCallElements"`
}

// PowerSequenceScheduleConfigurationRequestCallElements element
type PowerSequenceScheduleConfigurationRequestCallElements struct {
	SequenceId *ElementTagType `json:"sequenceId,omitempty"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m PowerSequenceScheduleConfigurationRequestCallElements) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *PowerSequenceScheduleConfigurationRequestCallElements) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// CmiPowerSequencePriceCalculationRequestCall message container
type CmiPowerSequencePriceCalculationRequestCall struct {
	PowerSequencePriceCalculationRequestCall PowerSequencePriceCalculationRequestCall `json:"powerSequencePriceCalculationRequestCall"`
}

// PowerSequencePriceCalculationRequestCall element
type PowerSequencePriceCalculationRequestCall struct {
	SequenceId         *PowerSequenceIdType `json:"sequenceId,omitempty"`
	PotentialStartTime string               `json:"potentialStartTime"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m PowerSequencePriceCalculationRequestCall) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *PowerSequencePriceCalculationRequestCall) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// CmiPowerSequencePriceCalculationRequestCallElements message container
type CmiPowerSequencePriceCalculationRequestCallElements struct {
	PowerSequencePriceCalculationRequestCallElements PowerSequencePriceCalculationRequestCallElements `json:"powerSequencePriceCalculationRequestCallElements"`
}

// PowerSequencePriceCalculationRequestCallElements element
type PowerSequencePriceCalculationRequestCallElements struct {
	SequenceId         *ElementTagType `json:"sequenceId,omitempty"`
	PotentialStartTime *ElementTagType `json:"potentialStartTime,omitempty"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m PowerSequencePriceCalculationRequestCallElements) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *PowerSequencePriceCalculationRequestCallElements) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// CmiSensingData message container
type CmiSensingData struct {
	SensingData SensingData `json:"sensingData"`
}

// SensingData element
type SensingData struct {
	Timestamp string            `json:"timestamp"`
	State     string            `json:"state"`
	Value     *ScaledNumberType `json:"value,omitempty"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m SensingData) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *SensingData) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// CmiSensingListData message container
type CmiSensingListData struct {
	SensingListData SensingListData `json:"sensingListData"`
}

// SensingListData element
type SensingListData struct {
	SensingData []SensingDataType `json:"sensingData"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m SensingListData) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *SensingListData) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// CmiSensingListDataSelectors message container
type CmiSensingListDataSelectors struct {
	SensingListDataSelectors SensingListDataSelectors `json:"sensingListDataSelectors"`
}

// SensingListDataSelectors element
type SensingListDataSelectors struct {
	TimestampInterval *TimestampIntervalType `json:"timestampInterval,omitempty"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m SensingListDataSelectors) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *SensingListDataSelectors) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// CmiSensingDescriptionData message container
type CmiSensingDescriptionData struct {
	SensingDescriptionData SensingDescriptionData `json:"sensingDescriptionData"`
}

// SensingDescriptionData element
type SensingDescriptionData struct {
	SensingType string           `json:"sensingType"`
	Unit        string           `json:"unit"`
	ScopeType   string           `json:"scopeType"`
	Label       *LabelType       `json:"label,omitempty"`
	Description *DescriptionType `json:"description,omitempty"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m SensingDescriptionData) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *SensingDescriptionData) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// CmiSensingDescriptionDataElements message container
type CmiSensingDescriptionDataElements struct {
	SensingDescriptionDataElements SensingDescriptionDataElements `json:"sensingDescriptionDataElements"`
}

// SensingDescriptionDataElements element
type SensingDescriptionDataElements struct {
	SensingType *ElementTagType `json:"sensingType,omitempty"`
	Unit        *ElementTagType `json:"unit,omitempty"`
	ScopeType   *ElementTagType `json:"scopeType,omitempty"`
	Label       *ElementTagType `json:"label,omitempty"`
	Description *ElementTagType `json:"description,omitempty"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m SensingDescriptionDataElements) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *SensingDescriptionDataElements) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// CmiSetpointData message container
type CmiSetpointData struct {
	SetpointData SetpointData `json:"setpointData"`
}

// SetpointData element
type SetpointData struct {
	SetpointId               *SetpointIdType   `json:"setpointId,omitempty"`
	Value                    *ScaledNumberType `json:"value,omitempty"`
	ValueMin                 *ScaledNumberType `json:"valueMin,omitempty"`
	ValueMax                 *ScaledNumberType `json:"valueMax,omitempty"`
	ValueToleranceAbsolute   *ScaledNumberType `json:"valueToleranceAbsolute,omitempty"`
	ValueTolerancePercentage *ScaledNumberType `json:"valueTolerancePercentage,omitempty"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m SetpointData) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *SetpointData) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// CmiSetpointListData message container
type CmiSetpointListData struct {
	SetpointListData SetpointListData `json:"setpointListData"`
}

// SetpointListData element
type SetpointListData struct {
	SetpointData []SetpointDataType `json:"setpointData"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m SetpointListData) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *SetpointListData) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// CmiSetpointListDataSelectors message container
type CmiSetpointListDataSelectors struct {
	SetpointListDataSelectors SetpointListDataSelectors `json:"setpointListDataSelectors"`
}

// SetpointListDataSelectors element
type SetpointListDataSelectors struct {
	SetpointId *SetpointIdType `json:"setpointId,omitempty"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m SetpointListDataSelectors) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *SetpointListDataSelectors) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// CmiSetpointConstraintsData message container
type CmiSetpointConstraintsData struct {
	SetpointConstraintsData SetpointConstraintsData `json:"setpointConstraintsData"`
}

// SetpointConstraintsData element
type SetpointConstraintsData struct {
	SetpointId       *SetpointIdType   `json:"setpointId,omitempty"`
	SetpointRangeMin *ScaledNumberType `json:"setpointRangeMin,omitempty"`
	SetpointRangeMax *ScaledNumberType `json:"setpointRangeMax,omitempty"`
	SetpointStepSize *ScaledNumberType `json:"setpointStepSize,omitempty"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m SetpointConstraintsData) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *SetpointConstraintsData) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// CmiSetpointConstraintsListData message container
type CmiSetpointConstraintsListData struct {
	SetpointConstraintsListData SetpointConstraintsListData `json:"setpointConstraintsListData"`
}

// SetpointConstraintsListData element
type SetpointConstraintsListData struct {
	SetpointConstraintsData []SetpointConstraintsDataType `json:"setpointConstraintsData"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m SetpointConstraintsListData) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *SetpointConstraintsListData) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// CmiSetpointConstraintsListDataSelectors message container
type CmiSetpointConstraintsListDataSelectors struct {
	SetpointConstraintsListDataSelectors SetpointConstraintsListDataSelectors `json:"setpointConstraintsListDataSelectors"`
}

// SetpointConstraintsListDataSelectors element
type SetpointConstraintsListDataSelectors struct {
	SetpointId *SetpointIdType `json:"setpointId,omitempty"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m SetpointConstraintsListDataSelectors) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *SetpointConstraintsListDataSelectors) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// CmiSetpointDescriptionData message container
type CmiSetpointDescriptionData struct {
	SetpointDescriptionData SetpointDescriptionData `json:"setpointDescriptionData"`
}

// SetpointDescriptionData element
type SetpointDescriptionData struct {
	SetpointId    *SetpointIdType    `json:"setpointId,omitempty"`
	MeasurementId *MeasurementIdType `json:"measurementId,omitempty"`
	TimeTableId   *TimeTableIdType   `json:"timeTableId,omitempty"`
	SetpointType  string             `json:"setpointType"`
	Unit          string             `json:"unit"`
	ScopeType     string             `json:"scopeType"`
	Label         *LabelType         `json:"label,omitempty"`
	Description   *DescriptionType   `json:"description,omitempty"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m SetpointDescriptionData) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *SetpointDescriptionData) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// CmiSetpointDescriptionDataElements message container
type CmiSetpointDescriptionDataElements struct {
	SetpointDescriptionDataElements SetpointDescriptionDataElements `json:"setpointDescriptionDataElements"`
}

// SetpointDescriptionDataElements element
type SetpointDescriptionDataElements struct {
	SetpointId    *ElementTagType `json:"setpointId,omitempty"`
	MeasurementId *ElementTagType `json:"measurementId,omitempty"`
	TimeTableId   *ElementTagType `json:"timeTableId,omitempty"`
	SetpointType  *ElementTagType `json:"setpointType,omitempty"`
	Unit          *ElementTagType `json:"unit,omitempty"`
	ScopeType     *ElementTagType `json:"scopeType,omitempty"`
	Label         *ElementTagType `json:"label,omitempty"`
	Description   *ElementTagType `json:"description,omitempty"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m SetpointDescriptionDataElements) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *SetpointDescriptionDataElements) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// CmiSetpointDescriptionListData message container
type CmiSetpointDescriptionListData struct {
	SetpointDescriptionListData SetpointDescriptionListData `json:"setpointDescriptionListData"`
}

// SetpointDescriptionListData element
type SetpointDescriptionListData struct {
	SetpointDescriptionData []SetpointDescriptionDataType `json:"setpointDescriptionData"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m SetpointDescriptionListData) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *SetpointDescriptionListData) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// CmiSetpointDescriptionListDataSelectors message container
type CmiSetpointDescriptionListDataSelectors struct {
	SetpointDescriptionListDataSelectors SetpointDescriptionListDataSelectors `json:"setpointDescriptionListDataSelectors"`
}

// SetpointDescriptionListDataSelectors element
type SetpointDescriptionListDataSelectors struct {
	SetpointId    *SetpointIdType    `json:"setpointId,omitempty"`
	MeasurementId *MeasurementIdType `json:"measurementId,omitempty"`
	TimeTableId   *TimeTableIdType   `json:"timeTableId,omitempty"`
	SetpointType  string             `json:"setpointType"`
	ScopeType     string             `json:"scopeType"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m SetpointDescriptionListDataSelectors) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *SetpointDescriptionListDataSelectors) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// CmiSmartEnergyManagementPsData message container
type CmiSmartEnergyManagementPsData struct {
	SmartEnergyManagementPsData SmartEnergyManagementPsData `json:"smartEnergyManagementPsData"`
}

// SmartEnergyManagementPsData element
type SmartEnergyManagementPsData struct {
	NodeScheduleInformation *PowerSequenceNodeScheduleInformationDataType `json:"nodeScheduleInformation,omitempty"`
	Alternatives            []SmartEnergyManagementPsAlternativesType     `json:"alternatives"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m SmartEnergyManagementPsData) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *SmartEnergyManagementPsData) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// CmiSmartEnergyManagementPsDataSelectors message container
type CmiSmartEnergyManagementPsDataSelectors struct {
	SmartEnergyManagementPsDataSelectors SmartEnergyManagementPsDataSelectors `json:"smartEnergyManagementPsDataSelectors"`
}

// SmartEnergyManagementPsDataSelectors element
type SmartEnergyManagementPsDataSelectors struct {
	AlternativesRelation     *AlternativesRelation     `json:"alternativesRelation,omitempty"`
	PowerSequenceDescription *PowerSequenceDescription `json:"powerSequenceDescription,omitempty"`
	PowerTimeSlotSchedule    *PowerTimeSlotSchedule    `json:"powerTimeSlotSchedule,omitempty"`
	PowerTimeSlotValue       *PowerTimeSlotValue       `json:"powerTimeSlotValue,omitempty"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m SmartEnergyManagementPsDataSelectors) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *SmartEnergyManagementPsDataSelectors) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// CmiSmartEnergyManagementPsPriceData message container
type CmiSmartEnergyManagementPsPriceData struct {
	SmartEnergyManagementPsPriceData SmartEnergyManagementPsPriceData `json:"smartEnergyManagementPsPriceData"`
}

// SmartEnergyManagementPsPriceData element
type SmartEnergyManagementPsPriceData struct {
	Price []PowerSequencePriceDataType `json:"price"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m SmartEnergyManagementPsPriceData) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *SmartEnergyManagementPsPriceData) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// CmiSmartEnergyManagementPsPriceDataSelectors message container
type CmiSmartEnergyManagementPsPriceDataSelectors struct {
	SmartEnergyManagementPsPriceDataSelectors SmartEnergyManagementPsPriceDataSelectors `json:"smartEnergyManagementPsPriceDataSelectors"`
}

// SmartEnergyManagementPsPriceDataSelectors element
type SmartEnergyManagementPsPriceDataSelectors struct {
	Price *PowerSequencePriceListDataSelectorsType `json:"price,omitempty"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m SmartEnergyManagementPsPriceDataSelectors) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *SmartEnergyManagementPsPriceDataSelectors) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// CmiSmartEnergyManagementPsConfigurationRequestCall message container
type CmiSmartEnergyManagementPsConfigurationRequestCall struct {
	SmartEnergyManagementPsConfigurationRequestCall SmartEnergyManagementPsConfigurationRequestCall `json:"smartEnergyManagementPsConfigurationRequestCall"`
}

// SmartEnergyManagementPsConfigurationRequestCall element
type SmartEnergyManagementPsConfigurationRequestCall struct {
	ScheduleConfigurationRequest *PowerSequenceScheduleConfigurationRequestCallType `json:"scheduleConfigurationRequest,omitempty"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m SmartEnergyManagementPsConfigurationRequestCall) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *SmartEnergyManagementPsConfigurationRequestCall) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// CmiSmartEnergyManagementPsPriceCalculationRequestCall message container
type CmiSmartEnergyManagementPsPriceCalculationRequestCall struct {
	SmartEnergyManagementPsPriceCalculationRequestCall SmartEnergyManagementPsPriceCalculationRequestCall `json:"smartEnergyManagementPsPriceCalculationRequestCall"`
}

// SmartEnergyManagementPsPriceCalculationRequestCall element
type SmartEnergyManagementPsPriceCalculationRequestCall struct {
	PriceCalculationRequest *PowerSequencePriceCalculationRequestCallType `json:"priceCalculationRequest,omitempty"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m SmartEnergyManagementPsPriceCalculationRequestCall) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *SmartEnergyManagementPsPriceCalculationRequestCall) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// CmiSubscriptionManagementEntryData message container
type CmiSubscriptionManagementEntryData struct {
	SubscriptionManagementEntryData SubscriptionManagementEntryData `json:"subscriptionManagementEntryData"`
}

// SubscriptionManagementEntryData element
type SubscriptionManagementEntryData struct {
	SubscriptionId *SubscriptionIdType `json:"subscriptionId,omitempty"`
	ClientAddress  *FeatureAddressType `json:"clientAddress,omitempty"`
	ServerAddress  *FeatureAddressType `json:"serverAddress,omitempty"`
	Label          *LabelType          `json:"label,omitempty"`
	Description    *DescriptionType    `json:"description,omitempty"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m SubscriptionManagementEntryData) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *SubscriptionManagementEntryData) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// CmiSubscriptionManagementEntryListData message container
type CmiSubscriptionManagementEntryListData struct {
	SubscriptionManagementEntryListData SubscriptionManagementEntryListData `json:"subscriptionManagementEntryListData"`
}

// SubscriptionManagementEntryListData element
type SubscriptionManagementEntryListData struct {
	SubscriptionManagementEntryData []SubscriptionManagementEntryDataType `json:"subscriptionManagementEntryData"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m SubscriptionManagementEntryListData) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *SubscriptionManagementEntryListData) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// CmiSubscriptionManagementEntryListDataSelectors message container
type CmiSubscriptionManagementEntryListDataSelectors struct {
	SubscriptionManagementEntryListDataSelectors SubscriptionManagementEntryListDataSelectors `json:"subscriptionManagementEntryListDataSelectors"`
}

// SubscriptionManagementEntryListDataSelectors element
type SubscriptionManagementEntryListDataSelectors struct {
	SubscriptionId *SubscriptionIdType `json:"subscriptionId,omitempty"`
	ClientAddress  *FeatureAddressType `json:"clientAddress,omitempty"`
	ServerAddress  *FeatureAddressType `json:"serverAddress,omitempty"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m SubscriptionManagementEntryListDataSelectors) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *SubscriptionManagementEntryListDataSelectors) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// CmiSubscriptionManagementRequestCall message container
type CmiSubscriptionManagementRequestCall struct {
	SubscriptionManagementRequestCall SubscriptionManagementRequestCall `json:"subscriptionManagementRequestCall"`
}

// SubscriptionManagementRequestCall element
type SubscriptionManagementRequestCall struct {
	ClientAddress     *FeatureAddressType `json:"clientAddress,omitempty"`
	ServerAddress     *FeatureAddressType `json:"serverAddress,omitempty"`
	ServerFeatureType string              `json:"serverFeatureType"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m SubscriptionManagementRequestCall) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *SubscriptionManagementRequestCall) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// CmiSubscriptionManagementDeleteCall message container
type CmiSubscriptionManagementDeleteCall struct {
	SubscriptionManagementDeleteCall SubscriptionManagementDeleteCall `json:"subscriptionManagementDeleteCall"`
}

// SubscriptionManagementDeleteCall element
type SubscriptionManagementDeleteCall struct {
	SubscriptionId *SubscriptionIdType `json:"subscriptionId,omitempty"`
	ClientAddress  *FeatureAddressType `json:"clientAddress,omitempty"`
	ServerAddress  *FeatureAddressType `json:"serverAddress,omitempty"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m SubscriptionManagementDeleteCall) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *SubscriptionManagementDeleteCall) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// CmiSupplyConditionData message container
type CmiSupplyConditionData struct {
	SupplyConditionData SupplyConditionData `json:"supplyConditionData"`
}

// SupplyConditionData element
type SupplyConditionData struct {
	ConditionId         *ConditionIdType  `json:"conditionId,omitempty"`
	Timestamp           string            `json:"timestamp"`
	EventType           string            `json:"eventType"`
	Originator          string            `json:"originator"`
	ThresholdId         *ThresholdIdType  `json:"thresholdId,omitempty"`
	ThresholdPercentage *ScaledNumberType `json:"thresholdPercentage,omitempty"`
	RelevantPeriod      *TimePeriodType   `json:"relevantPeriod,omitempty"`
	Description         *DescriptionType  `json:"description,omitempty"`
	GridCondition       string            `json:"gridCondition"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m SupplyConditionData) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *SupplyConditionData) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// CmiSupplyConditionListData message container
type CmiSupplyConditionListData struct {
	SupplyConditionListData SupplyConditionListData `json:"supplyConditionListData"`
}

// SupplyConditionListData element
type SupplyConditionListData struct {
	SupplyConditionData []SupplyConditionDataType `json:"supplyConditionData"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m SupplyConditionListData) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *SupplyConditionListData) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// CmiSupplyConditionListDataSelectors message container
type CmiSupplyConditionListDataSelectors struct {
	SupplyConditionListDataSelectors SupplyConditionListDataSelectors `json:"supplyConditionListDataSelectors"`
}

// SupplyConditionListDataSelectors element
type SupplyConditionListDataSelectors struct {
	ConditionId       *ConditionIdType       `json:"conditionId,omitempty"`
	TimestampInterval *TimestampIntervalType `json:"timestampInterval,omitempty"`
	EventType         string                 `json:"eventType"`
	Originator        string                 `json:"originator"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m SupplyConditionListDataSelectors) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *SupplyConditionListDataSelectors) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// CmiSupplyConditionDescriptionData message container
type CmiSupplyConditionDescriptionData struct {
	SupplyConditionDescriptionData SupplyConditionDescriptionData `json:"supplyConditionDescriptionData"`
}

// SupplyConditionDescriptionData element
type SupplyConditionDescriptionData struct {
	ConditionId             *ConditionIdType `json:"conditionId,omitempty"`
	CommodityType           string           `json:"commodityType"`
	PositiveEnergyDirection string           `json:"positiveEnergyDirection"`
	Label                   *LabelType       `json:"label,omitempty"`
	Description             *DescriptionType `json:"description,omitempty"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m SupplyConditionDescriptionData) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *SupplyConditionDescriptionData) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// CmiSupplyConditionDescriptionDataElements message container
type CmiSupplyConditionDescriptionDataElements struct {
	SupplyConditionDescriptionDataElements SupplyConditionDescriptionDataElements `json:"supplyConditionDescriptionDataElements"`
}

// SupplyConditionDescriptionDataElements element
type SupplyConditionDescriptionDataElements struct {
	ConditionId             *ElementTagType `json:"conditionId,omitempty"`
	CommodityType           *ElementTagType `json:"commodityType,omitempty"`
	PositiveEnergyDirection *ElementTagType `json:"positiveEnergyDirection,omitempty"`
	Label                   *ElementTagType `json:"label,omitempty"`
	Description             *ElementTagType `json:"description,omitempty"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m SupplyConditionDescriptionDataElements) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *SupplyConditionDescriptionDataElements) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// CmiSupplyConditionDescriptionListData message container
type CmiSupplyConditionDescriptionListData struct {
	SupplyConditionDescriptionListData SupplyConditionDescriptionListData `json:"supplyConditionDescriptionListData"`
}

// SupplyConditionDescriptionListData element
type SupplyConditionDescriptionListData struct {
	SupplyConditionDescriptionData []SupplyConditionDescriptionDataType `json:"supplyConditionDescriptionData"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m SupplyConditionDescriptionListData) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *SupplyConditionDescriptionListData) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// CmiSupplyConditionDescriptionListDataSelectors message container
type CmiSupplyConditionDescriptionListDataSelectors struct {
	SupplyConditionDescriptionListDataSelectors SupplyConditionDescriptionListDataSelectors `json:"supplyConditionDescriptionListDataSelectors"`
}

// SupplyConditionDescriptionListDataSelectors element
type SupplyConditionDescriptionListDataSelectors struct {
	ConditionId *ConditionIdType `json:"conditionId,omitempty"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m SupplyConditionDescriptionListDataSelectors) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *SupplyConditionDescriptionListDataSelectors) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// CmiSupplyConditionThresholdRelationData message container
type CmiSupplyConditionThresholdRelationData struct {
	SupplyConditionThresholdRelationData SupplyConditionThresholdRelationData `json:"supplyConditionThresholdRelationData"`
}

// SupplyConditionThresholdRelationData element
type SupplyConditionThresholdRelationData struct {
	ConditionId *ConditionIdType  `json:"conditionId,omitempty"`
	ThresholdId []ThresholdIdType `json:"thresholdId"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m SupplyConditionThresholdRelationData) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *SupplyConditionThresholdRelationData) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// CmiSupplyConditionThresholdRelationDataElements message container
type CmiSupplyConditionThresholdRelationDataElements struct {
	SupplyConditionThresholdRelationDataElements SupplyConditionThresholdRelationDataElements `json:"supplyConditionThresholdRelationDataElements"`
}

// SupplyConditionThresholdRelationDataElements element
type SupplyConditionThresholdRelationDataElements struct {
	ConditionId *ElementTagType `json:"conditionId,omitempty"`
	ThresholdId *ElementTagType `json:"thresholdId,omitempty"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m SupplyConditionThresholdRelationDataElements) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *SupplyConditionThresholdRelationDataElements) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// CmiSupplyConditionThresholdRelationListData message container
type CmiSupplyConditionThresholdRelationListData struct {
	SupplyConditionThresholdRelationListData SupplyConditionThresholdRelationListData `json:"supplyConditionThresholdRelationListData"`
}

// SupplyConditionThresholdRelationListData element
type SupplyConditionThresholdRelationListData struct {
	SupplyConditionThresholdRelationData []SupplyConditionThresholdRelationDataType `json:"supplyConditionThresholdRelationData"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m SupplyConditionThresholdRelationListData) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *SupplyConditionThresholdRelationListData) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// CmiSupplyConditionThresholdRelationListDataSelectors message container
type CmiSupplyConditionThresholdRelationListDataSelectors struct {
	SupplyConditionThresholdRelationListDataSelectors SupplyConditionThresholdRelationListDataSelectors `json:"supplyConditionThresholdRelationListDataSelectors"`
}

// SupplyConditionThresholdRelationListDataSelectors element
type SupplyConditionThresholdRelationListDataSelectors struct {
	ConditionId *ConditionIdType `json:"conditionId,omitempty"`
	ThresholdId *ThresholdIdType `json:"thresholdId,omitempty"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m SupplyConditionThresholdRelationListDataSelectors) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *SupplyConditionThresholdRelationListDataSelectors) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// CmiTariffOverallConstraintsData message container
type CmiTariffOverallConstraintsData struct {
	TariffOverallConstraintsData TariffOverallConstraintsData `json:"tariffOverallConstraintsData"`
}

// TariffOverallConstraintsData element
type TariffOverallConstraintsData struct {
	MaxTariffCount         *TariffCountType       `json:"maxTariffCount,omitempty"`
	MaxBoundaryCount       *TierBoundaryCountType `json:"maxBoundaryCount,omitempty"`
	MaxTierCount           *TierCountType         `json:"maxTierCount,omitempty"`
	MaxIncentiveCount      *IncentiveCountType    `json:"maxIncentiveCount,omitempty"`
	MaxBoundariesPerTariff *TierBoundaryCountType `json:"maxBoundariesPerTariff,omitempty"`
	MaxTiersPerTariff      *TierCountType         `json:"maxTiersPerTariff,omitempty"`
	MaxBoundariesPerTier   *TierBoundaryCountType `json:"maxBoundariesPerTier,omitempty"`
	MaxIncentivesPerTier   *IncentiveCountType    `json:"maxIncentivesPerTier,omitempty"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m TariffOverallConstraintsData) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *TariffOverallConstraintsData) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// CmiTariffOverallConstraintsDataElements message container
type CmiTariffOverallConstraintsDataElements struct {
	TariffOverallConstraintsDataElements TariffOverallConstraintsDataElements `json:"tariffOverallConstraintsDataElements"`
}

// TariffOverallConstraintsDataElements element
type TariffOverallConstraintsDataElements struct {
	MaxTariffCount         *ElementTagType `json:"maxTariffCount,omitempty"`
	MaxBoundaryCount       *ElementTagType `json:"maxBoundaryCount,omitempty"`
	MaxTierCount           *ElementTagType `json:"maxTierCount,omitempty"`
	MaxIncentiveCount      *ElementTagType `json:"maxIncentiveCount,omitempty"`
	MaxBoundariesPerTariff *ElementTagType `json:"maxBoundariesPerTariff,omitempty"`
	MaxTiersPerTariff      *ElementTagType `json:"maxTiersPerTariff,omitempty"`
	MaxBoundariesPerTier   *ElementTagType `json:"maxBoundariesPerTier,omitempty"`
	MaxIncentivesPerTier   *ElementTagType `json:"maxIncentivesPerTier,omitempty"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m TariffOverallConstraintsDataElements) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *TariffOverallConstraintsDataElements) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// CmiTariffData message container
type CmiTariffData struct {
	TariffData TariffData `json:"tariffData"`
}

// TariffData element
type TariffData struct {
	TariffId     *TariffIdType `json:"tariffId,omitempty"`
	ActiveTierId []TierIdType  `json:"activeTierId"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m TariffData) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *TariffData) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// CmiTariffDataElements message container
type CmiTariffDataElements struct {
	TariffDataElements TariffDataElements `json:"tariffDataElements"`
}

// TariffDataElements element
type TariffDataElements struct {
	TariffId     *ElementTagType `json:"tariffId,omitempty"`
	ActiveTierId *ElementTagType `json:"activeTierId,omitempty"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m TariffDataElements) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *TariffDataElements) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// CmiTariffListData message container
type CmiTariffListData struct {
	TariffListData TariffListData `json:"tariffListData"`
}

// TariffListData element
type TariffListData struct {
	TariffData []TariffDataType `json:"tariffData"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m TariffListData) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *TariffListData) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// CmiTariffListDataSelectors message container
type CmiTariffListDataSelectors struct {
	TariffListDataSelectors TariffListDataSelectors `json:"tariffListDataSelectors"`
}

// TariffListDataSelectors element
type TariffListDataSelectors struct {
	TariffId     *TariffIdType `json:"tariffId,omitempty"`
	ActiveTierId *TierIdType   `json:"activeTierId,omitempty"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m TariffListDataSelectors) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *TariffListDataSelectors) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// CmiTariffTierRelationData message container
type CmiTariffTierRelationData struct {
	TariffTierRelationData TariffTierRelationData `json:"tariffTierRelationData"`
}

// TariffTierRelationData element
type TariffTierRelationData struct {
	TariffId *TariffIdType `json:"tariffId,omitempty"`
	TierId   []TierIdType  `json:"tierId"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m TariffTierRelationData) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *TariffTierRelationData) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// CmiTariffTierRelationDataElements message container
type CmiTariffTierRelationDataElements struct {
	TariffTierRelationDataElements TariffTierRelationDataElements `json:"tariffTierRelationDataElements"`
}

// TariffTierRelationDataElements element
type TariffTierRelationDataElements struct {
	TariffId *ElementTagType `json:"tariffId,omitempty"`
	TierId   *ElementTagType `json:"tierId,omitempty"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m TariffTierRelationDataElements) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *TariffTierRelationDataElements) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// CmiTariffTierRelationListData message container
type CmiTariffTierRelationListData struct {
	TariffTierRelationListData TariffTierRelationListData `json:"tariffTierRelationListData"`
}

// TariffTierRelationListData element
type TariffTierRelationListData struct {
	TariffTierRelationData []TariffTierRelationDataType `json:"tariffTierRelationData"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m TariffTierRelationListData) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *TariffTierRelationListData) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// CmiTariffTierRelationListDataSelectors message container
type CmiTariffTierRelationListDataSelectors struct {
	TariffTierRelationListDataSelectors TariffTierRelationListDataSelectors `json:"tariffTierRelationListDataSelectors"`
}

// TariffTierRelationListDataSelectors element
type TariffTierRelationListDataSelectors struct {
	TariffId *TariffIdType `json:"tariffId,omitempty"`
	TierId   *TierIdType   `json:"tierId,omitempty"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m TariffTierRelationListDataSelectors) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *TariffTierRelationListDataSelectors) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// CmiTariffBoundaryRelationData message container
type CmiTariffBoundaryRelationData struct {
	TariffBoundaryRelationData TariffBoundaryRelationData `json:"tariffBoundaryRelationData"`
}

// TariffBoundaryRelationData element
type TariffBoundaryRelationData struct {
	TariffId   *TariffIdType        `json:"tariffId,omitempty"`
	BoundaryId []TierBoundaryIdType `json:"boundaryId"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m TariffBoundaryRelationData) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *TariffBoundaryRelationData) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// CmiTariffBoundaryRelationDataElements message container
type CmiTariffBoundaryRelationDataElements struct {
	TariffBoundaryRelationDataElements TariffBoundaryRelationDataElements `json:"tariffBoundaryRelationDataElements"`
}

// TariffBoundaryRelationDataElements element
type TariffBoundaryRelationDataElements struct {
	TariffId   *ElementTagType `json:"tariffId,omitempty"`
	BoundaryId *ElementTagType `json:"boundaryId,omitempty"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m TariffBoundaryRelationDataElements) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *TariffBoundaryRelationDataElements) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// CmiTariffBoundaryRelationListData message container
type CmiTariffBoundaryRelationListData struct {
	TariffBoundaryRelationListData TariffBoundaryRelationListData `json:"tariffBoundaryRelationListData"`
}

// TariffBoundaryRelationListData element
type TariffBoundaryRelationListData struct {
	TariffBoundaryRelationData []TariffBoundaryRelationDataType `json:"tariffBoundaryRelationData"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m TariffBoundaryRelationListData) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *TariffBoundaryRelationListData) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// CmiTariffBoundaryRelationListDataSelectors message container
type CmiTariffBoundaryRelationListDataSelectors struct {
	TariffBoundaryRelationListDataSelectors TariffBoundaryRelationListDataSelectors `json:"tariffBoundaryRelationListDataSelectors"`
}

// TariffBoundaryRelationListDataSelectors element
type TariffBoundaryRelationListDataSelectors struct {
	TariffId   *TariffIdType       `json:"tariffId,omitempty"`
	BoundaryId *TierBoundaryIdType `json:"boundaryId,omitempty"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m TariffBoundaryRelationListDataSelectors) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *TariffBoundaryRelationListDataSelectors) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// CmiTariffDescriptionData message container
type CmiTariffDescriptionData struct {
	TariffDescriptionData TariffDescriptionData `json:"tariffDescriptionData"`
}

// TariffDescriptionData element
type TariffDescriptionData struct {
	TariffId        *TariffIdType      `json:"tariffId,omitempty"`
	CommodityId     *CommodityIdType   `json:"commodityId,omitempty"`
	MeasurementId   *MeasurementIdType `json:"measurementId,omitempty"`
	TariffWriteable *bool              `json:"tariffWriteable,omitempty"`
	UpdateRequired  *bool              `json:"updateRequired,omitempty"`
	ScopeType       string             `json:"scopeType"`
	Label           *LabelType         `json:"label,omitempty"`
	Description     *DescriptionType   `json:"description,omitempty"`
	SlotIdSupport   *bool              `json:"slotIdSupport,omitempty"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m TariffDescriptionData) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *TariffDescriptionData) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// CmiTariffDescriptionDataElements message container
type CmiTariffDescriptionDataElements struct {
	TariffDescriptionDataElements TariffDescriptionDataElements `json:"tariffDescriptionDataElements"`
}

// TariffDescriptionDataElements element
type TariffDescriptionDataElements struct {
	TariffId        *ElementTagType `json:"tariffId,omitempty"`
	CommodityId     *ElementTagType `json:"commodityId,omitempty"`
	MeasurementId   *ElementTagType `json:"measurementId,omitempty"`
	TariffWriteable *ElementTagType `json:"tariffWriteable,omitempty"`
	UpdateRequired  *ElementTagType `json:"updateRequired,omitempty"`
	ScopeType       *ElementTagType `json:"scopeType,omitempty"`
	Label           *ElementTagType `json:"label,omitempty"`
	Description     *ElementTagType `json:"description,omitempty"`
	SlotIdSupport   *ElementTagType `json:"slotIdSupport,omitempty"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m TariffDescriptionDataElements) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *TariffDescriptionDataElements) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// CmiTariffDescriptionListData message container
type CmiTariffDescriptionListData struct {
	TariffDescriptionListData TariffDescriptionListData `json:"tariffDescriptionListData"`
}

// TariffDescriptionListData element
type TariffDescriptionListData struct {
	TariffDescriptionData []TariffDescriptionDataType `json:"tariffDescriptionData"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m TariffDescriptionListData) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *TariffDescriptionListData) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// CmiTariffDescriptionListDataSelectors message container
type CmiTariffDescriptionListDataSelectors struct {
	TariffDescriptionListDataSelectors TariffDescriptionListDataSelectors `json:"tariffDescriptionListDataSelectors"`
}

// TariffDescriptionListDataSelectors element
type TariffDescriptionListDataSelectors struct {
	TariffId      *TariffIdType      `json:"tariffId,omitempty"`
	CommodityId   *CommodityIdType   `json:"commodityId,omitempty"`
	MeasurementId *MeasurementIdType `json:"measurementId,omitempty"`
	ScopeType     string             `json:"scopeType"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m TariffDescriptionListDataSelectors) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *TariffDescriptionListDataSelectors) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// CmiTierBoundaryData message container
type CmiTierBoundaryData struct {
	TierBoundaryData TierBoundaryData `json:"tierBoundaryData"`
}

// TierBoundaryData element
type TierBoundaryData struct {
	BoundaryId         *TierBoundaryIdType `json:"boundaryId,omitempty"`
	TimePeriod         *TimePeriodType     `json:"timePeriod,omitempty"`
	TimeTableId        *TimeTableIdType    `json:"timeTableId,omitempty"`
	LowerBoundaryValue *ScaledNumberType   `json:"lowerBoundaryValue,omitempty"`
	UpperBoundaryValue *ScaledNumberType   `json:"upperBoundaryValue,omitempty"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m TierBoundaryData) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *TierBoundaryData) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// CmiTierBoundaryListData message container
type CmiTierBoundaryListData struct {
	TierBoundaryListData TierBoundaryListData `json:"tierBoundaryListData"`
}

// TierBoundaryListData element
type TierBoundaryListData struct {
	TierBoundaryData []TierBoundaryDataType `json:"tierBoundaryData"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m TierBoundaryListData) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *TierBoundaryListData) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// CmiTierBoundaryListDataSelectors message container
type CmiTierBoundaryListDataSelectors struct {
	TierBoundaryListDataSelectors TierBoundaryListDataSelectors `json:"tierBoundaryListDataSelectors"`
}

// TierBoundaryListDataSelectors element
type TierBoundaryListDataSelectors struct {
	BoundaryId *TierBoundaryIdType `json:"boundaryId,omitempty"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m TierBoundaryListDataSelectors) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *TierBoundaryListDataSelectors) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// CmiTierBoundaryDescriptionData message container
type CmiTierBoundaryDescriptionData struct {
	TierBoundaryDescriptionData TierBoundaryDescriptionData `json:"tierBoundaryDescriptionData"`
}

// TierBoundaryDescriptionData element
type TierBoundaryDescriptionData struct {
	BoundaryId               *TierBoundaryIdType `json:"boundaryId,omitempty"`
	BoundaryType             string              `json:"boundaryType"`
	ValidForTierId           *TierIdType         `json:"validForTierId,omitempty"`
	SwitchToTierIdWhenLower  *TierIdType         `json:"switchToTierIdWhenLower,omitempty"`
	SwitchToTierIdWhenHigher *TierIdType         `json:"switchToTierIdWhenHigher,omitempty"`
	BoundaryUnit             string              `json:"boundaryUnit"`
	Label                    *LabelType          `json:"label,omitempty"`
	Description              *DescriptionType    `json:"description,omitempty"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m TierBoundaryDescriptionData) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *TierBoundaryDescriptionData) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// CmiTierBoundaryDescriptionDataElements message container
type CmiTierBoundaryDescriptionDataElements struct {
	TierBoundaryDescriptionDataElements TierBoundaryDescriptionDataElements `json:"tierBoundaryDescriptionDataElements"`
}

// TierBoundaryDescriptionDataElements element
type TierBoundaryDescriptionDataElements struct {
	BoundaryId               *ElementTagType `json:"boundaryId,omitempty"`
	BoundaryType             *ElementTagType `json:"boundaryType,omitempty"`
	ValidForTierId           *ElementTagType `json:"validForTierId,omitempty"`
	SwitchToTierIdWhenLower  *ElementTagType `json:"switchToTierIdWhenLower,omitempty"`
	SwitchToTierIdWhenHigher *ElementTagType `json:"switchToTierIdWhenHigher,omitempty"`
	BoundaryUnit             *ElementTagType `json:"boundaryUnit,omitempty"`
	Label                    *ElementTagType `json:"label,omitempty"`
	Description              *ElementTagType `json:"description,omitempty"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m TierBoundaryDescriptionDataElements) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *TierBoundaryDescriptionDataElements) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// CmiTierBoundaryDescriptionListData message container
type CmiTierBoundaryDescriptionListData struct {
	TierBoundaryDescriptionListData TierBoundaryDescriptionListData `json:"tierBoundaryDescriptionListData"`
}

// TierBoundaryDescriptionListData element
type TierBoundaryDescriptionListData struct {
	TierBoundaryDescriptionData []TierBoundaryDescriptionDataType `json:"tierBoundaryDescriptionData"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m TierBoundaryDescriptionListData) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *TierBoundaryDescriptionListData) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// CmiTierBoundaryDescriptionListDataSelectors message container
type CmiTierBoundaryDescriptionListDataSelectors struct {
	TierBoundaryDescriptionListDataSelectors TierBoundaryDescriptionListDataSelectors `json:"tierBoundaryDescriptionListDataSelectors"`
}

// TierBoundaryDescriptionListDataSelectors element
type TierBoundaryDescriptionListDataSelectors struct {
	BoundaryId   *TierBoundaryIdType `json:"boundaryId,omitempty"`
	BoundaryType string              `json:"boundaryType"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m TierBoundaryDescriptionListDataSelectors) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *TierBoundaryDescriptionListDataSelectors) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// CmiCommodityData message container
type CmiCommodityData struct {
	CommodityData CommodityData `json:"commodityData"`
}

// CommodityData element
type CommodityData struct {
	CommodityId             *CommodityIdType `json:"commodityId,omitempty"`
	CommodityType           string           `json:"commodityType"`
	PositiveEnergyDirection string           `json:"positiveEnergyDirection"`
	Label                   *LabelType       `json:"label,omitempty"`
	Description             *DescriptionType `json:"description,omitempty"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m CommodityData) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *CommodityData) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// CmiCommodityDataElements message container
type CmiCommodityDataElements struct {
	CommodityDataElements CommodityDataElements `json:"commodityDataElements"`
}

// CommodityDataElements element
type CommodityDataElements struct {
	CommodityId             *ElementTagType `json:"commodityId,omitempty"`
	CommodityType           *ElementTagType `json:"commodityType,omitempty"`
	PositiveEnergyDirection *ElementTagType `json:"positiveEnergyDirection,omitempty"`
	Label                   *ElementTagType `json:"label,omitempty"`
	Description             *ElementTagType `json:"description,omitempty"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m CommodityDataElements) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *CommodityDataElements) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// CmiCommodityListData message container
type CmiCommodityListData struct {
	CommodityListData CommodityListData `json:"commodityListData"`
}

// CommodityListData element
type CommodityListData struct {
	CommodityData []CommodityDataType `json:"commodityData"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m CommodityListData) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *CommodityListData) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// CmiCommodityListDataSelectors message container
type CmiCommodityListDataSelectors struct {
	CommodityListDataSelectors CommodityListDataSelectors `json:"commodityListDataSelectors"`
}

// CommodityListDataSelectors element
type CommodityListDataSelectors struct {
	CommodityId   *CommodityIdType `json:"commodityId,omitempty"`
	CommodityType string           `json:"commodityType"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m CommodityListDataSelectors) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *CommodityListDataSelectors) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// CmiTierData message container
type CmiTierData struct {
	TierData TierData `json:"tierData"`
}

// TierData element
type TierData struct {
	TierId            *TierIdType       `json:"tierId,omitempty"`
	TimePeriod        *TimePeriodType   `json:"timePeriod,omitempty"`
	TimeTableId       *TimeTableIdType  `json:"timeTableId,omitempty"`
	ActiveIncentiveId []IncentiveIdType `json:"activeIncentiveId"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m TierData) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *TierData) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// CmiTierListData message container
type CmiTierListData struct {
	TierListData TierListData `json:"tierListData"`
}

// TierListData element
type TierListData struct {
	TierData []TierDataType `json:"tierData"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m TierListData) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *TierListData) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// CmiTierListDataSelectors message container
type CmiTierListDataSelectors struct {
	TierListDataSelectors TierListDataSelectors `json:"tierListDataSelectors"`
}

// TierListDataSelectors element
type TierListDataSelectors struct {
	TierId            *TierIdType      `json:"tierId,omitempty"`
	ActiveIncentiveId *IncentiveIdType `json:"activeIncentiveId,omitempty"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m TierListDataSelectors) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *TierListDataSelectors) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// CmiTierIncentiveRelationData message container
type CmiTierIncentiveRelationData struct {
	TierIncentiveRelationData TierIncentiveRelationData `json:"tierIncentiveRelationData"`
}

// TierIncentiveRelationData element
type TierIncentiveRelationData struct {
	TierId      *TierIdType       `json:"tierId,omitempty"`
	IncentiveId []IncentiveIdType `json:"incentiveId"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m TierIncentiveRelationData) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *TierIncentiveRelationData) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// CmiTierIncentiveRelationDataElements message container
type CmiTierIncentiveRelationDataElements struct {
	TierIncentiveRelationDataElements TierIncentiveRelationDataElements `json:"tierIncentiveRelationDataElements"`
}

// TierIncentiveRelationDataElements element
type TierIncentiveRelationDataElements struct {
	TierId      *ElementTagType `json:"tierId,omitempty"`
	IncentiveId *ElementTagType `json:"incentiveId,omitempty"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m TierIncentiveRelationDataElements) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *TierIncentiveRelationDataElements) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// CmiTierIncentiveRelationListData message container
type CmiTierIncentiveRelationListData struct {
	TierIncentiveRelationListData TierIncentiveRelationListData `json:"tierIncentiveRelationListData"`
}

// TierIncentiveRelationListData element
type TierIncentiveRelationListData struct {
	TierIncentiveRelationData []TierIncentiveRelationDataType `json:"tierIncentiveRelationData"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m TierIncentiveRelationListData) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *TierIncentiveRelationListData) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// CmiTierIncentiveRelationListDataSelectors message container
type CmiTierIncentiveRelationListDataSelectors struct {
	TierIncentiveRelationListDataSelectors TierIncentiveRelationListDataSelectors `json:"tierIncentiveRelationListDataSelectors"`
}

// TierIncentiveRelationListDataSelectors element
type TierIncentiveRelationListDataSelectors struct {
	TierId      *TierIdType      `json:"tierId,omitempty"`
	IncentiveId *IncentiveIdType `json:"incentiveId,omitempty"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m TierIncentiveRelationListDataSelectors) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *TierIncentiveRelationListDataSelectors) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// CmiTierDescriptionData message container
type CmiTierDescriptionData struct {
	TierDescriptionData TierDescriptionData `json:"tierDescriptionData"`
}

// TierDescriptionData element
type TierDescriptionData struct {
	TierId      *TierIdType      `json:"tierId,omitempty"`
	TierType    string           `json:"tierType"`
	Label       *LabelType       `json:"label,omitempty"`
	Description *DescriptionType `json:"description,omitempty"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m TierDescriptionData) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *TierDescriptionData) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// CmiTierDescriptionDataElements message container
type CmiTierDescriptionDataElements struct {
	TierDescriptionDataElements TierDescriptionDataElements `json:"tierDescriptionDataElements"`
}

// TierDescriptionDataElements element
type TierDescriptionDataElements struct {
	TierId      *ElementTagType `json:"tierId,omitempty"`
	TierType    *ElementTagType `json:"tierType,omitempty"`
	Label       *ElementTagType `json:"label,omitempty"`
	Description *ElementTagType `json:"description,omitempty"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m TierDescriptionDataElements) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *TierDescriptionDataElements) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// CmiTierDescriptionListData message container
type CmiTierDescriptionListData struct {
	TierDescriptionListData TierDescriptionListData `json:"tierDescriptionListData"`
}

// TierDescriptionListData element
type TierDescriptionListData struct {
	TierDescriptionData []TierDescriptionDataType `json:"tierDescriptionData"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m TierDescriptionListData) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *TierDescriptionListData) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// CmiTierDescriptionListDataSelectors message container
type CmiTierDescriptionListDataSelectors struct {
	TierDescriptionListDataSelectors TierDescriptionListDataSelectors `json:"tierDescriptionListDataSelectors"`
}

// TierDescriptionListDataSelectors element
type TierDescriptionListDataSelectors struct {
	TierId   *TierIdType `json:"tierId,omitempty"`
	TierType string      `json:"tierType"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m TierDescriptionListDataSelectors) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *TierDescriptionListDataSelectors) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// CmiIncentiveData message container
type CmiIncentiveData struct {
	IncentiveData IncentiveData `json:"incentiveData"`
}

// IncentiveData element
type IncentiveData struct {
	IncentiveId *IncentiveIdType  `json:"incentiveId,omitempty"`
	ValueType   string            `json:"valueType"`
	Timestamp   string            `json:"timestamp"`
	TimePeriod  *TimePeriodType   `json:"timePeriod,omitempty"`
	TimeTableId *TimeTableIdType  `json:"timeTableId,omitempty"`
	Value       *ScaledNumberType `json:"value,omitempty"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m IncentiveData) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *IncentiveData) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// CmiIncentiveListData message container
type CmiIncentiveListData struct {
	IncentiveListData IncentiveListData `json:"incentiveListData"`
}

// IncentiveListData element
type IncentiveListData struct {
	IncentiveData []IncentiveDataType `json:"incentiveData"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m IncentiveListData) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *IncentiveListData) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// CmiIncentiveListDataSelectors message container
type CmiIncentiveListDataSelectors struct {
	IncentiveListDataSelectors IncentiveListDataSelectors `json:"incentiveListDataSelectors"`
}

// IncentiveListDataSelectors element
type IncentiveListDataSelectors struct {
	IncentiveId       *IncentiveIdType       `json:"incentiveId,omitempty"`
	ValueType         string                 `json:"valueType"`
	TimestampInterval *TimestampIntervalType `json:"timestampInterval,omitempty"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m IncentiveListDataSelectors) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *IncentiveListDataSelectors) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// CmiIncentiveDescriptionData message container
type CmiIncentiveDescriptionData struct {
	IncentiveDescriptionData IncentiveDescriptionData `json:"incentiveDescriptionData"`
}

// IncentiveDescriptionData element
type IncentiveDescriptionData struct {
	IncentiveId       *IncentiveIdType       `json:"incentiveId,omitempty"`
	IncentiveType     string                 `json:"incentiveType"`
	IncentivePriority *IncentivePriorityType `json:"incentivePriority,omitempty"`
	Currency          string                 `json:"currency"`
	Unit              string                 `json:"unit"`
	Label             *LabelType             `json:"label,omitempty"`
	Description       *DescriptionType       `json:"description,omitempty"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m IncentiveDescriptionData) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *IncentiveDescriptionData) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// CmiIncentiveDescriptionDataElements message container
type CmiIncentiveDescriptionDataElements struct {
	IncentiveDescriptionDataElements IncentiveDescriptionDataElements `json:"incentiveDescriptionDataElements"`
}

// IncentiveDescriptionDataElements element
type IncentiveDescriptionDataElements struct {
	IncentiveId       *ElementTagType `json:"incentiveId,omitempty"`
	IncentiveType     *ElementTagType `json:"incentiveType,omitempty"`
	IncentivePriority *ElementTagType `json:"incentivePriority,omitempty"`
	Currency          *ElementTagType `json:"currency,omitempty"`
	Unit              *ElementTagType `json:"unit,omitempty"`
	Label             *ElementTagType `json:"label,omitempty"`
	Description       *ElementTagType `json:"description,omitempty"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m IncentiveDescriptionDataElements) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *IncentiveDescriptionDataElements) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// CmiIncentiveDescriptionListData message container
type CmiIncentiveDescriptionListData struct {
	IncentiveDescriptionListData IncentiveDescriptionListData `json:"incentiveDescriptionListData"`
}

// IncentiveDescriptionListData element
type IncentiveDescriptionListData struct {
	IncentiveDescriptionData []IncentiveDescriptionDataType `json:"incentiveDescriptionData"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m IncentiveDescriptionListData) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *IncentiveDescriptionListData) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// CmiIncentiveDescriptionListDataSelectors message container
type CmiIncentiveDescriptionListDataSelectors struct {
	IncentiveDescriptionListDataSelectors IncentiveDescriptionListDataSelectors `json:"incentiveDescriptionListDataSelectors"`
}

// IncentiveDescriptionListDataSelectors element
type IncentiveDescriptionListDataSelectors struct {
	IncentiveId   *IncentiveIdType `json:"incentiveId,omitempty"`
	IncentiveType string           `json:"incentiveType"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m IncentiveDescriptionListDataSelectors) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *IncentiveDescriptionListDataSelectors) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// CmiTaskManagementJobData message container
type CmiTaskManagementJobData struct {
	TaskManagementJobData TaskManagementJobData `json:"taskManagementJobData"`
}

// TaskManagementJobData element
type TaskManagementJobData struct {
	JobId         *TaskManagementJobIdType `json:"jobId,omitempty"`
	Timestamp     string                   `json:"timestamp"`
	JobState      string                   `json:"jobState"`
	ElapsedTime   string                   `json:"elapsedTime"`
	RemainingTime string                   `json:"remainingTime"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m TaskManagementJobData) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *TaskManagementJobData) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// CmiTaskManagementJobDataElements message container
type CmiTaskManagementJobDataElements struct {
	TaskManagementJobDataElements TaskManagementJobDataElements `json:"taskManagementJobDataElements"`
}

// TaskManagementJobDataElements element
type TaskManagementJobDataElements struct {
	JobId         *ElementTagType `json:"jobId,omitempty"`
	Timestamp     *ElementTagType `json:"timestamp,omitempty"`
	JobState      *ElementTagType `json:"jobState,omitempty"`
	ElapsedTime   *ElementTagType `json:"elapsedTime,omitempty"`
	RemainingTime *ElementTagType `json:"remainingTime,omitempty"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m TaskManagementJobDataElements) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *TaskManagementJobDataElements) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// CmiTaskManagementJobListData message container
type CmiTaskManagementJobListData struct {
	TaskManagementJobListData TaskManagementJobListData `json:"taskManagementJobListData"`
}

// TaskManagementJobListData element
type TaskManagementJobListData struct {
	TaskManagementJobData []TaskManagementJobDataType `json:"taskManagementJobData"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m TaskManagementJobListData) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *TaskManagementJobListData) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// CmiTaskManagementJobListDataSelectors message container
type CmiTaskManagementJobListDataSelectors struct {
	TaskManagementJobListDataSelectors TaskManagementJobListDataSelectors `json:"taskManagementJobListDataSelectors"`
}

// TaskManagementJobListDataSelectors element
type TaskManagementJobListDataSelectors struct {
	JobId    *TaskManagementJobIdType `json:"jobId,omitempty"`
	JobState string                   `json:"jobState"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m TaskManagementJobListDataSelectors) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *TaskManagementJobListDataSelectors) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// CmiTaskManagementJobRelationData message container
type CmiTaskManagementJobRelationData struct {
	TaskManagementJobRelationData TaskManagementJobRelationData `json:"taskManagementJobRelationData"`
}

// TaskManagementJobRelationData element
type TaskManagementJobRelationData struct {
	JobId                          *TaskManagementJobIdType                          `json:"jobId,omitempty"`
	DirectControlRelated           *TaskManagementDirectControlRelatedType           `json:"directControlRelated,omitempty"`
	HvacRelated                    *TaskManagementHvacRelatedType                    `json:"hvacRelated,omitempty"`
	LoadControlReleated            *TaskManagementLoadControlReleatedType            `json:"loadControlReleated,omitempty"`
	PowerSequencesRelated          *TaskManagementPowerSequencesRelatedType          `json:"powerSequencesRelated,omitempty"`
	SmartEnergyManagementPsRelated *TaskManagementSmartEnergyManagementPsRelatedType `json:"smartEnergyManagementPsRelated,omitempty"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m TaskManagementJobRelationData) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *TaskManagementJobRelationData) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// CmiTaskManagementJobRelationListData message container
type CmiTaskManagementJobRelationListData struct {
	TaskManagementJobRelationListData TaskManagementJobRelationListData `json:"taskManagementJobRelationListData"`
}

// TaskManagementJobRelationListData element
type TaskManagementJobRelationListData struct {
	TaskManagementJobRelationData []TaskManagementJobRelationDataType `json:"taskManagementJobRelationData"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m TaskManagementJobRelationListData) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *TaskManagementJobRelationListData) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// CmiTaskManagementJobRelationListDataSelectors message container
type CmiTaskManagementJobRelationListDataSelectors struct {
	TaskManagementJobRelationListDataSelectors TaskManagementJobRelationListDataSelectors `json:"taskManagementJobRelationListDataSelectors"`
}

// TaskManagementJobRelationListDataSelectors element
type TaskManagementJobRelationListDataSelectors struct {
	JobId *TaskManagementJobIdType `json:"jobId,omitempty"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m TaskManagementJobRelationListDataSelectors) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *TaskManagementJobRelationListDataSelectors) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// CmiTaskManagementJobDescriptionData message container
type CmiTaskManagementJobDescriptionData struct {
	TaskManagementJobDescriptionData TaskManagementJobDescriptionData `json:"taskManagementJobDescriptionData"`
}

// TaskManagementJobDescriptionData element
type TaskManagementJobDescriptionData struct {
	JobId       *TaskManagementJobIdType `json:"jobId,omitempty"`
	JobSource   string                   `json:"jobSource"`
	Label       *LabelType               `json:"label,omitempty"`
	Description *DescriptionType         `json:"description,omitempty"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m TaskManagementJobDescriptionData) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *TaskManagementJobDescriptionData) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// CmiTaskManagementJobDescriptionDataElements message container
type CmiTaskManagementJobDescriptionDataElements struct {
	TaskManagementJobDescriptionDataElements TaskManagementJobDescriptionDataElements `json:"taskManagementJobDescriptionDataElements"`
}

// TaskManagementJobDescriptionDataElements element
type TaskManagementJobDescriptionDataElements struct {
	JobId       *ElementTagType `json:"jobId,omitempty"`
	JobSource   *ElementTagType `json:"jobSource,omitempty"`
	Label       *ElementTagType `json:"label,omitempty"`
	Description *ElementTagType `json:"description,omitempty"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m TaskManagementJobDescriptionDataElements) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *TaskManagementJobDescriptionDataElements) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// CmiTaskManagementJobDescriptionListData message container
type CmiTaskManagementJobDescriptionListData struct {
	TaskManagementJobDescriptionListData TaskManagementJobDescriptionListData `json:"taskManagementJobDescriptionListData"`
}

// TaskManagementJobDescriptionListData element
type TaskManagementJobDescriptionListData struct {
	TaskManagementJobDescriptionData []TaskManagementJobDescriptionDataType `json:"taskManagementJobDescriptionData"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m TaskManagementJobDescriptionListData) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *TaskManagementJobDescriptionListData) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// CmiTaskManagementJobDescriptionListDataSelectors message container
type CmiTaskManagementJobDescriptionListDataSelectors struct {
	TaskManagementJobDescriptionListDataSelectors TaskManagementJobDescriptionListDataSelectors `json:"taskManagementJobDescriptionListDataSelectors"`
}

// TaskManagementJobDescriptionListDataSelectors element
type TaskManagementJobDescriptionListDataSelectors struct {
	JobId     *TaskManagementJobIdType `json:"jobId,omitempty"`
	JobSource string                   `json:"jobSource"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m TaskManagementJobDescriptionListDataSelectors) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *TaskManagementJobDescriptionListDataSelectors) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// CmiTaskManagementOverviewData message container
type CmiTaskManagementOverviewData struct {
	TaskManagementOverviewData TaskManagementOverviewData `json:"taskManagementOverviewData"`
}

// TaskManagementOverviewData element
type TaskManagementOverviewData struct {
	RemoteControllable *bool `json:"remoteControllable,omitempty"`
	JobsActive         *bool `json:"jobsActive,omitempty"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m TaskManagementOverviewData) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *TaskManagementOverviewData) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// CmiTaskManagementOverviewDataElements message container
type CmiTaskManagementOverviewDataElements struct {
	TaskManagementOverviewDataElements TaskManagementOverviewDataElements `json:"taskManagementOverviewDataElements"`
}

// TaskManagementOverviewDataElements element
type TaskManagementOverviewDataElements struct {
	RemoteControllable *ElementTagType `json:"remoteControllable,omitempty"`
	JobsActive         *ElementTagType `json:"jobsActive,omitempty"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m TaskManagementOverviewDataElements) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *TaskManagementOverviewDataElements) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// CmiThresholdData message container
type CmiThresholdData struct {
	ThresholdData ThresholdData `json:"thresholdData"`
}

// ThresholdData element
type ThresholdData struct {
	ThresholdId    *ThresholdIdType  `json:"thresholdId,omitempty"`
	ThresholdValue *ScaledNumberType `json:"thresholdValue,omitempty"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m ThresholdData) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *ThresholdData) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// CmiThresholdListData message container
type CmiThresholdListData struct {
	ThresholdListData ThresholdListData `json:"thresholdListData"`
}

// ThresholdListData element
type ThresholdListData struct {
	ThresholdData []ThresholdDataType `json:"thresholdData"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m ThresholdListData) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *ThresholdListData) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// CmiThresholdListDataSelectors message container
type CmiThresholdListDataSelectors struct {
	ThresholdListDataSelectors ThresholdListDataSelectors `json:"thresholdListDataSelectors"`
}

// ThresholdListDataSelectors element
type ThresholdListDataSelectors struct {
	ThresholdId *ThresholdIdType `json:"thresholdId,omitempty"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m ThresholdListDataSelectors) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *ThresholdListDataSelectors) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// CmiThresholdConstraintsData message container
type CmiThresholdConstraintsData struct {
	ThresholdConstraintsData ThresholdConstraintsData `json:"thresholdConstraintsData"`
}

// ThresholdConstraintsData element
type ThresholdConstraintsData struct {
	ThresholdId       *ThresholdIdType  `json:"thresholdId,omitempty"`
	ThresholdRangeMin *ScaledNumberType `json:"thresholdRangeMin,omitempty"`
	ThresholdRangeMax *ScaledNumberType `json:"thresholdRangeMax,omitempty"`
	ThresholdStepSize *ScaledNumberType `json:"thresholdStepSize,omitempty"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m ThresholdConstraintsData) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *ThresholdConstraintsData) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// CmiThresholdConstraintsListData message container
type CmiThresholdConstraintsListData struct {
	ThresholdConstraintsListData ThresholdConstraintsListData `json:"thresholdConstraintsListData"`
}

// ThresholdConstraintsListData element
type ThresholdConstraintsListData struct {
	ThresholdConstraintsData []ThresholdConstraintsDataType `json:"thresholdConstraintsData"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m ThresholdConstraintsListData) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *ThresholdConstraintsListData) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// CmiThresholdConstraintsListDataSelectors message container
type CmiThresholdConstraintsListDataSelectors struct {
	ThresholdConstraintsListDataSelectors ThresholdConstraintsListDataSelectors `json:"thresholdConstraintsListDataSelectors"`
}

// ThresholdConstraintsListDataSelectors element
type ThresholdConstraintsListDataSelectors struct {
	ThresholdId *ThresholdIdType `json:"thresholdId,omitempty"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m ThresholdConstraintsListDataSelectors) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *ThresholdConstraintsListDataSelectors) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// CmiThresholdDescriptionData message container
type CmiThresholdDescriptionData struct {
	ThresholdDescriptionData ThresholdDescriptionData `json:"thresholdDescriptionData"`
}

// ThresholdDescriptionData element
type ThresholdDescriptionData struct {
	ThresholdId   *ThresholdIdType `json:"thresholdId,omitempty"`
	ThresholdType string           `json:"thresholdType"`
	Unit          string           `json:"unit"`
	ScopeType     string           `json:"scopeType"`
	Label         *LabelType       `json:"label,omitempty"`
	Description   *DescriptionType `json:"description,omitempty"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m ThresholdDescriptionData) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *ThresholdDescriptionData) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// CmiThresholdDescriptionDataElements message container
type CmiThresholdDescriptionDataElements struct {
	ThresholdDescriptionDataElements ThresholdDescriptionDataElements `json:"thresholdDescriptionDataElements"`
}

// ThresholdDescriptionDataElements element
type ThresholdDescriptionDataElements struct {
	ThresholdId   *ElementTagType `json:"thresholdId,omitempty"`
	ThresholdType *ElementTagType `json:"thresholdType,omitempty"`
	Unit          *ElementTagType `json:"unit,omitempty"`
	ScopeType     *ElementTagType `json:"scopeType,omitempty"`
	Label         *ElementTagType `json:"label,omitempty"`
	Description   *ElementTagType `json:"description,omitempty"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m ThresholdDescriptionDataElements) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *ThresholdDescriptionDataElements) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// CmiThresholdDescriptionListData message container
type CmiThresholdDescriptionListData struct {
	ThresholdDescriptionListData ThresholdDescriptionListData `json:"thresholdDescriptionListData"`
}

// ThresholdDescriptionListData element
type ThresholdDescriptionListData struct {
	ThresholdDescriptionData []ThresholdDescriptionDataType `json:"thresholdDescriptionData"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m ThresholdDescriptionListData) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *ThresholdDescriptionListData) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// CmiThresholdDescriptionListDataSelectors message container
type CmiThresholdDescriptionListDataSelectors struct {
	ThresholdDescriptionListDataSelectors ThresholdDescriptionListDataSelectors `json:"thresholdDescriptionListDataSelectors"`
}

// ThresholdDescriptionListDataSelectors element
type ThresholdDescriptionListDataSelectors struct {
	ThresholdId *ThresholdIdType `json:"thresholdId,omitempty"`
	ScopeType   string           `json:"scopeType"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m ThresholdDescriptionListDataSelectors) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *ThresholdDescriptionListDataSelectors) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// CmiTimeInformationData message container
type CmiTimeInformationData struct {
	TimeInformationData TimeInformationData `json:"timeInformationData"`
}

// TimeInformationData element
type TimeInformationData struct {
	Utc          string            `json:"utc"`
	UtcOffset    string            `json:"utcOffset"`
	DayOfWeek    *DayOfWeekType    `json:"dayOfWeek,omitempty"`
	CalendarWeek *CalendarWeekType `json:"calendarWeek,omitempty"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m TimeInformationData) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *TimeInformationData) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// CmiTimeInformationDataElements message container
type CmiTimeInformationDataElements struct {
	TimeInformationDataElements TimeInformationDataElements `json:"timeInformationDataElements"`
}

// TimeInformationDataElements element
type TimeInformationDataElements struct {
	Utc          *ElementTagType `json:"utc,omitempty"`
	UtcOffset    *ElementTagType `json:"utcOffset,omitempty"`
	DayOfWeek    *ElementTagType `json:"dayOfWeek,omitempty"`
	CalendarWeek *ElementTagType `json:"calendarWeek,omitempty"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m TimeInformationDataElements) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *TimeInformationDataElements) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// CmiTimeDistributorData message container
type CmiTimeDistributorData struct {
	TimeDistributorData TimeDistributorData `json:"timeDistributorData"`
}

// TimeDistributorData element
type TimeDistributorData struct {
	IsTimeDistributor   *bool `json:"isTimeDistributor,omitempty"`
	DistributorPriority *uint `json:"distributorPriority,omitempty"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m TimeDistributorData) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *TimeDistributorData) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// CmiTimeDistributorDataElements message container
type CmiTimeDistributorDataElements struct {
	TimeDistributorDataElements TimeDistributorDataElements `json:"timeDistributorDataElements"`
}

// TimeDistributorDataElements element
type TimeDistributorDataElements struct {
	IsTimeDistributor   *ElementTagType `json:"isTimeDistributor,omitempty"`
	DistributorPriority *ElementTagType `json:"distributorPriority,omitempty"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m TimeDistributorDataElements) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *TimeDistributorDataElements) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// CmiTimePrecisionData message container
type CmiTimePrecisionData struct {
	TimePrecisionData TimePrecisionData `json:"timePrecisionData"`
}

// TimePrecisionData element
type TimePrecisionData struct {
	IsSynchronised *bool  `json:"isSynchronised,omitempty"`
	LastSyncAt     string `json:"lastSyncAt"`
	ClockDrift     *int64 `json:"clockDrift,omitempty"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m TimePrecisionData) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *TimePrecisionData) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// CmiTimePrecisionDataElements message container
type CmiTimePrecisionDataElements struct {
	TimePrecisionDataElements TimePrecisionDataElements `json:"timePrecisionDataElements"`
}

// TimePrecisionDataElements element
type TimePrecisionDataElements struct {
	IsSynchronised *ElementTagType `json:"isSynchronised,omitempty"`
	LastSyncAt     *ElementTagType `json:"lastSyncAt,omitempty"`
	ClockDrift     *ElementTagType `json:"clockDrift,omitempty"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m TimePrecisionDataElements) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *TimePrecisionDataElements) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// CmiTimeDistributorEnquiryCall message container
type CmiTimeDistributorEnquiryCall struct {
	TimeDistributorEnquiryCall TimeDistributorEnquiryCall `json:"timeDistributorEnquiryCall"`
}

// TimeDistributorEnquiryCall element
type TimeDistributorEnquiryCall struct {
}

// MarshalJSON is the SHIP serialization marshaller
func (m TimeDistributorEnquiryCall) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *TimeDistributorEnquiryCall) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// CmiTimeDistributorEnquiryCallElements message container
type CmiTimeDistributorEnquiryCallElements struct {
	TimeDistributorEnquiryCallElements TimeDistributorEnquiryCallElements `json:"timeDistributorEnquiryCallElements"`
}

// TimeDistributorEnquiryCallElements element
type TimeDistributorEnquiryCallElements struct {
}

// MarshalJSON is the SHIP serialization marshaller
func (m TimeDistributorEnquiryCallElements) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *TimeDistributorEnquiryCallElements) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// CmiTimeSeriesData message container
type CmiTimeSeriesData struct {
	TimeSeriesData TimeSeriesData `json:"timeSeriesData"`
}

// TimeSeriesData element
type TimeSeriesData struct {
	TimeSeriesId   *TimeSeriesIdType    `json:"timeSeriesId,omitempty"`
	TimePeriod     *TimePeriodType      `json:"timePeriod,omitempty"`
	TimeSeriesSlot []TimeSeriesSlotType `json:"timeSeriesSlot"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m TimeSeriesData) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *TimeSeriesData) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// CmiTimeSeriesListData message container
type CmiTimeSeriesListData struct {
	TimeSeriesListData TimeSeriesListData `json:"timeSeriesListData"`
}

// TimeSeriesListData element
type TimeSeriesListData struct {
	TimeSeriesData []TimeSeriesDataType `json:"timeSeriesData"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m TimeSeriesListData) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *TimeSeriesListData) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// CmiTimeSeriesListDataSelectors message container
type CmiTimeSeriesListDataSelectors struct {
	TimeSeriesListDataSelectors TimeSeriesListDataSelectors `json:"timeSeriesListDataSelectors"`
}

// TimeSeriesListDataSelectors element
type TimeSeriesListDataSelectors struct {
	TimeSeriesId     *TimeSeriesIdType     `json:"timeSeriesId,omitempty"`
	TimeSeriesSlotId *TimeSeriesSlotIdType `json:"timeSeriesSlotId,omitempty"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m TimeSeriesListDataSelectors) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *TimeSeriesListDataSelectors) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// CmiTimeSeriesDescriptionData message container
type CmiTimeSeriesDescriptionData struct {
	TimeSeriesDescriptionData TimeSeriesDescriptionData `json:"timeSeriesDescriptionData"`
}

// TimeSeriesDescriptionData element
type TimeSeriesDescriptionData struct {
	TimeSeriesId        *TimeSeriesIdType  `json:"timeSeriesId,omitempty"`
	TimeSeriesType      string             `json:"timeSeriesType"`
	TimeSeriesWriteable *bool              `json:"timeSeriesWriteable,omitempty"`
	UpdateRequired      *bool              `json:"updateRequired,omitempty"`
	MeasurementId       *MeasurementIdType `json:"measurementId,omitempty"`
	Currency            string             `json:"currency"`
	Unit                string             `json:"unit"`
	Label               *LabelType         `json:"label,omitempty"`
	Description         *DescriptionType   `json:"description,omitempty"`
	ScopeType           string             `json:"scopeType"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m TimeSeriesDescriptionData) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *TimeSeriesDescriptionData) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// CmiTimeSeriesDescriptionDataElements message container
type CmiTimeSeriesDescriptionDataElements struct {
	TimeSeriesDescriptionDataElements TimeSeriesDescriptionDataElements `json:"timeSeriesDescriptionDataElements"`
}

// TimeSeriesDescriptionDataElements element
type TimeSeriesDescriptionDataElements struct {
	TimeSeriesId        *ElementTagType `json:"timeSeriesId,omitempty"`
	TimeSeriesType      *ElementTagType `json:"timeSeriesType,omitempty"`
	TimeSeriesWriteable *ElementTagType `json:"timeSeriesWriteable,omitempty"`
	UpdateRequired      *ElementTagType `json:"updateRequired,omitempty"`
	MeasurementId       *ElementTagType `json:"measurementId,omitempty"`
	Currency            *ElementTagType `json:"currency,omitempty"`
	Unit                *ElementTagType `json:"unit,omitempty"`
	Label               *ElementTagType `json:"label,omitempty"`
	Description         *ElementTagType `json:"description,omitempty"`
	ScopeType           *ElementTagType `json:"scopeType,omitempty"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m TimeSeriesDescriptionDataElements) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *TimeSeriesDescriptionDataElements) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// CmiTimeSeriesDescriptionListData message container
type CmiTimeSeriesDescriptionListData struct {
	TimeSeriesDescriptionListData TimeSeriesDescriptionListData `json:"timeSeriesDescriptionListData"`
}

// TimeSeriesDescriptionListData element
type TimeSeriesDescriptionListData struct {
	TimeSeriesDescriptionData []TimeSeriesDescriptionDataType `json:"timeSeriesDescriptionData"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m TimeSeriesDescriptionListData) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *TimeSeriesDescriptionListData) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// CmiTimeSeriesDescriptionListDataSelectors message container
type CmiTimeSeriesDescriptionListDataSelectors struct {
	TimeSeriesDescriptionListDataSelectors TimeSeriesDescriptionListDataSelectors `json:"timeSeriesDescriptionListDataSelectors"`
}

// TimeSeriesDescriptionListDataSelectors element
type TimeSeriesDescriptionListDataSelectors struct {
	TimeSeriesId   *TimeSeriesIdType  `json:"timeSeriesId,omitempty"`
	TimeSeriesType string             `json:"timeSeriesType"`
	MeasurementId  *MeasurementIdType `json:"measurementId,omitempty"`
	ScopeType      string             `json:"scopeType"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m TimeSeriesDescriptionListDataSelectors) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *TimeSeriesDescriptionListDataSelectors) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// CmiTimeSeriesConstraintsData message container
type CmiTimeSeriesConstraintsData struct {
	TimeSeriesConstraintsData TimeSeriesConstraintsData `json:"timeSeriesConstraintsData"`
}

// TimeSeriesConstraintsData element
type TimeSeriesConstraintsData struct {
	TimeSeriesId                *TimeSeriesIdType        `json:"timeSeriesId,omitempty"`
	SlotCountMin                *TimeSeriesSlotCountType `json:"slotCountMin,omitempty"`
	SlotCountMax                *TimeSeriesSlotCountType `json:"slotCountMax,omitempty"`
	SlotDurationMin             string                   `json:"slotDurationMin"`
	SlotDurationMax             string                   `json:"slotDurationMax"`
	SlotDurationStepSize        string                   `json:"slotDurationStepSize"`
	EarliestTimeSeriesStartTime string                   `json:"earliestTimeSeriesStartTime"`
	LatestTimeSeriesEndTime     string                   `json:"latestTimeSeriesEndTime"`
	SlotValueMin                *ScaledNumberType        `json:"slotValueMin,omitempty"`
	SlotValueMax                *ScaledNumberType        `json:"slotValueMax,omitempty"`
	SlotValueStepSize           *ScaledNumberType        `json:"slotValueStepSize,omitempty"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m TimeSeriesConstraintsData) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *TimeSeriesConstraintsData) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// CmiTimeSeriesConstraintsListData message container
type CmiTimeSeriesConstraintsListData struct {
	TimeSeriesConstraintsListData TimeSeriesConstraintsListData `json:"timeSeriesConstraintsListData"`
}

// TimeSeriesConstraintsListData element
type TimeSeriesConstraintsListData struct {
	TimeSeriesConstraintsData []TimeSeriesConstraintsDataType `json:"timeSeriesConstraintsData"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m TimeSeriesConstraintsListData) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *TimeSeriesConstraintsListData) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// CmiTimeSeriesConstraintsListDataSelectors message container
type CmiTimeSeriesConstraintsListDataSelectors struct {
	TimeSeriesConstraintsListDataSelectors TimeSeriesConstraintsListDataSelectors `json:"timeSeriesConstraintsListDataSelectors"`
}

// TimeSeriesConstraintsListDataSelectors element
type TimeSeriesConstraintsListDataSelectors struct {
	TimeSeriesId *TimeSeriesIdType `json:"timeSeriesId,omitempty"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m TimeSeriesConstraintsListDataSelectors) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *TimeSeriesConstraintsListDataSelectors) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// CmiTimeTableData message container
type CmiTimeTableData struct {
	TimeTableData TimeTableData `json:"timeTableData"`
}

// TimeTableData element
type TimeTableData struct {
	TimeTableId           *TimeTableIdType             `json:"timeTableId,omitempty"`
	TimeSlotId            *TimeSlotIdType              `json:"timeSlotId,omitempty"`
	RecurrenceInformation *RecurrenceInformationType   `json:"recurrenceInformation,omitempty"`
	StartTime             *AbsoluteOrRecurringTimeType `json:"startTime,omitempty"`
	EndTime               *AbsoluteOrRecurringTimeType `json:"endTime,omitempty"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m TimeTableData) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *TimeTableData) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// CmiTimeTableListData message container
type CmiTimeTableListData struct {
	TimeTableListData TimeTableListData `json:"timeTableListData"`
}

// TimeTableListData element
type TimeTableListData struct {
	TimeTableData []TimeTableDataType `json:"timeTableData"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m TimeTableListData) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *TimeTableListData) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// CmiTimeTableListDataSelectors message container
type CmiTimeTableListDataSelectors struct {
	TimeTableListDataSelectors TimeTableListDataSelectors `json:"timeTableListDataSelectors"`
}

// TimeTableListDataSelectors element
type TimeTableListDataSelectors struct {
	TimeTableId *TimeTableIdType `json:"timeTableId,omitempty"`
	TimeSlotId  *TimeSlotIdType  `json:"timeSlotId,omitempty"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m TimeTableListDataSelectors) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *TimeTableListDataSelectors) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// CmiTimeTableConstraintsData message container
type CmiTimeTableConstraintsData struct {
	TimeTableConstraintsData TimeTableConstraintsData `json:"timeTableConstraintsData"`
}

// TimeTableConstraintsData element
type TimeTableConstraintsData struct {
	TimeTableId          *uint              `json:"timeTableId,omitempty"`
	SlotCountMin         *TimeSlotCountType `json:"slotCountMin,omitempty"`
	SlotCountMax         *TimeSlotCountType `json:"slotCountMax,omitempty"`
	SlotDurationMin      string             `json:"slotDurationMin"`
	SlotDurationMax      string             `json:"slotDurationMax"`
	SlotDurationStepSize string             `json:"slotDurationStepSize"`
	SlotShiftStepSize    string             `json:"slotShiftStepSize"`
	FirstSlotBeginsAt    string             `json:"firstSlotBeginsAt"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m TimeTableConstraintsData) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *TimeTableConstraintsData) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// CmiTimeTableConstraintsDataElements message container
type CmiTimeTableConstraintsDataElements struct {
	TimeTableConstraintsDataElements TimeTableConstraintsDataElements `json:"timeTableConstraintsDataElements"`
}

// TimeTableConstraintsDataElements element
type TimeTableConstraintsDataElements struct {
	TimeTableId          *ElementTagType `json:"timeTableId,omitempty"`
	SlotCountMin         *ElementTagType `json:"slotCountMin,omitempty"`
	SlotCountMax         *ElementTagType `json:"slotCountMax,omitempty"`
	SlotDurationMin      *ElementTagType `json:"slotDurationMin,omitempty"`
	SlotDurationMax      *ElementTagType `json:"slotDurationMax,omitempty"`
	SlotDurationStepSize *ElementTagType `json:"slotDurationStepSize,omitempty"`
	SlotShiftStepSize    *ElementTagType `json:"slotShiftStepSize,omitempty"`
	FirstSlotBeginsAt    *ElementTagType `json:"firstSlotBeginsAt,omitempty"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m TimeTableConstraintsDataElements) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *TimeTableConstraintsDataElements) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// CmiTimeTableConstraintsListData message container
type CmiTimeTableConstraintsListData struct {
	TimeTableConstraintsListData TimeTableConstraintsListData `json:"timeTableConstraintsListData"`
}

// TimeTableConstraintsListData element
type TimeTableConstraintsListData struct {
	TimeTableConstraintsData []TimeTableConstraintsDataType `json:"timeTableConstraintsData"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m TimeTableConstraintsListData) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *TimeTableConstraintsListData) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// CmiTimeTableConstraintsListDataSelectors message container
type CmiTimeTableConstraintsListDataSelectors struct {
	TimeTableConstraintsListDataSelectors TimeTableConstraintsListDataSelectors `json:"timeTableConstraintsListDataSelectors"`
}

// TimeTableConstraintsListDataSelectors element
type TimeTableConstraintsListDataSelectors struct {
	TimeTableId *TimeTableIdType `json:"timeTableId,omitempty"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m TimeTableConstraintsListDataSelectors) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *TimeTableConstraintsListDataSelectors) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// CmiTimeTableDescriptionData message container
type CmiTimeTableDescriptionData struct {
	TimeTableDescriptionData TimeTableDescriptionData `json:"timeTableDescriptionData"`
}

// TimeTableDescriptionData element
type TimeTableDescriptionData struct {
	TimeTableId             *uint            `json:"timeTableId,omitempty"`
	TimeSlotCountChangeable *bool            `json:"timeSlotCountChangeable,omitempty"`
	TimeSlotTimesChangeable *bool            `json:"timeSlotTimesChangeable,omitempty"`
	TimeSlotTimeMode        string           `json:"timeSlotTimeMode"`
	Label                   *LabelType       `json:"label,omitempty"`
	Description             *DescriptionType `json:"description,omitempty"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m TimeTableDescriptionData) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *TimeTableDescriptionData) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// CmiTimeTableDescriptionDataElements message container
type CmiTimeTableDescriptionDataElements struct {
	TimeTableDescriptionDataElements TimeTableDescriptionDataElements `json:"timeTableDescriptionDataElements"`
}

// TimeTableDescriptionDataElements element
type TimeTableDescriptionDataElements struct {
	TimeTableId             *ElementTagType `json:"timeTableId,omitempty"`
	TimeSlotCountChangeable *ElementTagType `json:"timeSlotCountChangeable,omitempty"`
	TimeSlotTimesChangeable *ElementTagType `json:"timeSlotTimesChangeable,omitempty"`
	TimeSlotTimeMode        *ElementTagType `json:"timeSlotTimeMode,omitempty"`
	Label                   *ElementTagType `json:"label,omitempty"`
	Description             *ElementTagType `json:"description,omitempty"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m TimeTableDescriptionDataElements) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *TimeTableDescriptionDataElements) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// CmiTimeTableDescriptionListData message container
type CmiTimeTableDescriptionListData struct {
	TimeTableDescriptionListData TimeTableDescriptionListData `json:"timeTableDescriptionListData"`
}

// TimeTableDescriptionListData element
type TimeTableDescriptionListData struct {
	TimeTableDescriptionData []TimeTableDescriptionDataType `json:"timeTableDescriptionData"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m TimeTableDescriptionListData) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *TimeTableDescriptionListData) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// CmiTimeTableDescriptionListDataSelectors message container
type CmiTimeTableDescriptionListDataSelectors struct {
	TimeTableDescriptionListDataSelectors TimeTableDescriptionListDataSelectors `json:"timeTableDescriptionListDataSelectors"`
}

// TimeTableDescriptionListDataSelectors element
type TimeTableDescriptionListDataSelectors struct {
	TimeTableId *TimeTableIdType `json:"timeTableId,omitempty"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m TimeTableDescriptionListDataSelectors) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *TimeTableDescriptionListDataSelectors) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// CmiTotal message container
type CmiTotal struct {
	Total Total `json:"total"`
}

// Total element
type Total struct {
}

// MarshalJSON is the SHIP serialization marshaller
func (m Total) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *Total) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// CmiPosition message container
type CmiPosition struct {
	Position Position `json:"position"`
}

// Position element
type Position struct {
}

// MarshalJSON is the SHIP serialization marshaller
func (m Position) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *Position) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// CmiTimeInterval message container
type CmiTimeInterval struct {
	TimeInterval TimeInterval `json:"timeInterval"`
}

// TimeInterval element
type TimeInterval struct {
}

// MarshalJSON is the SHIP serialization marshaller
func (m TimeInterval) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *TimeInterval) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// CmiTier message container
type CmiTier struct {
	Tier Tier `json:"tier"`
}

// Tier element
type Tier struct {
}

// MarshalJSON is the SHIP serialization marshaller
func (m Tier) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *Tier) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// CmiBoundary message container
type CmiBoundary struct {
	Boundary Boundary `json:"boundary"`
}

// Boundary element
type Boundary struct {
}

// MarshalJSON is the SHIP serialization marshaller
func (m Boundary) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *Boundary) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// CmiIncentive message container
type CmiIncentive struct {
	Incentive Incentive `json:"incentive"`
}

// Incentive element
type Incentive struct {
}

// MarshalJSON is the SHIP serialization marshaller
func (m Incentive) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *Incentive) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// CmiTariffConstraints message container
type CmiTariffConstraints struct {
	TariffConstraints TariffConstraints `json:"tariffConstraints"`
}

// TariffConstraints element
type TariffConstraints struct {
}

// MarshalJSON is the SHIP serialization marshaller
func (m TariffConstraints) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *TariffConstraints) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// CmiIncentiveSlotConstraints message container
type CmiIncentiveSlotConstraints struct {
	IncentiveSlotConstraints IncentiveSlotConstraints `json:"incentiveSlotConstraints"`
}

// IncentiveSlotConstraints element
type IncentiveSlotConstraints struct {
}

// MarshalJSON is the SHIP serialization marshaller
func (m IncentiveSlotConstraints) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *IncentiveSlotConstraints) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// CmiTariff message container
type CmiTariff struct {
	Tariff Tariff `json:"tariff"`
}

// Tariff element
type Tariff struct {
}

// MarshalJSON is the SHIP serialization marshaller
func (m Tariff) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *Tariff) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// CmiSpecificationVersion message container
type CmiSpecificationVersion struct {
	SpecificationVersion SpecificationVersion `json:"specificationVersion"`
}

// SpecificationVersion element
type SpecificationVersion struct {
}

// MarshalJSON is the SHIP serialization marshaller
func (m SpecificationVersion) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *SpecificationVersion) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// CmiDeviceInformation message container
type CmiDeviceInformation struct {
	DeviceInformation DeviceInformation `json:"deviceInformation"`
}

// DeviceInformation element
type DeviceInformation struct {
}

// MarshalJSON is the SHIP serialization marshaller
func (m DeviceInformation) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *DeviceInformation) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// CmiEntityInformation message container
type CmiEntityInformation struct {
	EntityInformation EntityInformation `json:"entityInformation"`
}

// EntityInformation element
type EntityInformation struct {
}

// MarshalJSON is the SHIP serialization marshaller
func (m EntityInformation) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *EntityInformation) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// CmiFeatureInformation message container
type CmiFeatureInformation struct {
	FeatureInformation FeatureInformation `json:"featureInformation"`
}

// FeatureInformation element
type FeatureInformation struct {
}

// MarshalJSON is the SHIP serialization marshaller
func (m FeatureInformation) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *FeatureInformation) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// CmiAlternativesRelation message container
type CmiAlternativesRelation struct {
	AlternativesRelation AlternativesRelation `json:"alternativesRelation"`
}

// AlternativesRelation element
type AlternativesRelation struct {
}

// MarshalJSON is the SHIP serialization marshaller
func (m AlternativesRelation) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *AlternativesRelation) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// CmiPowerSequenceDescription message container
type CmiPowerSequenceDescription struct {
	PowerSequenceDescription PowerSequenceDescription `json:"powerSequenceDescription"`
}

// PowerSequenceDescription element
type PowerSequenceDescription struct {
}

// MarshalJSON is the SHIP serialization marshaller
func (m PowerSequenceDescription) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *PowerSequenceDescription) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// CmiPowerTimeSlotSchedule message container
type CmiPowerTimeSlotSchedule struct {
	PowerTimeSlotSchedule PowerTimeSlotSchedule `json:"powerTimeSlotSchedule"`
}

// PowerTimeSlotSchedule element
type PowerTimeSlotSchedule struct {
}

// MarshalJSON is the SHIP serialization marshaller
func (m PowerTimeSlotSchedule) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *PowerTimeSlotSchedule) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// CmiPowerTimeSlotValue message container
type CmiPowerTimeSlotValue struct {
	PowerTimeSlotValue PowerTimeSlotValue `json:"powerTimeSlotValue"`
}

// PowerTimeSlotValue element
type PowerTimeSlotValue struct {
}

// MarshalJSON is the SHIP serialization marshaller
func (m PowerTimeSlotValue) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *PowerTimeSlotValue) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// xs:complexType declarations

// ActuatorLevelDataType complex type
type ActuatorLevelDataType struct {
	Function string            `json:"function"`
	Value    *ScaledNumberType `json:"value"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m ActuatorLevelDataType) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *ActuatorLevelDataType) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// ActuatorLevelDescriptionDataType complex type
type ActuatorLevelDescriptionDataType struct {
	Label            *LabelType       `json:"label"`
	Description      *DescriptionType `json:"description"`
	LevelDefaultUnit string           `json:"levelDefaultUnit"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m ActuatorLevelDescriptionDataType) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *ActuatorLevelDescriptionDataType) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// ActuatorSwitchDataType complex type
type ActuatorSwitchDataType struct {
	Function string `json:"function"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m ActuatorSwitchDataType) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *ActuatorSwitchDataType) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// ActuatorSwitchDescriptionDataType complex type
type ActuatorSwitchDescriptionDataType struct {
	Label       *LabelType       `json:"label"`
	Description *DescriptionType `json:"description"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m ActuatorSwitchDescriptionDataType) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *ActuatorSwitchDescriptionDataType) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// AlarmDataType complex type
type AlarmDataType struct {
	AlarmId          *AlarmIdType      `json:"alarmId"`
	ThresholdId      *ThresholdIdType  `json:"thresholdId"`
	Timestamp        string            `json:"timestamp"`
	AlarmType        string            `json:"alarmType"`
	MeasuredValue    *ScaledNumberType `json:"measuredValue"`
	EvaluationPeriod *TimePeriodType   `json:"evaluationPeriod"`
	ScopeType        string            `json:"scopeType"`
	Label            *LabelType        `json:"label"`
	Description      *DescriptionType  `json:"description"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m AlarmDataType) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *AlarmDataType) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// AlarmListDataType complex type
type AlarmListDataType struct {
	AlarmData []AlarmDataType `json:"alarmData"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m AlarmListDataType) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *AlarmListDataType) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// AlarmListDataSelectorsType complex type
type AlarmListDataSelectorsType struct {
	AlarmId   *AlarmIdType `json:"alarmId"`
	ScopeType string       `json:"scopeType"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m AlarmListDataSelectorsType) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *AlarmListDataSelectorsType) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// BillValueType complex type
type BillValueType struct {
	ValueId         *BillValueIdType  `json:"valueId"`
	Unit            string            `json:"unit"`
	Value           *ScaledNumberType `json:"value"`
	ValuePercentage *ScaledNumberType `json:"valuePercentage"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m BillValueType) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *BillValueType) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// BillCostType complex type
type BillCostType struct {
	CostId         *BillCostIdType   `json:"costId"`
	CostType       string            `json:"costType"`
	ValueId        *BillValueIdType  `json:"valueId"`
	Unit           string            `json:"unit"`
	Currency       string            `json:"currency"`
	Cost           *ScaledNumberType `json:"cost"`
	CostPercentage *ScaledNumberType `json:"costPercentage"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m BillCostType) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *BillCostType) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// BillPositionType complex type
type BillPositionType struct {
	PositionId   *BillPositionIdType `json:"positionId"`
	PositionType string              `json:"positionType"`
	TimePeriod   *TimePeriodType     `json:"timePeriod"`
	Value        []BillValueType     `json:"value"`
	Cost         []BillCostType      `json:"cost"`
	Label        *LabelType          `json:"label"`
	Description  *DescriptionType    `json:"description"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m BillPositionType) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *BillPositionType) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// BillDataType complex type
type BillDataType struct {
	BillId    *BillIdType `json:"billId"`
	BillType  string      `json:"billType"`
	ScopeType string      `json:"scopeType"`
	Total     *Total      `json:"total"`
	Position  []Position  `json:"position"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m BillDataType) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *BillDataType) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// BillListDataType complex type
type BillListDataType struct {
	BillData []BillDataType `json:"billData"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m BillListDataType) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *BillListDataType) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// BillListDataSelectorsType complex type
type BillListDataSelectorsType struct {
	BillId    *BillIdType `json:"billId"`
	ScopeType string      `json:"scopeType"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m BillListDataSelectorsType) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *BillListDataSelectorsType) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// BillConstraintsDataType complex type
type BillConstraintsDataType struct {
	BillId           *BillIdType            `json:"billId"`
	PositionCountMin *BillPositionCountType `json:"positionCountMin"`
	PositionCountMax *BillPositionCountType `json:"positionCountMax"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m BillConstraintsDataType) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *BillConstraintsDataType) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// BillConstraintsListDataType complex type
type BillConstraintsListDataType struct {
	BillConstraintsData []BillConstraintsDataType `json:"billConstraintsData"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m BillConstraintsListDataType) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *BillConstraintsListDataType) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// BillConstraintsListDataSelectorsType complex type
type BillConstraintsListDataSelectorsType struct {
	BillId *BillIdType `json:"billId"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m BillConstraintsListDataSelectorsType) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *BillConstraintsListDataSelectorsType) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// BillDescriptionDataType complex type
type BillDescriptionDataType struct {
	BillId            *BillIdType `json:"billId"`
	BillWriteable     *bool       `json:"billWriteable"`
	UpdateRequired    *bool       `json:"updateRequired"`
	SupportedBillType []string    `json:"supportedBillType"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m BillDescriptionDataType) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *BillDescriptionDataType) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// BillDescriptionListDataType complex type
type BillDescriptionListDataType struct {
	BillDescriptionData []BillDescriptionDataType `json:"billDescriptionData"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m BillDescriptionListDataType) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *BillDescriptionListDataType) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// BillDescriptionListDataSelectorsType complex type
type BillDescriptionListDataSelectorsType struct {
	BillId *BillIdType `json:"billId"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m BillDescriptionListDataSelectorsType) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *BillDescriptionListDataSelectorsType) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// DataTunnelingHeaderType complex type
type DataTunnelingHeaderType struct {
	PurposeId  *PurposeIdType `json:"purposeId"`
	ChannelId  *ChannelIdType `json:"channelId"`
	SequenceId *uint          `json:"sequenceId"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m DataTunnelingHeaderType) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *DataTunnelingHeaderType) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// DataTunnelingCallType complex type
type DataTunnelingCallType struct {
	Header  *DataTunnelingHeaderType `json:"header"`
	Payload *byte                    `json:"payload"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m DataTunnelingCallType) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *DataTunnelingCallType) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// DirectControlActivityDataType complex type
type DirectControlActivityDataType struct {
	Timestamp                 string               `json:"timestamp"`
	ActivityState             string               `json:"activityState"`
	IsActivityStateChangeable *bool                `json:"isActivityStateChangeable"`
	EnergyMode                string               `json:"energyMode"`
	IsEnergyModeChangeable    *bool                `json:"isEnergyModeChangeable"`
	Power                     *ScaledNumberType    `json:"power"`
	IsPowerChangeable         *bool                `json:"isPowerChangeable"`
	Energy                    *ScaledNumberType    `json:"energy"`
	IsEnergyChangeable        *bool                `json:"isEnergyChangeable"`
	SequenceId                *PowerSequenceIdType `json:"sequenceId"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m DirectControlActivityDataType) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *DirectControlActivityDataType) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// DirectControlActivityListDataType complex type
type DirectControlActivityListDataType struct {
	DirectControlActivityData []DirectControlActivityDataType `json:"directControlActivityData"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m DirectControlActivityListDataType) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *DirectControlActivityListDataType) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// DirectControlActivityListDataSelectorsType complex type
type DirectControlActivityListDataSelectorsType struct {
	TimestampInterval *TimestampIntervalType `json:"timestampInterval"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m DirectControlActivityListDataSelectorsType) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *DirectControlActivityListDataSelectorsType) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// DirectControlDescriptionDataType complex type
type DirectControlDescriptionDataType struct {
	PositiveEnergyDirection string `json:"positiveEnergyDirection"`
	PowerUnit               string `json:"powerUnit"`
	EnergyUnit              string `json:"energyUnit"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m DirectControlDescriptionDataType) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *DirectControlDescriptionDataType) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// HvacSystemFunctionDataType complex type
type HvacSystemFunctionDataType struct {
	SystemFunctionId            *HvacSystemFunctionIdType `json:"systemFunctionId"`
	CurrentOperationModeId      *HvacOperationModeIdType  `json:"currentOperationModeId"`
	IsOperationModeIdChangeable *bool                     `json:"isOperationModeIdChangeable"`
	CurrentSetpointId           *SetpointIdType           `json:"currentSetpointId"`
	IsSetpointIdChangeable      *bool                     `json:"isSetpointIdChangeable"`
	IsOverrunActive             *bool                     `json:"isOverrunActive"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m HvacSystemFunctionDataType) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *HvacSystemFunctionDataType) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// HvacSystemFunctionListDataType complex type
type HvacSystemFunctionListDataType struct {
	HvacSystemFunctionData []HvacSystemFunctionDataType `json:"hvacSystemFunctionData"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m HvacSystemFunctionListDataType) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *HvacSystemFunctionListDataType) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// HvacSystemFunctionListDataSelectorsType complex type
type HvacSystemFunctionListDataSelectorsType struct {
	SystemFunctionId *HvacSystemFunctionIdType `json:"systemFunctionId"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m HvacSystemFunctionListDataSelectorsType) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *HvacSystemFunctionListDataSelectorsType) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// HvacSystemFunctionOperationModeRelationDataType complex type
type HvacSystemFunctionOperationModeRelationDataType struct {
	SystemFunctionId *HvacSystemFunctionIdType `json:"systemFunctionId"`
	OperationModeId  []HvacOperationModeIdType `json:"operationModeId"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m HvacSystemFunctionOperationModeRelationDataType) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *HvacSystemFunctionOperationModeRelationDataType) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// HvacSystemFunctionOperationModeRelationListDataType complex type
type HvacSystemFunctionOperationModeRelationListDataType struct {
	HvacSystemFunctionOperationModeRelationData []HvacSystemFunctionOperationModeRelationDataType `json:"hvacSystemFunctionOperationModeRelationData"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m HvacSystemFunctionOperationModeRelationListDataType) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *HvacSystemFunctionOperationModeRelationListDataType) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// HvacSystemFunctionOperationModeRelationListDataSelectorsType complex type
type HvacSystemFunctionOperationModeRelationListDataSelectorsType struct {
	SystemFunctionId *HvacSystemFunctionIdType `json:"systemFunctionId"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m HvacSystemFunctionOperationModeRelationListDataSelectorsType) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *HvacSystemFunctionOperationModeRelationListDataSelectorsType) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// HvacSystemFunctionSetpointRelationDataType complex type
type HvacSystemFunctionSetpointRelationDataType struct {
	SystemFunctionId *HvacSystemFunctionIdType `json:"systemFunctionId"`
	OperationModeId  *HvacOperationModeIdType  `json:"operationModeId"`
	SetpointId       []SetpointIdType          `json:"setpointId"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m HvacSystemFunctionSetpointRelationDataType) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *HvacSystemFunctionSetpointRelationDataType) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// HvacSystemFunctionSetpointRelationListDataType complex type
type HvacSystemFunctionSetpointRelationListDataType struct {
	HvacSystemFunctionSetpointRelationData []HvacSystemFunctionSetpointRelationDataType `json:"hvacSystemFunctionSetpointRelationData"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m HvacSystemFunctionSetpointRelationListDataType) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *HvacSystemFunctionSetpointRelationListDataType) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// HvacSystemFunctionSetpointRelationListDataSelectorsType complex type
type HvacSystemFunctionSetpointRelationListDataSelectorsType struct {
	SystemFunctionId *HvacSystemFunctionIdType `json:"systemFunctionId"`
	OperationModeId  *HvacOperationModeIdType  `json:"operationModeId"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m HvacSystemFunctionSetpointRelationListDataSelectorsType) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *HvacSystemFunctionSetpointRelationListDataSelectorsType) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// HvacSystemFunctionPowerSequenceRelationDataType complex type
type HvacSystemFunctionPowerSequenceRelationDataType struct {
	SystemFunctionId *HvacSystemFunctionIdType `json:"systemFunctionId"`
	SequenceId       []PowerSequenceIdType     `json:"sequenceId"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m HvacSystemFunctionPowerSequenceRelationDataType) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *HvacSystemFunctionPowerSequenceRelationDataType) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// HvacSystemFunctionPowerSequenceRelationListDataType complex type
type HvacSystemFunctionPowerSequenceRelationListDataType struct {
	HvacSystemFunctionPowerSequenceRelationData []HvacSystemFunctionPowerSequenceRelationDataType `json:"hvacSystemFunctionPowerSequenceRelationData"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m HvacSystemFunctionPowerSequenceRelationListDataType) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *HvacSystemFunctionPowerSequenceRelationListDataType) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// HvacSystemFunctionPowerSequenceRelationListDataSelectorsType complex type
type HvacSystemFunctionPowerSequenceRelationListDataSelectorsType struct {
	SystemFunctionId *HvacSystemFunctionIdType `json:"systemFunctionId"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m HvacSystemFunctionPowerSequenceRelationListDataSelectorsType) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *HvacSystemFunctionPowerSequenceRelationListDataSelectorsType) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// HvacSystemFunctionDescriptionDataType complex type
type HvacSystemFunctionDescriptionDataType struct {
	SystemFunctionId   *HvacSystemFunctionIdType `json:"systemFunctionId"`
	SystemFunctionType string                    `json:"systemFunctionType"`
	Label              *LabelType                `json:"label"`
	Description        *DescriptionType          `json:"description"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m HvacSystemFunctionDescriptionDataType) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *HvacSystemFunctionDescriptionDataType) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// HvacSystemFunctionDescriptionListDataType complex type
type HvacSystemFunctionDescriptionListDataType struct {
	HvacSystemFunctionDescriptionData []HvacSystemFunctionDescriptionDataType `json:"hvacSystemFunctionDescriptionData"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m HvacSystemFunctionDescriptionListDataType) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *HvacSystemFunctionDescriptionListDataType) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// HvacSystemFunctionDescriptionListDataSelectorsType complex type
type HvacSystemFunctionDescriptionListDataSelectorsType struct {
	SystemFunctionId *HvacSystemFunctionIdType `json:"systemFunctionId"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m HvacSystemFunctionDescriptionListDataSelectorsType) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *HvacSystemFunctionDescriptionListDataSelectorsType) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// HvacOperationModeDescriptionDataType complex type
type HvacOperationModeDescriptionDataType struct {
	OperationModeId   *HvacOperationModeIdType `json:"operationModeId"`
	OperationModeType string                   `json:"operationModeType"`
	Label             *LabelType               `json:"label"`
	Description       *DescriptionType         `json:"description"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m HvacOperationModeDescriptionDataType) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *HvacOperationModeDescriptionDataType) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// HvacOperationModeDescriptionListDataType complex type
type HvacOperationModeDescriptionListDataType struct {
	HvacOperationModeDescriptionData []HvacOperationModeDescriptionDataType `json:"hvacOperationModeDescriptionData"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m HvacOperationModeDescriptionListDataType) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *HvacOperationModeDescriptionListDataType) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// HvacOperationModeDescriptionListDataSelectorsType complex type
type HvacOperationModeDescriptionListDataSelectorsType struct {
	OperationModeId *HvacOperationModeIdType `json:"operationModeId"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m HvacOperationModeDescriptionListDataSelectorsType) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *HvacOperationModeDescriptionListDataSelectorsType) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// HvacOverrunDataType complex type
type HvacOverrunDataType struct {
	OverrunId                 *HvacOverrunIdType `json:"overrunId"`
	OverrunStatus             string             `json:"overrunStatus"`
	TimeTableId               *TimeTableIdType   `json:"timeTableId"`
	IsOverrunStatusChangeable *bool              `json:"isOverrunStatusChangeable"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m HvacOverrunDataType) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *HvacOverrunDataType) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// HvacOverrunListDataType complex type
type HvacOverrunListDataType struct {
	HvacOverrunData []HvacOverrunDataType `json:"hvacOverrunData"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m HvacOverrunListDataType) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *HvacOverrunListDataType) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// HvacOverrunListDataSelectorsType complex type
type HvacOverrunListDataSelectorsType struct {
	OverrunId *HvacOverrunIdType `json:"overrunId"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m HvacOverrunListDataSelectorsType) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *HvacOverrunListDataSelectorsType) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// HvacOverrunDescriptionDataType complex type
type HvacOverrunDescriptionDataType struct {
	OverrunId                *HvacOverrunIdType         `json:"overrunId"`
	OverrunType              string                     `json:"overrunType"`
	AffectedSystemFunctionId []HvacSystemFunctionIdType `json:"affectedSystemFunctionId"`
	Label                    *LabelType                 `json:"label"`
	Description              *DescriptionType           `json:"description"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m HvacOverrunDescriptionDataType) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *HvacOverrunDescriptionDataType) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// HvacOverrunDescriptionListDataType complex type
type HvacOverrunDescriptionListDataType struct {
	HvacOverrunDescriptionData []HvacOverrunDescriptionDataType `json:"hvacOverrunDescriptionData"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m HvacOverrunDescriptionListDataType) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *HvacOverrunDescriptionListDataType) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// HvacOverrunDescriptionListDataSelectorsType complex type
type HvacOverrunDescriptionListDataSelectorsType struct {
	OverrunId *HvacOverrunIdType `json:"overrunId"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m HvacOverrunDescriptionListDataSelectorsType) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *HvacOverrunDescriptionListDataSelectorsType) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// MessagingDataType complex type
type MessagingDataType struct {
	Timestamp       string                 `json:"timestamp"`
	MessagingNumber *MessagingNumberType   `json:"messagingNumber"`
	Type            string                 `json:"type"`
	Text            *MessagingDataTextType `json:"text"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m MessagingDataType) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *MessagingDataType) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// MessagingListDataType complex type
type MessagingListDataType struct {
	MessagingData []MessagingDataType `json:"messagingData"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m MessagingListDataType) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *MessagingListDataType) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// MessagingListDataSelectorsType complex type
type MessagingListDataSelectorsType struct {
	TimestampInterval *TimestampIntervalType `json:"timestampInterval"`
	MessagingNumber   *MessagingNumberType   `json:"messagingNumber"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m MessagingListDataSelectorsType) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *MessagingListDataSelectorsType) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// OperatingConstraintsInterruptDataType complex type
type OperatingConstraintsInterruptDataType struct {
	SequenceId                  *PowerSequenceIdType `json:"sequenceId"`
	IsPausable                  *bool                `json:"isPausable"`
	IsStoppable                 *bool                `json:"isStoppable"`
	NotInterruptibleAtHighPower *bool                `json:"notInterruptibleAtHighPower"`
	MaxCyclesPerDay             *uint                `json:"maxCyclesPerDay"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m OperatingConstraintsInterruptDataType) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *OperatingConstraintsInterruptDataType) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// OperatingConstraintsInterruptListDataType complex type
type OperatingConstraintsInterruptListDataType struct {
	OperatingConstraintsInterruptData []OperatingConstraintsInterruptDataType `json:"operatingConstraintsInterruptData"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m OperatingConstraintsInterruptListDataType) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *OperatingConstraintsInterruptListDataType) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// OperatingConstraintsInterruptListDataSelectorsType complex type
type OperatingConstraintsInterruptListDataSelectorsType struct {
	SequenceId *PowerSequenceIdType `json:"sequenceId"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m OperatingConstraintsInterruptListDataSelectorsType) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *OperatingConstraintsInterruptListDataSelectorsType) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// OperatingConstraintsDurationDataType complex type
type OperatingConstraintsDurationDataType struct {
	SequenceId           *PowerSequenceIdType `json:"sequenceId"`
	ActiveDurationMin    string               `json:"activeDurationMin"`
	ActiveDurationMax    string               `json:"activeDurationMax"`
	PauseDurationMin     string               `json:"pauseDurationMin"`
	PauseDurationMax     string               `json:"pauseDurationMax"`
	ActiveDurationSumMin string               `json:"activeDurationSumMin"`
	ActiveDurationSumMax string               `json:"activeDurationSumMax"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m OperatingConstraintsDurationDataType) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *OperatingConstraintsDurationDataType) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// OperatingConstraintsDurationListDataType complex type
type OperatingConstraintsDurationListDataType struct {
	OperatingConstraintsDurationData []OperatingConstraintsDurationDataType `json:"operatingConstraintsDurationData"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m OperatingConstraintsDurationListDataType) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *OperatingConstraintsDurationListDataType) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// OperatingConstraintsDurationListDataSelectorsType complex type
type OperatingConstraintsDurationListDataSelectorsType struct {
	SequenceId *PowerSequenceIdType `json:"sequenceId"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m OperatingConstraintsDurationListDataSelectorsType) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *OperatingConstraintsDurationListDataSelectorsType) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// OperatingConstraintsPowerDescriptionDataType complex type
type OperatingConstraintsPowerDescriptionDataType struct {
	SequenceId              *PowerSequenceIdType `json:"sequenceId"`
	PositiveEnergyDirection string               `json:"positiveEnergyDirection"`
	PowerUnit               string               `json:"powerUnit"`
	EnergyUnit              string               `json:"energyUnit"`
	Description             *DescriptionType     `json:"description"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m OperatingConstraintsPowerDescriptionDataType) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *OperatingConstraintsPowerDescriptionDataType) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// OperatingConstraintsPowerDescriptionListDataType complex type
type OperatingConstraintsPowerDescriptionListDataType struct {
	OperatingConstraintsPowerDescriptionData []OperatingConstraintsPowerDescriptionDataType `json:"operatingConstraintsPowerDescriptionData"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m OperatingConstraintsPowerDescriptionListDataType) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *OperatingConstraintsPowerDescriptionListDataType) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// OperatingConstraintsPowerDescriptionListDataSelectorsType complex type
type OperatingConstraintsPowerDescriptionListDataSelectorsType struct {
	SequenceId *PowerSequenceIdType `json:"sequenceId"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m OperatingConstraintsPowerDescriptionListDataSelectorsType) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *OperatingConstraintsPowerDescriptionListDataSelectorsType) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// OperatingConstraintsPowerRangeDataType complex type
type OperatingConstraintsPowerRangeDataType struct {
	SequenceId *PowerSequenceIdType `json:"sequenceId"`
	PowerMin   *ScaledNumberType    `json:"powerMin"`
	PowerMax   *ScaledNumberType    `json:"powerMax"`
	EnergyMin  *ScaledNumberType    `json:"energyMin"`
	EnergyMax  *ScaledNumberType    `json:"energyMax"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m OperatingConstraintsPowerRangeDataType) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *OperatingConstraintsPowerRangeDataType) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// OperatingConstraintsPowerRangeListDataType complex type
type OperatingConstraintsPowerRangeListDataType struct {
	OperatingConstraintsPowerRangeData []OperatingConstraintsPowerRangeDataType `json:"operatingConstraintsPowerRangeData"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m OperatingConstraintsPowerRangeListDataType) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *OperatingConstraintsPowerRangeListDataType) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// OperatingConstraintsPowerRangeListDataSelectorsType complex type
type OperatingConstraintsPowerRangeListDataSelectorsType struct {
	SequenceId *PowerSequenceIdType `json:"sequenceId"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m OperatingConstraintsPowerRangeListDataSelectorsType) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *OperatingConstraintsPowerRangeListDataSelectorsType) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// OperatingConstraintsPowerLevelDataType complex type
type OperatingConstraintsPowerLevelDataType struct {
	SequenceId *PowerSequenceIdType `json:"sequenceId"`
	Power      []ScaledNumberType   `json:"power"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m OperatingConstraintsPowerLevelDataType) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *OperatingConstraintsPowerLevelDataType) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// OperatingConstraintsPowerLevelListDataType complex type
type OperatingConstraintsPowerLevelListDataType struct {
	OperatingConstraintsPowerLevelData []OperatingConstraintsPowerLevelDataType `json:"operatingConstraintsPowerLevelData"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m OperatingConstraintsPowerLevelListDataType) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *OperatingConstraintsPowerLevelListDataType) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// OperatingConstraintsPowerLevelListDataSelectorsType complex type
type OperatingConstraintsPowerLevelListDataSelectorsType struct {
	SequenceId *PowerSequenceIdType `json:"sequenceId"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m OperatingConstraintsPowerLevelListDataSelectorsType) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *OperatingConstraintsPowerLevelListDataSelectorsType) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// OperatingConstraintsResumeImplicationDataType complex type
type OperatingConstraintsResumeImplicationDataType struct {
	SequenceId            *PowerSequenceIdType `json:"sequenceId"`
	ResumeEnergyEstimated *ScaledNumberType    `json:"resumeEnergyEstimated"`
	EnergyUnit            string               `json:"energyUnit"`
	ResumeCostEstimated   *ScaledNumberType    `json:"resumeCostEstimated"`
	Currency              string               `json:"currency"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m OperatingConstraintsResumeImplicationDataType) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *OperatingConstraintsResumeImplicationDataType) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// OperatingConstraintsResumeImplicationListDataType complex type
type OperatingConstraintsResumeImplicationListDataType struct {
	OperatingConstraintsResumeImplicationData []OperatingConstraintsResumeImplicationDataType `json:"operatingConstraintsResumeImplicationData"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m OperatingConstraintsResumeImplicationListDataType) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *OperatingConstraintsResumeImplicationListDataType) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// OperatingConstraintsResumeImplicationListDataSelectorsType complex type
type OperatingConstraintsResumeImplicationListDataSelectorsType struct {
	SequenceId *PowerSequenceIdType `json:"sequenceId"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m OperatingConstraintsResumeImplicationListDataSelectorsType) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *OperatingConstraintsResumeImplicationListDataSelectorsType) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// PowerTimeSlotScheduleDataType complex type
type PowerTimeSlotScheduleDataType struct {
	SequenceId          *PowerSequenceIdType     `json:"sequenceId"`
	SlotNumber          *PowerTimeSlotNumberType `json:"slotNumber"`
	TimePeriod          *TimePeriodType          `json:"timePeriod"`
	DefaultDuration     string                   `json:"defaultDuration"`
	DurationUncertainty string                   `json:"durationUncertainty"`
	SlotActivated       *bool                    `json:"slotActivated"`
	Description         *DescriptionType         `json:"description"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m PowerTimeSlotScheduleDataType) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *PowerTimeSlotScheduleDataType) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// PowerTimeSlotScheduleListDataType complex type
type PowerTimeSlotScheduleListDataType struct {
	PowerTimeSlotScheduleData []PowerTimeSlotScheduleDataType `json:"powerTimeSlotScheduleData"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m PowerTimeSlotScheduleListDataType) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *PowerTimeSlotScheduleListDataType) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// PowerTimeSlotScheduleListDataSelectorsType complex type
type PowerTimeSlotScheduleListDataSelectorsType struct {
	SequenceId *PowerSequenceIdType     `json:"sequenceId"`
	SlotNumber *PowerTimeSlotNumberType `json:"slotNumber"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m PowerTimeSlotScheduleListDataSelectorsType) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *PowerTimeSlotScheduleListDataSelectorsType) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// PowerTimeSlotValueDataType complex type
type PowerTimeSlotValueDataType struct {
	SequenceId *PowerSequenceIdType     `json:"sequenceId"`
	SlotNumber *PowerTimeSlotNumberType `json:"slotNumber"`
	ValueType  string                   `json:"valueType"`
	Value      *ScaledNumberType        `json:"value"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m PowerTimeSlotValueDataType) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *PowerTimeSlotValueDataType) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// PowerTimeSlotValueListDataType complex type
type PowerTimeSlotValueListDataType struct {
	PowerTimeSlotValueData []PowerTimeSlotValueDataType `json:"powerTimeSlotValueData"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m PowerTimeSlotValueListDataType) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *PowerTimeSlotValueListDataType) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// PowerTimeSlotValueListDataSelectorsType complex type
type PowerTimeSlotValueListDataSelectorsType struct {
	SequenceId *PowerSequenceIdType     `json:"sequenceId"`
	SlotNumber *PowerTimeSlotNumberType `json:"slotNumber"`
	ValueType  string                   `json:"valueType"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m PowerTimeSlotValueListDataSelectorsType) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *PowerTimeSlotValueListDataSelectorsType) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// PowerTimeSlotScheduleConstraintsDataType complex type
type PowerTimeSlotScheduleConstraintsDataType struct {
	SequenceId        *PowerSequenceIdType     `json:"sequenceId"`
	SlotNumber        *PowerTimeSlotNumberType `json:"slotNumber"`
	EarliestStartTime string                   `json:"earliestStartTime"`
	LatestEndTime     string                   `json:"latestEndTime"`
	MinDuration       string                   `json:"minDuration"`
	MaxDuration       string                   `json:"maxDuration"`
	OptionalSlot      *bool                    `json:"optionalSlot"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m PowerTimeSlotScheduleConstraintsDataType) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *PowerTimeSlotScheduleConstraintsDataType) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// PowerTimeSlotScheduleConstraintsListDataType complex type
type PowerTimeSlotScheduleConstraintsListDataType struct {
	PowerTimeSlotScheduleConstraintsData []PowerTimeSlotScheduleConstraintsDataType `json:"powerTimeSlotScheduleConstraintsData"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m PowerTimeSlotScheduleConstraintsListDataType) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *PowerTimeSlotScheduleConstraintsListDataType) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// PowerTimeSlotScheduleConstraintsListDataSelectorsType complex type
type PowerTimeSlotScheduleConstraintsListDataSelectorsType struct {
	SequenceId *PowerSequenceIdType     `json:"sequenceId"`
	SlotNumber *PowerTimeSlotNumberType `json:"slotNumber"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m PowerTimeSlotScheduleConstraintsListDataSelectorsType) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *PowerTimeSlotScheduleConstraintsListDataSelectorsType) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// PowerSequenceAlternativesRelationDataType complex type
type PowerSequenceAlternativesRelationDataType struct {
	AlternativesId *AlternativesIdType   `json:"alternativesId"`
	SequenceId     []PowerSequenceIdType `json:"sequenceId"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m PowerSequenceAlternativesRelationDataType) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *PowerSequenceAlternativesRelationDataType) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// PowerSequenceAlternativesRelationListDataType complex type
type PowerSequenceAlternativesRelationListDataType struct {
	PowerSequenceAlternativesRelationData []PowerSequenceAlternativesRelationDataType `json:"powerSequenceAlternativesRelationData"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m PowerSequenceAlternativesRelationListDataType) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *PowerSequenceAlternativesRelationListDataType) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// PowerSequenceAlternativesRelationListDataSelectorsType complex type
type PowerSequenceAlternativesRelationListDataSelectorsType struct {
	AlternativesId *AlternativesIdType  `json:"alternativesId"`
	SequenceId     *PowerSequenceIdType `json:"sequenceId"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m PowerSequenceAlternativesRelationListDataSelectorsType) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *PowerSequenceAlternativesRelationListDataSelectorsType) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// PowerSequenceDescriptionDataType complex type
type PowerSequenceDescriptionDataType struct {
	SequenceId              *PowerSequenceIdType `json:"sequenceId"`
	Description             *DescriptionType     `json:"description"`
	PositiveEnergyDirection string               `json:"positiveEnergyDirection"`
	PowerUnit               string               `json:"powerUnit"`
	EnergyUnit              string               `json:"energyUnit"`
	ValueSource             string               `json:"valueSource"`
	Scope                   string               `json:"scope"`
	TaskIdentifier          *uint                `json:"taskIdentifier"`
	RepetitionsTotal        *uint                `json:"repetitionsTotal"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m PowerSequenceDescriptionDataType) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *PowerSequenceDescriptionDataType) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// PowerSequenceDescriptionListDataType complex type
type PowerSequenceDescriptionListDataType struct {
	PowerSequenceDescriptionData []PowerSequenceDescriptionDataType `json:"powerSequenceDescriptionData"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m PowerSequenceDescriptionListDataType) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *PowerSequenceDescriptionListDataType) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// PowerSequenceDescriptionListDataSelectorsType complex type
type PowerSequenceDescriptionListDataSelectorsType struct {
	SequenceId *PowerSequenceIdType `json:"sequenceId"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m PowerSequenceDescriptionListDataSelectorsType) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *PowerSequenceDescriptionListDataSelectorsType) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// PowerSequenceStateDataType complex type
type PowerSequenceStateDataType struct {
	SequenceId                 *PowerSequenceIdType     `json:"sequenceId"`
	State                      string                   `json:"state"`
	ActiveSlotNumber           *PowerTimeSlotNumberType `json:"activeSlotNumber"`
	ElapsedSlotTime            string                   `json:"elapsedSlotTime"`
	RemainingSlotTime          string                   `json:"remainingSlotTime"`
	SequenceRemoteControllable *bool                    `json:"sequenceRemoteControllable"`
	ActiveRepetitionNumber     *uint                    `json:"activeRepetitionNumber"`
	RemainingPauseTime         string                   `json:"remainingPauseTime"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m PowerSequenceStateDataType) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *PowerSequenceStateDataType) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// PowerSequenceStateListDataType complex type
type PowerSequenceStateListDataType struct {
	PowerSequenceStateData []PowerSequenceStateDataType `json:"powerSequenceStateData"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m PowerSequenceStateListDataType) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *PowerSequenceStateListDataType) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// PowerSequenceStateListDataSelectorsType complex type
type PowerSequenceStateListDataSelectorsType struct {
	SequenceId *PowerSequenceIdType `json:"sequenceId"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m PowerSequenceStateListDataSelectorsType) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *PowerSequenceStateListDataSelectorsType) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// PowerSequenceScheduleDataType complex type
type PowerSequenceScheduleDataType struct {
	SequenceId *PowerSequenceIdType `json:"sequenceId"`
	StartTime  string               `json:"startTime"`
	EndTime    string               `json:"endTime"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m PowerSequenceScheduleDataType) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *PowerSequenceScheduleDataType) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// PowerSequenceScheduleListDataType complex type
type PowerSequenceScheduleListDataType struct {
	PowerSequenceScheduleData []PowerSequenceScheduleDataType `json:"powerSequenceScheduleData"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m PowerSequenceScheduleListDataType) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *PowerSequenceScheduleListDataType) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// PowerSequenceScheduleListDataSelectorsType complex type
type PowerSequenceScheduleListDataSelectorsType struct {
	SequenceId *PowerSequenceIdType `json:"sequenceId"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m PowerSequenceScheduleListDataSelectorsType) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *PowerSequenceScheduleListDataSelectorsType) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// PowerSequenceScheduleConstraintsDataType complex type
type PowerSequenceScheduleConstraintsDataType struct {
	SequenceId        *PowerSequenceIdType `json:"sequenceId"`
	EarliestStartTime string               `json:"earliestStartTime"`
	LatestStartTime   string               `json:"latestStartTime"`
	EarliestEndTime   string               `json:"earliestEndTime"`
	LatestEndTime     string               `json:"latestEndTime"`
	OptionalSequence  *bool                `json:"optionalSequence"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m PowerSequenceScheduleConstraintsDataType) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *PowerSequenceScheduleConstraintsDataType) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// PowerSequenceScheduleConstraintsListDataType complex type
type PowerSequenceScheduleConstraintsListDataType struct {
	PowerSequenceScheduleConstraintsData []PowerSequenceScheduleConstraintsDataType `json:"powerSequenceScheduleConstraintsData"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m PowerSequenceScheduleConstraintsListDataType) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *PowerSequenceScheduleConstraintsListDataType) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// PowerSequenceScheduleConstraintsListDataSelectorsType complex type
type PowerSequenceScheduleConstraintsListDataSelectorsType struct {
	SequenceId *PowerSequenceIdType `json:"sequenceId"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m PowerSequenceScheduleConstraintsListDataSelectorsType) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *PowerSequenceScheduleConstraintsListDataSelectorsType) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// PowerSequencePriceDataType complex type
type PowerSequencePriceDataType struct {
	SequenceId         *PowerSequenceIdType `json:"sequenceId"`
	PotentialStartTime string               `json:"potentialStartTime"`
	Price              *ScaledNumberType    `json:"price"`
	Currency           string               `json:"currency"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m PowerSequencePriceDataType) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *PowerSequencePriceDataType) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// PowerSequencePriceListDataType complex type
type PowerSequencePriceListDataType struct {
	PowerSequencePriceData []PowerSequencePriceDataType `json:"powerSequencePriceData"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m PowerSequencePriceListDataType) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *PowerSequencePriceListDataType) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// PowerSequencePriceListDataSelectorsType complex type
type PowerSequencePriceListDataSelectorsType struct {
	SequenceId                 *PowerSequenceIdType   `json:"sequenceId"`
	PotentialStartTimeInterval *TimestampIntervalType `json:"potentialStartTimeInterval"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m PowerSequencePriceListDataSelectorsType) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *PowerSequencePriceListDataSelectorsType) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// PowerSequenceSchedulePreferenceDataType complex type
type PowerSequenceSchedulePreferenceDataType struct {
	SequenceId *PowerSequenceIdType `json:"sequenceId"`
	Greenest   *bool                `json:"greenest"`
	Cheapest   *bool                `json:"cheapest"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m PowerSequenceSchedulePreferenceDataType) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *PowerSequenceSchedulePreferenceDataType) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// PowerSequenceSchedulePreferenceListDataType complex type
type PowerSequenceSchedulePreferenceListDataType struct {
	PowerSequenceSchedulePreferenceData []PowerSequenceSchedulePreferenceDataType `json:"powerSequenceSchedulePreferenceData"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m PowerSequenceSchedulePreferenceListDataType) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *PowerSequenceSchedulePreferenceListDataType) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// PowerSequenceSchedulePreferenceListDataSelectorsType complex type
type PowerSequenceSchedulePreferenceListDataSelectorsType struct {
	SequenceId *PowerSequenceIdType `json:"sequenceId"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m PowerSequenceSchedulePreferenceListDataSelectorsType) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *PowerSequenceSchedulePreferenceListDataSelectorsType) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// PowerSequenceNodeScheduleInformationDataType complex type
type PowerSequenceNodeScheduleInformationDataType struct {
	NodeRemoteControllable           *bool `json:"nodeRemoteControllable"`
	SupportsSingleSlotSchedulingOnly *bool `json:"supportsSingleSlotSchedulingOnly"`
	AlternativesCount                *uint `json:"alternativesCount"`
	TotalSequencesCountMax           *uint `json:"totalSequencesCountMax"`
	SupportsReselection              *bool `json:"supportsReselection"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m PowerSequenceNodeScheduleInformationDataType) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *PowerSequenceNodeScheduleInformationDataType) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// PowerSequenceScheduleConfigurationRequestCallType complex type
type PowerSequenceScheduleConfigurationRequestCallType struct {
	SequenceId *PowerSequenceIdType `json:"sequenceId"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m PowerSequenceScheduleConfigurationRequestCallType) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *PowerSequenceScheduleConfigurationRequestCallType) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// PowerSequencePriceCalculationRequestCallType complex type
type PowerSequencePriceCalculationRequestCallType struct {
	SequenceId         *PowerSequenceIdType `json:"sequenceId"`
	PotentialStartTime string               `json:"potentialStartTime"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m PowerSequencePriceCalculationRequestCallType) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *PowerSequencePriceCalculationRequestCallType) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// SensingDataType complex type
type SensingDataType struct {
	Timestamp string            `json:"timestamp"`
	State     string            `json:"state"`
	Value     *ScaledNumberType `json:"value"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m SensingDataType) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *SensingDataType) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// SensingListDataType complex type
type SensingListDataType struct {
	SensingData []SensingDataType `json:"sensingData"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m SensingListDataType) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *SensingListDataType) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// SensingListDataSelectorsType complex type
type SensingListDataSelectorsType struct {
	TimestampInterval *TimestampIntervalType `json:"timestampInterval"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m SensingListDataSelectorsType) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *SensingListDataSelectorsType) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// SensingDescriptionDataType complex type
type SensingDescriptionDataType struct {
	SensingType string           `json:"sensingType"`
	Unit        string           `json:"unit"`
	ScopeType   string           `json:"scopeType"`
	Label       *LabelType       `json:"label"`
	Description *DescriptionType `json:"description"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m SensingDescriptionDataType) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *SensingDescriptionDataType) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// SetpointDataType complex type
type SetpointDataType struct {
	SetpointId               *SetpointIdType   `json:"setpointId"`
	Value                    *ScaledNumberType `json:"value"`
	ValueMin                 *ScaledNumberType `json:"valueMin"`
	ValueMax                 *ScaledNumberType `json:"valueMax"`
	ValueToleranceAbsolute   *ScaledNumberType `json:"valueToleranceAbsolute"`
	ValueTolerancePercentage *ScaledNumberType `json:"valueTolerancePercentage"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m SetpointDataType) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *SetpointDataType) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// SetpointListDataType complex type
type SetpointListDataType struct {
	SetpointData []SetpointDataType `json:"setpointData"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m SetpointListDataType) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *SetpointListDataType) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// SetpointListDataSelectorsType complex type
type SetpointListDataSelectorsType struct {
	SetpointId *SetpointIdType `json:"setpointId"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m SetpointListDataSelectorsType) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *SetpointListDataSelectorsType) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// SetpointConstraintsDataType complex type
type SetpointConstraintsDataType struct {
	SetpointId       *SetpointIdType   `json:"setpointId"`
	SetpointRangeMin *ScaledNumberType `json:"setpointRangeMin"`
	SetpointRangeMax *ScaledNumberType `json:"setpointRangeMax"`
	SetpointStepSize *ScaledNumberType `json:"setpointStepSize"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m SetpointConstraintsDataType) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *SetpointConstraintsDataType) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// SetpointConstraintsListDataType complex type
type SetpointConstraintsListDataType struct {
	SetpointConstraintsData []SetpointConstraintsDataType `json:"setpointConstraintsData"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m SetpointConstraintsListDataType) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *SetpointConstraintsListDataType) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// SetpointConstraintsListDataSelectorsType complex type
type SetpointConstraintsListDataSelectorsType struct {
	SetpointId *SetpointIdType `json:"setpointId"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m SetpointConstraintsListDataSelectorsType) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *SetpointConstraintsListDataSelectorsType) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// SetpointDescriptionDataType complex type
type SetpointDescriptionDataType struct {
	SetpointId    *SetpointIdType    `json:"setpointId"`
	MeasurementId *MeasurementIdType `json:"measurementId"`
	TimeTableId   *TimeTableIdType   `json:"timeTableId"`
	SetpointType  string             `json:"setpointType"`
	Unit          string             `json:"unit"`
	ScopeType     string             `json:"scopeType"`
	Label         *LabelType         `json:"label"`
	Description   *DescriptionType   `json:"description"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m SetpointDescriptionDataType) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *SetpointDescriptionDataType) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// SetpointDescriptionListDataType complex type
type SetpointDescriptionListDataType struct {
	SetpointDescriptionData []SetpointDescriptionDataType `json:"setpointDescriptionData"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m SetpointDescriptionListDataType) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *SetpointDescriptionListDataType) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// SetpointDescriptionListDataSelectorsType complex type
type SetpointDescriptionListDataSelectorsType struct {
	SetpointId    *SetpointIdType    `json:"setpointId"`
	MeasurementId *MeasurementIdType `json:"measurementId"`
	TimeTableId   *TimeTableIdType   `json:"timeTableId"`
	SetpointType  string             `json:"setpointType"`
	ScopeType     string             `json:"scopeType"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m SetpointDescriptionListDataSelectorsType) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *SetpointDescriptionListDataSelectorsType) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// SmartEnergyManagementPsAlternativesRelationType complex type
type SmartEnergyManagementPsAlternativesRelationType struct {
}

// MarshalJSON is the SHIP serialization marshaller
func (m SmartEnergyManagementPsAlternativesRelationType) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *SmartEnergyManagementPsAlternativesRelationType) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// SmartEnergyManagementPsAlternativesType complex type
type SmartEnergyManagementPsAlternativesType struct {
	Relation      *SmartEnergyManagementPsAlternativesRelationType `json:"relation"`
	PowerSequence []SmartEnergyManagementPsPowerSequenceType       `json:"powerSequence"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m SmartEnergyManagementPsAlternativesType) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *SmartEnergyManagementPsAlternativesType) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// SmartEnergyManagementPsPowerSequenceType complex type
type SmartEnergyManagementPsPowerSequenceType struct {
	Description                           *PowerSequenceDescriptionDataType              `json:"description"`
	State                                 *PowerSequenceStateDataType                    `json:"state"`
	Schedule                              *PowerSequenceScheduleDataType                 `json:"schedule"`
	ScheduleConstraints                   *PowerSequenceScheduleConstraintsDataType      `json:"scheduleConstraints"`
	SchedulePreference                    *PowerSequenceSchedulePreferenceDataType       `json:"schedulePreference"`
	OperatingConstraintsInterrupt         *OperatingConstraintsInterruptDataType         `json:"operatingConstraintsInterrupt"`
	OperatingConstraintsDuration          *OperatingConstraintsDurationDataType          `json:"operatingConstraintsDuration"`
	OperatingConstraintsResumeImplication *OperatingConstraintsResumeImplicationDataType `json:"operatingConstraintsResumeImplication"`
	PowerTimeSlot                         []SmartEnergyManagementPsPowerTimeSlotType     `json:"powerTimeSlot"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m SmartEnergyManagementPsPowerSequenceType) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *SmartEnergyManagementPsPowerSequenceType) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// SmartEnergyManagementPsPowerTimeSlotType complex type
type SmartEnergyManagementPsPowerTimeSlotType struct {
	Schedule            *PowerTimeSlotScheduleDataType                     `json:"schedule"`
	ValueList           *SmartEnergyManagementPsPowerTimeSlotValueListType `json:"valueList"`
	ScheduleConstraints *PowerTimeSlotScheduleConstraintsDataType          `json:"scheduleConstraints"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m SmartEnergyManagementPsPowerTimeSlotType) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *SmartEnergyManagementPsPowerTimeSlotType) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// SmartEnergyManagementPsPowerTimeSlotValueListType complex type
type SmartEnergyManagementPsPowerTimeSlotValueListType struct {
	Value []PowerTimeSlotValueDataType `json:"value"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m SmartEnergyManagementPsPowerTimeSlotValueListType) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *SmartEnergyManagementPsPowerTimeSlotValueListType) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// SmartEnergyManagementPsDataType complex type
type SmartEnergyManagementPsDataType struct {
	NodeScheduleInformation *PowerSequenceNodeScheduleInformationDataType `json:"nodeScheduleInformation"`
	Alternatives            []SmartEnergyManagementPsAlternativesType     `json:"alternatives"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m SmartEnergyManagementPsDataType) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *SmartEnergyManagementPsDataType) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// SmartEnergyManagementPsDataSelectorsType complex type
type SmartEnergyManagementPsDataSelectorsType struct {
	AlternativesRelation     *AlternativesRelation     `json:"alternativesRelation"`
	PowerSequenceDescription *PowerSequenceDescription `json:"powerSequenceDescription"`
	PowerTimeSlotSchedule    *PowerTimeSlotSchedule    `json:"powerTimeSlotSchedule"`
	PowerTimeSlotValue       *PowerTimeSlotValue       `json:"powerTimeSlotValue"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m SmartEnergyManagementPsDataSelectorsType) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *SmartEnergyManagementPsDataSelectorsType) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// SmartEnergyManagementPsPriceDataType complex type
type SmartEnergyManagementPsPriceDataType struct {
	Price []PowerSequencePriceDataType `json:"price"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m SmartEnergyManagementPsPriceDataType) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *SmartEnergyManagementPsPriceDataType) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// SmartEnergyManagementPsPriceDataSelectorsType complex type
type SmartEnergyManagementPsPriceDataSelectorsType struct {
	Price *PowerSequencePriceListDataSelectorsType `json:"price"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m SmartEnergyManagementPsPriceDataSelectorsType) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *SmartEnergyManagementPsPriceDataSelectorsType) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// SmartEnergyManagementPsConfigurationRequestCallType complex type
type SmartEnergyManagementPsConfigurationRequestCallType struct {
	ScheduleConfigurationRequest *PowerSequenceScheduleConfigurationRequestCallType `json:"scheduleConfigurationRequest"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m SmartEnergyManagementPsConfigurationRequestCallType) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *SmartEnergyManagementPsConfigurationRequestCallType) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// SmartEnergyManagementPsPriceCalculationRequestCallType complex type
type SmartEnergyManagementPsPriceCalculationRequestCallType struct {
	PriceCalculationRequest *PowerSequencePriceCalculationRequestCallType `json:"priceCalculationRequest"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m SmartEnergyManagementPsPriceCalculationRequestCallType) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *SmartEnergyManagementPsPriceCalculationRequestCallType) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// SupplyConditionDataType complex type
type SupplyConditionDataType struct {
	ConditionId         *ConditionIdType  `json:"conditionId"`
	Timestamp           string            `json:"timestamp"`
	EventType           string            `json:"eventType"`
	Originator          string            `json:"originator"`
	ThresholdId         *ThresholdIdType  `json:"thresholdId"`
	ThresholdPercentage *ScaledNumberType `json:"thresholdPercentage"`
	RelevantPeriod      *TimePeriodType   `json:"relevantPeriod"`
	Description         *DescriptionType  `json:"description"`
	GridCondition       string            `json:"gridCondition"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m SupplyConditionDataType) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *SupplyConditionDataType) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// SupplyConditionListDataType complex type
type SupplyConditionListDataType struct {
	SupplyConditionData []SupplyConditionDataType `json:"supplyConditionData"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m SupplyConditionListDataType) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *SupplyConditionListDataType) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// SupplyConditionListDataSelectorsType complex type
type SupplyConditionListDataSelectorsType struct {
	ConditionId       *ConditionIdType       `json:"conditionId"`
	TimestampInterval *TimestampIntervalType `json:"timestampInterval"`
	EventType         string                 `json:"eventType"`
	Originator        string                 `json:"originator"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m SupplyConditionListDataSelectorsType) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *SupplyConditionListDataSelectorsType) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// SupplyConditionDescriptionDataType complex type
type SupplyConditionDescriptionDataType struct {
	ConditionId             *ConditionIdType `json:"conditionId"`
	CommodityType           string           `json:"commodityType"`
	PositiveEnergyDirection string           `json:"positiveEnergyDirection"`
	Label                   *LabelType       `json:"label"`
	Description             *DescriptionType `json:"description"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m SupplyConditionDescriptionDataType) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *SupplyConditionDescriptionDataType) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// SupplyConditionDescriptionListDataType complex type
type SupplyConditionDescriptionListDataType struct {
	SupplyConditionDescriptionData []SupplyConditionDescriptionDataType `json:"supplyConditionDescriptionData"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m SupplyConditionDescriptionListDataType) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *SupplyConditionDescriptionListDataType) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// SupplyConditionDescriptionListDataSelectorsType complex type
type SupplyConditionDescriptionListDataSelectorsType struct {
	ConditionId *ConditionIdType `json:"conditionId"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m SupplyConditionDescriptionListDataSelectorsType) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *SupplyConditionDescriptionListDataSelectorsType) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// SupplyConditionThresholdRelationDataType complex type
type SupplyConditionThresholdRelationDataType struct {
	ConditionId *ConditionIdType  `json:"conditionId"`
	ThresholdId []ThresholdIdType `json:"thresholdId"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m SupplyConditionThresholdRelationDataType) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *SupplyConditionThresholdRelationDataType) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// SupplyConditionThresholdRelationListDataType complex type
type SupplyConditionThresholdRelationListDataType struct {
	SupplyConditionThresholdRelationData []SupplyConditionThresholdRelationDataType `json:"supplyConditionThresholdRelationData"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m SupplyConditionThresholdRelationListDataType) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *SupplyConditionThresholdRelationListDataType) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// SupplyConditionThresholdRelationListDataSelectorsType complex type
type SupplyConditionThresholdRelationListDataSelectorsType struct {
	ConditionId *ConditionIdType `json:"conditionId"`
	ThresholdId *ThresholdIdType `json:"thresholdId"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m SupplyConditionThresholdRelationListDataSelectorsType) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *SupplyConditionThresholdRelationListDataSelectorsType) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// TaskManagementDirectControlRelatedType complex type
type TaskManagementDirectControlRelatedType struct {
}

// MarshalJSON is the SHIP serialization marshaller
func (m TaskManagementDirectControlRelatedType) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *TaskManagementDirectControlRelatedType) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// TaskManagementHvacRelatedType complex type
type TaskManagementHvacRelatedType struct {
	OverrunId *HvacOverrunIdType `json:"overrunId"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m TaskManagementHvacRelatedType) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *TaskManagementHvacRelatedType) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// TaskManagementLoadControlReleatedType complex type
type TaskManagementLoadControlReleatedType struct {
	EventId *LoadControlEventIdType `json:"eventId"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m TaskManagementLoadControlReleatedType) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *TaskManagementLoadControlReleatedType) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// TaskManagementPowerSequencesRelatedType complex type
type TaskManagementPowerSequencesRelatedType struct {
	SequenceId *PowerSequenceIdType `json:"sequenceId"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m TaskManagementPowerSequencesRelatedType) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *TaskManagementPowerSequencesRelatedType) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// TaskManagementSmartEnergyManagementPsRelatedType complex type
type TaskManagementSmartEnergyManagementPsRelatedType struct {
	SequenceId *PowerSequenceIdType `json:"sequenceId"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m TaskManagementSmartEnergyManagementPsRelatedType) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *TaskManagementSmartEnergyManagementPsRelatedType) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// TaskManagementJobDataType complex type
type TaskManagementJobDataType struct {
	JobId         *TaskManagementJobIdType `json:"jobId"`
	Timestamp     string                   `json:"timestamp"`
	JobState      string                   `json:"jobState"`
	ElapsedTime   string                   `json:"elapsedTime"`
	RemainingTime string                   `json:"remainingTime"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m TaskManagementJobDataType) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *TaskManagementJobDataType) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// TaskManagementJobListDataType complex type
type TaskManagementJobListDataType struct {
	TaskManagementJobData []TaskManagementJobDataType `json:"taskManagementJobData"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m TaskManagementJobListDataType) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *TaskManagementJobListDataType) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// TaskManagementJobListDataSelectorsType complex type
type TaskManagementJobListDataSelectorsType struct {
	JobId    *TaskManagementJobIdType `json:"jobId"`
	JobState string                   `json:"jobState"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m TaskManagementJobListDataSelectorsType) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *TaskManagementJobListDataSelectorsType) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// TaskManagementJobRelationDataType complex type
type TaskManagementJobRelationDataType struct {
	JobId                          *TaskManagementJobIdType                          `json:"jobId"`
	DirectControlRelated           *TaskManagementDirectControlRelatedType           `json:"directControlRelated"`
	HvacRelated                    *TaskManagementHvacRelatedType                    `json:"hvacRelated"`
	LoadControlReleated            *TaskManagementLoadControlReleatedType            `json:"loadControlReleated"`
	PowerSequencesRelated          *TaskManagementPowerSequencesRelatedType          `json:"powerSequencesRelated"`
	SmartEnergyManagementPsRelated *TaskManagementSmartEnergyManagementPsRelatedType `json:"smartEnergyManagementPsRelated"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m TaskManagementJobRelationDataType) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *TaskManagementJobRelationDataType) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// TaskManagementJobRelationListDataType complex type
type TaskManagementJobRelationListDataType struct {
	TaskManagementJobRelationData []TaskManagementJobRelationDataType `json:"taskManagementJobRelationData"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m TaskManagementJobRelationListDataType) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *TaskManagementJobRelationListDataType) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// TaskManagementJobRelationListDataSelectorsType complex type
type TaskManagementJobRelationListDataSelectorsType struct {
	JobId *TaskManagementJobIdType `json:"jobId"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m TaskManagementJobRelationListDataSelectorsType) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *TaskManagementJobRelationListDataSelectorsType) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// TaskManagementJobDescriptionDataType complex type
type TaskManagementJobDescriptionDataType struct {
	JobId       *TaskManagementJobIdType `json:"jobId"`
	JobSource   string                   `json:"jobSource"`
	Label       *LabelType               `json:"label"`
	Description *DescriptionType         `json:"description"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m TaskManagementJobDescriptionDataType) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *TaskManagementJobDescriptionDataType) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// TaskManagementJobDescriptionListDataType complex type
type TaskManagementJobDescriptionListDataType struct {
	TaskManagementJobDescriptionData []TaskManagementJobDescriptionDataType `json:"taskManagementJobDescriptionData"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m TaskManagementJobDescriptionListDataType) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *TaskManagementJobDescriptionListDataType) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// TaskManagementJobDescriptionListDataSelectorsType complex type
type TaskManagementJobDescriptionListDataSelectorsType struct {
	JobId     *TaskManagementJobIdType `json:"jobId"`
	JobSource string                   `json:"jobSource"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m TaskManagementJobDescriptionListDataSelectorsType) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *TaskManagementJobDescriptionListDataSelectorsType) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// TaskManagementOverviewDataType complex type
type TaskManagementOverviewDataType struct {
	RemoteControllable *bool `json:"remoteControllable"`
	JobsActive         *bool `json:"jobsActive"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m TaskManagementOverviewDataType) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *TaskManagementOverviewDataType) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// ThresholdDataType complex type
type ThresholdDataType struct {
	ThresholdId    *ThresholdIdType  `json:"thresholdId"`
	ThresholdValue *ScaledNumberType `json:"thresholdValue"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m ThresholdDataType) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *ThresholdDataType) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// ThresholdListDataType complex type
type ThresholdListDataType struct {
	ThresholdData []ThresholdDataType `json:"thresholdData"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m ThresholdListDataType) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *ThresholdListDataType) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// ThresholdListDataSelectorsType complex type
type ThresholdListDataSelectorsType struct {
	ThresholdId *ThresholdIdType `json:"thresholdId"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m ThresholdListDataSelectorsType) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *ThresholdListDataSelectorsType) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// ThresholdConstraintsDataType complex type
type ThresholdConstraintsDataType struct {
	ThresholdId       *ThresholdIdType  `json:"thresholdId"`
	ThresholdRangeMin *ScaledNumberType `json:"thresholdRangeMin"`
	ThresholdRangeMax *ScaledNumberType `json:"thresholdRangeMax"`
	ThresholdStepSize *ScaledNumberType `json:"thresholdStepSize"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m ThresholdConstraintsDataType) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *ThresholdConstraintsDataType) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// ThresholdConstraintsListDataType complex type
type ThresholdConstraintsListDataType struct {
	ThresholdConstraintsData []ThresholdConstraintsDataType `json:"thresholdConstraintsData"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m ThresholdConstraintsListDataType) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *ThresholdConstraintsListDataType) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// ThresholdConstraintsListDataSelectorsType complex type
type ThresholdConstraintsListDataSelectorsType struct {
	ThresholdId *ThresholdIdType `json:"thresholdId"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m ThresholdConstraintsListDataSelectorsType) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *ThresholdConstraintsListDataSelectorsType) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// ThresholdDescriptionDataType complex type
type ThresholdDescriptionDataType struct {
	ThresholdId   *ThresholdIdType `json:"thresholdId"`
	ThresholdType string           `json:"thresholdType"`
	Unit          string           `json:"unit"`
	ScopeType     string           `json:"scopeType"`
	Label         *LabelType       `json:"label"`
	Description   *DescriptionType `json:"description"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m ThresholdDescriptionDataType) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *ThresholdDescriptionDataType) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// ThresholdDescriptionListDataType complex type
type ThresholdDescriptionListDataType struct {
	ThresholdDescriptionData []ThresholdDescriptionDataType `json:"thresholdDescriptionData"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m ThresholdDescriptionListDataType) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *ThresholdDescriptionListDataType) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// ThresholdDescriptionListDataSelectorsType complex type
type ThresholdDescriptionListDataSelectorsType struct {
	ThresholdId *ThresholdIdType `json:"thresholdId"`
	ScopeType   string           `json:"scopeType"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m ThresholdDescriptionListDataSelectorsType) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *ThresholdDescriptionListDataSelectorsType) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// TimeInformationDataType complex type
type TimeInformationDataType struct {
	Utc          string            `json:"utc"`
	UtcOffset    string            `json:"utcOffset"`
	DayOfWeek    *DayOfWeekType    `json:"dayOfWeek"`
	CalendarWeek *CalendarWeekType `json:"calendarWeek"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m TimeInformationDataType) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *TimeInformationDataType) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// TimeDistributorDataType complex type
type TimeDistributorDataType struct {
	IsTimeDistributor   *bool `json:"isTimeDistributor"`
	DistributorPriority *uint `json:"distributorPriority"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m TimeDistributorDataType) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *TimeDistributorDataType) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// TimePrecisionDataType complex type
type TimePrecisionDataType struct {
	IsSynchronised *bool  `json:"isSynchronised"`
	LastSyncAt     string `json:"lastSyncAt"`
	ClockDrift     *int64 `json:"clockDrift"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m TimePrecisionDataType) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *TimePrecisionDataType) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// TimeDistributorEnquiryCallType complex type
type TimeDistributorEnquiryCallType struct {
}

// MarshalJSON is the SHIP serialization marshaller
func (m TimeDistributorEnquiryCallType) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *TimeDistributorEnquiryCallType) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// xs:simpleType declarations

// ActuatorLevelFctType type
type ActuatorLevelFctType string

// ActuatorLevelFctEnumType type
type ActuatorLevelFctEnumType string

// ActuatorLevelFctEnumType constants
const (
	ActuatorLevelFctEnumTypeStart              ActuatorLevelFctEnumType = "start"
	ActuatorLevelFctEnumTypeUp                 ActuatorLevelFctEnumType = "up"
	ActuatorLevelFctEnumTypeDown               ActuatorLevelFctEnumType = "down"
	ActuatorLevelFctEnumTypeStop               ActuatorLevelFctEnumType = "stop"
	ActuatorLevelFctEnumTypePercentageabsolute ActuatorLevelFctEnumType = "percentageAbsolute"
	ActuatorLevelFctEnumTypePercentagerelative ActuatorLevelFctEnumType = "percentageRelative"
	ActuatorLevelFctEnumTypeAbsolute           ActuatorLevelFctEnumType = "absolute"
	ActuatorLevelFctEnumTypeRelative           ActuatorLevelFctEnumType = "relative"
)

// ActuatorSwitchFctType type
type ActuatorSwitchFctType string

// ActuatorSwitchFctEnumType type
type ActuatorSwitchFctEnumType string

// ActuatorSwitchFctEnumType constants
const (
	ActuatorSwitchFctEnumTypeOn     ActuatorSwitchFctEnumType = "on"
	ActuatorSwitchFctEnumTypeOff    ActuatorSwitchFctEnumType = "off"
	ActuatorSwitchFctEnumTypeToggle ActuatorSwitchFctEnumType = "toggle"
)

// AlarmIdType type
type AlarmIdType string

// AlarmTypeType type
type AlarmTypeType string

// AlarmTypeEnumType type
type AlarmTypeEnumType string

// AlarmTypeEnumType constants
const (
	AlarmTypeEnumTypeAlarmcancelled AlarmTypeEnumType = "alarmCancelled"
	AlarmTypeEnumTypeUnderthreshold AlarmTypeEnumType = "underThreshold"
	AlarmTypeEnumTypeOverthreshold  AlarmTypeEnumType = "overThreshold"
)

// BillIdType type
type BillIdType string

// BillTypeType type
type BillTypeType string

// BillTypeEnumType type
type BillTypeEnumType string

// BillTypeEnumType constants
const (
	BillTypeEnumTypeChargingsummary BillTypeEnumType = "chargingSummary"
)

// BillPositionIdType type
type BillPositionIdType string

// BillPositionCountType type
type BillPositionCountType string

// BillPositionTypeType type
type BillPositionTypeType string

// BillPositionTypeEnumType type
type BillPositionTypeEnumType string

// BillPositionTypeEnumType constants
const (
	BillPositionTypeEnumTypeGridelectricenergy         BillPositionTypeEnumType = "gridElectricEnergy"
	BillPositionTypeEnumTypeSelfproducedelectricenergy BillPositionTypeEnumType = "selfProducedElectricEnergy"
)

// BillValueIdType type
type BillValueIdType string

// BillCostIdType type
type BillCostIdType string

// BillCostTypeType type
type BillCostTypeType string

// BillCostTypeEnumType type
type BillCostTypeEnumType string

// BillCostTypeEnumType constants
const (
	BillCostTypeEnumTypeAbsoluteprice    BillCostTypeEnumType = "absolutePrice"
	BillCostTypeEnumTypeRelativeprice    BillCostTypeEnumType = "relativePrice"
	BillCostTypeEnumTypeCo2Emission      BillCostTypeEnumType = "co2Emission"
	BillCostTypeEnumTypeRenewableenergy  BillCostTypeEnumType = "renewableEnergy"
	BillCostTypeEnumTypeRadioactivewaste BillCostTypeEnumType = "radioactiveWaste"
)

// LabelType type
type LabelType string

// PurposeIdType type
type PurposeIdType string

// ChannelIdType type
type ChannelIdType string

// DirectControlActivityStateType type
type DirectControlActivityStateType string

// DirectControlActivityStateEnumType type
type DirectControlActivityStateEnumType string

// DirectControlActivityStateEnumType constants
const (
	DirectControlActivityStateEnumTypeRunning  DirectControlActivityStateEnumType = "running"
	DirectControlActivityStateEnumTypePaused   DirectControlActivityStateEnumType = "paused"
	DirectControlActivityStateEnumTypeInactive DirectControlActivityStateEnumType = "inactive"
)

// HvacSystemFunctionIdType type
type HvacSystemFunctionIdType string

// HvacSystemFunctionTypeType type
type HvacSystemFunctionTypeType string

// HvacSystemFunctionTypeEnumType type
type HvacSystemFunctionTypeEnumType string

// HvacSystemFunctionTypeEnumType constants
const (
	HvacSystemFunctionTypeEnumTypeHeating     HvacSystemFunctionTypeEnumType = "heating"
	HvacSystemFunctionTypeEnumTypeCooling     HvacSystemFunctionTypeEnumType = "cooling"
	HvacSystemFunctionTypeEnumTypeVentilation HvacSystemFunctionTypeEnumType = "ventilation"
	HvacSystemFunctionTypeEnumTypeDhw         HvacSystemFunctionTypeEnumType = "dhw"
)

// HvacOperationModeIdType type
type HvacOperationModeIdType string

// HvacOperationModeTypeType type
type HvacOperationModeTypeType string

// HvacOperationModeTypeEnumType type
type HvacOperationModeTypeEnumType string

// HvacOperationModeTypeEnumType constants
const (
	HvacOperationModeTypeEnumTypeAuto HvacOperationModeTypeEnumType = "auto"
	HvacOperationModeTypeEnumTypeOn   HvacOperationModeTypeEnumType = "on"
	HvacOperationModeTypeEnumTypeOff  HvacOperationModeTypeEnumType = "off"
	HvacOperationModeTypeEnumTypeEco  HvacOperationModeTypeEnumType = "eco"
)

// HvacOverrunIdType type
type HvacOverrunIdType string

// HvacOverrunTypeType type
type HvacOverrunTypeType string

// HvacOverrunTypeEnumType type
type HvacOverrunTypeEnumType string

// HvacOverrunTypeEnumType constants
const (
	HvacOverrunTypeEnumTypeOnetimedhw         HvacOverrunTypeEnumType = "oneTimeDhw"
	HvacOverrunTypeEnumTypeParty              HvacOverrunTypeEnumType = "party"
	HvacOverrunTypeEnumTypeSgreadycondition1  HvacOverrunTypeEnumType = "sgReadyCondition1"
	HvacOverrunTypeEnumTypeSgreadycondition3  HvacOverrunTypeEnumType = "sgReadyCondition3"
	HvacOverrunTypeEnumTypeSgreadycondition4  HvacOverrunTypeEnumType = "sgReadyCondition4"
	HvacOverrunTypeEnumTypeOnedayaway         HvacOverrunTypeEnumType = "oneDayAway"
	HvacOverrunTypeEnumTypeOnedayathome       HvacOverrunTypeEnumType = "oneDayAtHome"
	HvacOverrunTypeEnumTypeOnetimeventilation HvacOverrunTypeEnumType = "oneTimeVentilation"
	HvacOverrunTypeEnumTypeHvacsystemoff      HvacOverrunTypeEnumType = "hvacSystemOff"
	HvacOverrunTypeEnumTypeValvekick          HvacOverrunTypeEnumType = "valveKick"
)

// HvacOverrunStatusType type
type HvacOverrunStatusType string

// HvacOverrunStatusEnumType type
type HvacOverrunStatusEnumType string

// HvacOverrunStatusEnumType constants
const (
	HvacOverrunStatusEnumTypeActive   HvacOverrunStatusEnumType = "active"
	HvacOverrunStatusEnumTypeRunning  HvacOverrunStatusEnumType = "running"
	HvacOverrunStatusEnumTypeFinished HvacOverrunStatusEnumType = "finished"
	HvacOverrunStatusEnumTypeInactive HvacOverrunStatusEnumType = "inactive"
)

// MessagingNumberType type
type MessagingNumberType string

// MessagingTypeType type
type MessagingTypeType string

// MessagingDataTextType type
type MessagingDataTextType string

// MessagingTypeEnumType type
type MessagingTypeEnumType string

// MessagingTypeEnumType constants
const (
	MessagingTypeEnumTypeLogging     MessagingTypeEnumType = "logging"
	MessagingTypeEnumTypeInformation MessagingTypeEnumType = "information"
	MessagingTypeEnumTypeWarning     MessagingTypeEnumType = "warning"
	MessagingTypeEnumTypeAlarm       MessagingTypeEnumType = "alarm"
	MessagingTypeEnumTypeEmergency   MessagingTypeEnumType = "emergency"
	MessagingTypeEnumTypeObsolete    MessagingTypeEnumType = "obsolete"
)

// AlternativesIdType type
type AlternativesIdType string

// PowerSequenceIdType type
type PowerSequenceIdType string

// PowerTimeSlotNumberType type
type PowerTimeSlotNumberType string

// PowerTimeSlotValueTypeType type
type PowerTimeSlotValueTypeType string

// PowerTimeSlotValueTypeEnumType type
type PowerTimeSlotValueTypeEnumType string

// PowerTimeSlotValueTypeEnumType constants
const (
	PowerTimeSlotValueTypeEnumTypePower                   PowerTimeSlotValueTypeEnumType = "power"
	PowerTimeSlotValueTypeEnumTypePowermin                PowerTimeSlotValueTypeEnumType = "powerMin"
	PowerTimeSlotValueTypeEnumTypePowermax                PowerTimeSlotValueTypeEnumType = "powerMax"
	PowerTimeSlotValueTypeEnumTypePowerexpectedvalue      PowerTimeSlotValueTypeEnumType = "powerExpectedValue"
	PowerTimeSlotValueTypeEnumTypePowerstandarddeviation  PowerTimeSlotValueTypeEnumType = "powerStandardDeviation"
	PowerTimeSlotValueTypeEnumTypePowerskewness           PowerTimeSlotValueTypeEnumType = "powerSkewness"
	PowerTimeSlotValueTypeEnumTypeEnergy                  PowerTimeSlotValueTypeEnumType = "energy"
	PowerTimeSlotValueTypeEnumTypeEnergymin               PowerTimeSlotValueTypeEnumType = "energyMin"
	PowerTimeSlotValueTypeEnumTypeEnergymax               PowerTimeSlotValueTypeEnumType = "energyMax"
	PowerTimeSlotValueTypeEnumTypeEnergyexpectedvalue     PowerTimeSlotValueTypeEnumType = "energyExpectedValue"
	PowerTimeSlotValueTypeEnumTypeEnergystandarddeviation PowerTimeSlotValueTypeEnumType = "energyStandardDeviation"
	PowerTimeSlotValueTypeEnumTypeEnergyskewness          PowerTimeSlotValueTypeEnumType = "energySkewness"
)

// PowerSequenceScopeType type
type PowerSequenceScopeType string

// PowerSequenceScopeEnumType type
type PowerSequenceScopeEnumType string

// PowerSequenceScopeEnumType constants
const (
	PowerSequenceScopeEnumTypeForecast       PowerSequenceScopeEnumType = "forecast"
	PowerSequenceScopeEnumTypeMeasurement    PowerSequenceScopeEnumType = "measurement"
	PowerSequenceScopeEnumTypeRecommendation PowerSequenceScopeEnumType = "recommendation"
)

// PowerSequenceStateType type
type PowerSequenceStateType string

// PowerSequenceStateEnumType type
type PowerSequenceStateEnumType string

// PowerSequenceStateEnumType constants
const (
	PowerSequenceStateEnumTypeRunning         PowerSequenceStateEnumType = "running"
	PowerSequenceStateEnumTypePaused          PowerSequenceStateEnumType = "paused"
	PowerSequenceStateEnumTypeScheduled       PowerSequenceStateEnumType = "scheduled"
	PowerSequenceStateEnumTypeScheduledpaused PowerSequenceStateEnumType = "scheduledPaused"
	PowerSequenceStateEnumTypePending         PowerSequenceStateEnumType = "pending"
	PowerSequenceStateEnumTypeInactive        PowerSequenceStateEnumType = "inactive"
	PowerSequenceStateEnumTypeCompleted       PowerSequenceStateEnumType = "completed"
	PowerSequenceStateEnumTypeInvalid         PowerSequenceStateEnumType = "invalid"
)

// SensingStateType type
type SensingStateType string

// SensingStateEnumType type
type SensingStateEnumType string

// SensingStateEnumType constants
const (
	SensingStateEnumTypeOn                      SensingStateEnumType = "on"
	SensingStateEnumTypeOff                     SensingStateEnumType = "off"
	SensingStateEnumTypeToggle                  SensingStateEnumType = "toggle"
	SensingStateEnumTypeLevel                   SensingStateEnumType = "level"
	SensingStateEnumTypeLevelup                 SensingStateEnumType = "levelUp"
	SensingStateEnumTypeLeveldown               SensingStateEnumType = "levelDown"
	SensingStateEnumTypeLevelstart              SensingStateEnumType = "levelStart"
	SensingStateEnumTypeLevelstop               SensingStateEnumType = "levelStop"
	SensingStateEnumTypeLevelabsolute           SensingStateEnumType = "levelAbsolute"
	SensingStateEnumTypeLevelrelative           SensingStateEnumType = "levelRelative"
	SensingStateEnumTypeLevelpercentageabsolute SensingStateEnumType = "levelPercentageAbsolute"
	SensingStateEnumTypeLevelpercentagerelative SensingStateEnumType = "levelPercentageRelative"
	SensingStateEnumTypePressed                 SensingStateEnumType = "pressed"
	SensingStateEnumTypeLongpressed             SensingStateEnumType = "longPressed"
	SensingStateEnumTypeReleased                SensingStateEnumType = "released"
	SensingStateEnumTypeChanged                 SensingStateEnumType = "changed"
	SensingStateEnumTypeStarted                 SensingStateEnumType = "started"
	SensingStateEnumTypeStopped                 SensingStateEnumType = "stopped"
	SensingStateEnumTypePaused                  SensingStateEnumType = "paused"
	SensingStateEnumTypeMiddle                  SensingStateEnumType = "middle"
	SensingStateEnumTypeUp                      SensingStateEnumType = "up"
	SensingStateEnumTypeDown                    SensingStateEnumType = "down"
	SensingStateEnumTypeForward                 SensingStateEnumType = "forward"
	SensingStateEnumTypeBackwards               SensingStateEnumType = "backwards"
	SensingStateEnumTypeOpen                    SensingStateEnumType = "open"
	SensingStateEnumTypeClosed                  SensingStateEnumType = "closed"
	SensingStateEnumTypeOpening                 SensingStateEnumType = "opening"
	SensingStateEnumTypeClosing                 SensingStateEnumType = "closing"
	SensingStateEnumTypeHigh                    SensingStateEnumType = "high"
	SensingStateEnumTypeLow                     SensingStateEnumType = "low"
	SensingStateEnumTypeDay                     SensingStateEnumType = "day"
	SensingStateEnumTypeNight                   SensingStateEnumType = "night"
	SensingStateEnumTypeDetected                SensingStateEnumType = "detected"
	SensingStateEnumTypeNotdetected             SensingStateEnumType = "notDetected"
	SensingStateEnumTypeAlarmed                 SensingStateEnumType = "alarmed"
	SensingStateEnumTypeNotalarmed              SensingStateEnumType = "notAlarmed"
)

// SensingTypeType type
type SensingTypeType string

// SensingTypeEnumType type
type SensingTypeEnumType string

// SensingTypeEnumType constants
const (
	SensingTypeEnumTypeSwitch            SensingTypeEnumType = "switch"
	SensingTypeEnumTypeButton            SensingTypeEnumType = "button"
	SensingTypeEnumTypeLevel             SensingTypeEnumType = "level"
	SensingTypeEnumTypeLevelswitch       SensingTypeEnumType = "levelSwitch"
	SensingTypeEnumTypeWindowhandle      SensingTypeEnumType = "windowHandle"
	SensingTypeEnumTypeContactsensor     SensingTypeEnumType = "contactSensor"
	SensingTypeEnumTypeOccupancysensor   SensingTypeEnumType = "occupancySensor"
	SensingTypeEnumTypeMotiondetector    SensingTypeEnumType = "motionDetector"
	SensingTypeEnumTypeFiredetector      SensingTypeEnumType = "fireDetector"
	SensingTypeEnumTypeSmokedetector     SensingTypeEnumType = "smokeDetector"
	SensingTypeEnumTypeHeatdetector      SensingTypeEnumType = "heatDetector"
	SensingTypeEnumTypeWaterdetector     SensingTypeEnumType = "waterDetector"
	SensingTypeEnumTypeGasdetector       SensingTypeEnumType = "gasDetector"
	SensingTypeEnumTypeAlarmsensor       SensingTypeEnumType = "alarmSensor"
	SensingTypeEnumTypePoweralarmsensor  SensingTypeEnumType = "powerAlarmSensor"
	SensingTypeEnumTypeDaynightindicator SensingTypeEnumType = "dayNightIndicator"
)

// SetpointIdType type
type SetpointIdType string

// SetpointTypeType type
type SetpointTypeType string

// SetpointTypeEnumType type
type SetpointTypeEnumType string

// SetpointTypeEnumType constants
const (
	SetpointTypeEnumTypeValueabsolute SetpointTypeEnumType = "valueAbsolute"
	SetpointTypeEnumTypeValuerelative SetpointTypeEnumType = "valueRelative"
)

// ConditionIdType type
type ConditionIdType string

// SupplyConditionEventTypeType type
type SupplyConditionEventTypeType string

// SupplyConditionEventTypeEnumType type
type SupplyConditionEventTypeEnumType string

// SupplyConditionEventTypeEnumType constants
const (
	SupplyConditionEventTypeEnumTypeThesholdexceeded     SupplyConditionEventTypeEnumType = "thesholdExceeded"
	SupplyConditionEventTypeEnumTypeFallenbelowthreshold SupplyConditionEventTypeEnumType = "fallenBelowThreshold"
	SupplyConditionEventTypeEnumTypeSupplyinterrupt      SupplyConditionEventTypeEnumType = "supplyInterrupt"
	SupplyConditionEventTypeEnumTypeReleaseoflimitations SupplyConditionEventTypeEnumType = "releaseOfLimitations"
	SupplyConditionEventTypeEnumTypeOtherproblem         SupplyConditionEventTypeEnumType = "otherProblem"
	SupplyConditionEventTypeEnumTypeGridconditionupdate  SupplyConditionEventTypeEnumType = "gridConditionUpdate"
)

// SupplyConditionOriginatorType type
type SupplyConditionOriginatorType string

// SupplyConditionOriginatorEnumType type
type SupplyConditionOriginatorEnumType string

// SupplyConditionOriginatorEnumType constants
const (
	SupplyConditionOriginatorEnumTypeExterndso       SupplyConditionOriginatorEnumType = "externDSO"
	SupplyConditionOriginatorEnumTypeExternsupplier  SupplyConditionOriginatorEnumType = "externSupplier"
	SupplyConditionOriginatorEnumTypeInternallimit   SupplyConditionOriginatorEnumType = "internalLimit"
	SupplyConditionOriginatorEnumTypeInternalservice SupplyConditionOriginatorEnumType = "internalService"
	SupplyConditionOriginatorEnumTypeInternaluser    SupplyConditionOriginatorEnumType = "internalUser"
)

// GridConditionType type
type GridConditionType string

// GridConditionEnumType type
type GridConditionEnumType string

// GridConditionEnumType constants
const (
	GridConditionEnumTypeConsumptionred    GridConditionEnumType = "consumptionRed"
	GridConditionEnumTypeConsumptionyellow GridConditionEnumType = "consumptionYellow"
	GridConditionEnumTypeGood              GridConditionEnumType = "good"
	GridConditionEnumTypeProductionyellow  GridConditionEnumType = "productionYellow"
	GridConditionEnumTypeProductionred     GridConditionEnumType = "productionRed"
)

// TaskManagementJobIdType type
type TaskManagementJobIdType string

// TaskManagementJobStateType type
type TaskManagementJobStateType string

// TaskManagementJobSourceType type
type TaskManagementJobSourceType string

// TaskManagementJobSourceEnumType type
type TaskManagementJobSourceEnumType string

// TaskManagementJobSourceEnumType constants
const (
	TaskManagementJobSourceEnumTypeInternalmechanism     TaskManagementJobSourceEnumType = "internalMechanism"
	TaskManagementJobSourceEnumTypeUserinteraction       TaskManagementJobSourceEnumType = "userInteraction"
	TaskManagementJobSourceEnumTypeExternalconfiguration TaskManagementJobSourceEnumType = "externalConfiguration"
)

// ThresholdIdType type
type ThresholdIdType string

// ThresholdTypeType type
type ThresholdTypeType string

// ThresholdTypeEnumType type
type ThresholdTypeEnumType string

// ThresholdTypeEnumType constants
const (
	ThresholdTypeEnumTypeGoodabove                ThresholdTypeEnumType = "goodAbove"
	ThresholdTypeEnumTypeBadabove                 ThresholdTypeEnumType = "badAbove"
	ThresholdTypeEnumTypeGoodbelow                ThresholdTypeEnumType = "goodBelow"
	ThresholdTypeEnumTypeBadbelow                 ThresholdTypeEnumType = "badBelow"
	ThresholdTypeEnumTypeMinvaluethreshold        ThresholdTypeEnumType = "minValueThreshold"
	ThresholdTypeEnumTypeMaxvaluethreshold        ThresholdTypeEnumType = "maxValueThreshold"
	ThresholdTypeEnumTypeMinvaluethresholdextreme ThresholdTypeEnumType = "minValueThresholdExtreme"
	ThresholdTypeEnumTypeMaxvaluethresholdextreme ThresholdTypeEnumType = "maxValueThresholdExtreme"
	ThresholdTypeEnumTypeSagthreshold             ThresholdTypeEnumType = "sagThreshold"
	ThresholdTypeEnumTypeSwellthreshold           ThresholdTypeEnumType = "swellThreshold"
)
