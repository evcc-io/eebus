// Package ns_p contains models for http://docs.eebus.org/spine/xsd/v1
package model

// Code generated by github.com/andig/xsd2go. DO NOT EDIT.

import "github.com/evcc-io/eebus/util"

// TariffIdType type
type TariffIdType uint

// TariffCountType type
type TariffCountType TariffIdType

// TierBoundaryIdType type
type TierBoundaryIdType uint

// TierBoundaryCountType type
type TierBoundaryCountType TierBoundaryIdType

// TierBoundaryTypeType type
type TierBoundaryTypeType TierBoundaryTypeEnumType

// TierBoundaryTypeEnumType type
type TierBoundaryTypeEnumType string

// TierBoundaryTypeEnumType constants
const (
	TierBoundaryTypeEnumTypePowerBoundary  TierBoundaryTypeEnumType = "powerBoundary"
	TierBoundaryTypeEnumTypeEnergyBoundary TierBoundaryTypeEnumType = "energyBoundary"
	TierBoundaryTypeEnumTypeCountBoundary  TierBoundaryTypeEnumType = "countBoundary"
)

// CommodityIdType type
type CommodityIdType uint

// TierIdType type
type TierIdType uint

// TierCountType type
type TierCountType TierIdType

// TierTypeType type
type TierTypeType TierTypeEnumType

// TierTypeEnumType type
type TierTypeEnumType string

// TierTypeEnumType constants
const (
	TierTypeEnumTypeFixedcost   TierTypeEnumType = "fixedCost"
	TierTypeEnumTypeDynamiccost TierTypeEnumType = "dynamicCost"
)

// IncentiveIdType type
type IncentiveIdType uint

// IncentiveCountType type
type IncentiveCountType IncentiveIdType

// IncentiveTypeType type
type IncentiveTypeType IncentiveTypeEnumType

// IncentiveTypeEnumType type
type IncentiveTypeEnumType string

// IncentiveTypeEnumType constants
const (
	IncentiveTypeEnumTypeAbsolutecost              IncentiveTypeEnumType = "absoluteCost"
	IncentiveTypeEnumTypeRelativecost              IncentiveTypeEnumType = "relativeCost"
	IncentiveTypeEnumTypeRenewableenergypercentage IncentiveTypeEnumType = "renewableEnergyPercentage"
	IncentiveTypeEnumTypeCo2Emission               IncentiveTypeEnumType = "co2Emission"
)

// IncentivePriorityType type
type IncentivePriorityType uint

// IncentiveValueTypeType type
type IncentiveValueTypeType IncentiveValueTypeEnumType

// IncentiveValueTypeEnumType type
type IncentiveValueTypeEnumType string

// IncentiveValueTypeEnumType constants
const (
	IncentiveValueTypeEnumTypeValue        IncentiveValueTypeEnumType = "value"
	IncentiveValueTypeEnumTypeAveragevalue IncentiveValueTypeEnumType = "averageValue"
	IncentiveValueTypeEnumTypeMinvalue     IncentiveValueTypeEnumType = "minValue"
	IncentiveValueTypeEnumTypeMaxvalue     IncentiveValueTypeEnumType = "maxValue"
)

// TariffOverallConstraintsDataType complex type
type TariffOverallConstraintsDataType struct {
	MaxTariffCount         *TariffCountType       `json:"maxTariffCount,omitempty"`
	MaxBoundaryCount       *TierBoundaryCountType `json:"maxBoundaryCount,omitempty"`
	MaxTierCount           *TierCountType         `json:"maxTierCount,omitempty"`
	MaxIncentiveCount      *IncentiveCountType    `json:"maxIncentiveCount,omitempty"`
	MaxBoundariesPerTariff *TierBoundaryCountType `json:"maxBoundariesPerTariff,omitempty"`
	MaxTiersPerTariff      *TierCountType         `json:"maxTiersPerTariff,omitempty"`
	MaxBoundariesPerTier   *TierBoundaryCountType `json:"maxBoundariesPerTier,omitempty"`
	MaxIncentivesPerTier   *IncentiveCountType    `json:"maxIncentivesPerTier,omitempty"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m TariffOverallConstraintsDataType) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *TariffOverallConstraintsDataType) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// TariffDataType complex type
type TariffDataType struct {
	TariffId     *TariffIdType `json:"tariffId,omitempty"`
	ActiveTierId []TierIdType  `json:"activeTierId,omitempty"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m TariffDataType) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *TariffDataType) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// TariffListDataType complex type
type TariffListDataType struct {
	TariffData []TariffDataType `json:"tariffData,omitempty"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m TariffListDataType) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *TariffListDataType) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// TariffListDataSelectorsType complex type
type TariffListDataSelectorsType struct {
	TariffId     *TariffIdType `json:"tariffId,omitempty"`
	ActiveTierId *TierIdType   `json:"activeTierId,omitempty"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m TariffListDataSelectorsType) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *TariffListDataSelectorsType) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// TariffTierRelationDataType complex type
type TariffTierRelationDataType struct {
	TariffId *TariffIdType `json:"tariffId,omitempty"`
	TierId   []TierIdType  `json:"tierId,omitempty"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m TariffTierRelationDataType) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *TariffTierRelationDataType) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// TariffTierRelationListDataType complex type
type TariffTierRelationListDataType struct {
	TariffTierRelationData []TariffTierRelationDataType `json:"tariffTierRelationData,omitempty"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m TariffTierRelationListDataType) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *TariffTierRelationListDataType) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// TariffTierRelationListDataSelectorsType complex type
type TariffTierRelationListDataSelectorsType struct {
	TariffId *TariffIdType `json:"tariffId,omitempty"`
	TierId   *TierIdType   `json:"tierId,omitempty"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m TariffTierRelationListDataSelectorsType) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *TariffTierRelationListDataSelectorsType) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// TariffBoundaryRelationDataType complex type
type TariffBoundaryRelationDataType struct {
	TariffId   *TariffIdType        `json:"tariffId,omitempty"`
	BoundaryId []TierBoundaryIdType `json:"boundaryId,omitempty"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m TariffBoundaryRelationDataType) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *TariffBoundaryRelationDataType) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// TariffBoundaryRelationListDataType complex type
type TariffBoundaryRelationListDataType struct {
	TariffBoundaryRelationData []TariffBoundaryRelationDataType `json:"tariffBoundaryRelationData,omitempty"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m TariffBoundaryRelationListDataType) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *TariffBoundaryRelationListDataType) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// TariffBoundaryRelationListDataSelectorsType complex type
type TariffBoundaryRelationListDataSelectorsType struct {
	TariffId   *TariffIdType       `json:"tariffId,omitempty"`
	BoundaryId *TierBoundaryIdType `json:"boundaryId,omitempty"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m TariffBoundaryRelationListDataSelectorsType) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *TariffBoundaryRelationListDataSelectorsType) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// TariffDescriptionDataType complex type
type TariffDescriptionDataType struct {
	TariffId        *TariffIdType      `json:"tariffId,omitempty"`
	CommodityId     *CommodityIdType   `json:"commodityId,omitempty"`
	MeasurementId   *MeasurementIdType `json:"measurementId,omitempty"`
	TariffWriteable *bool              `json:"tariffWriteable,omitempty"`
	UpdateRequired  *bool              `json:"updateRequired,omitempty"`
	ScopeType       *ScopeTypeType     `json:"scopeType,omitempty"`
	Label           *LabelType         `json:"label,omitempty"`
	Description     *DescriptionType   `json:"description,omitempty"`
	SlotIdSupport   *bool              `json:"slotIdSupport,omitempty"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m TariffDescriptionDataType) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *TariffDescriptionDataType) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// TariffDescriptionListDataType complex type
type TariffDescriptionListDataType struct {
	TariffDescriptionData []TariffDescriptionDataType `json:"tariffDescriptionData,omitempty"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m TariffDescriptionListDataType) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *TariffDescriptionListDataType) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// TariffDescriptionListDataSelectorsType complex type
type TariffDescriptionListDataSelectorsType struct {
	TariffId      *TariffIdType      `json:"tariffId,omitempty"`
	CommodityId   *CommodityIdType   `json:"commodityId,omitempty"`
	MeasurementId *MeasurementIdType `json:"measurementId,omitempty"`
	ScopeType     *ScopeTypeType     `json:"scopeType,omitempty"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m TariffDescriptionListDataSelectorsType) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *TariffDescriptionListDataSelectorsType) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// TierBoundaryDataType complex type
type TierBoundaryDataType struct {
	BoundaryId         *TierBoundaryIdType `json:"boundaryId,omitempty"`
	TimePeriod         *TimePeriodType     `json:"timePeriod,omitempty"`
	TimeTableId        *TimeTableIdType    `json:"timeTableId,omitempty"`
	LowerBoundaryValue *ScaledNumberType   `json:"lowerBoundaryValue,omitempty"`
	UpperBoundaryValue *ScaledNumberType   `json:"upperBoundaryValue,omitempty"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m TierBoundaryDataType) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *TierBoundaryDataType) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// TierBoundaryListDataType complex type
type TierBoundaryListDataType struct {
	TierBoundaryData []TierBoundaryDataType `json:"tierBoundaryData,omitempty"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m TierBoundaryListDataType) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *TierBoundaryListDataType) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// TierBoundaryListDataSelectorsType complex type
type TierBoundaryListDataSelectorsType struct {
	BoundaryId *TierBoundaryIdType `json:"boundaryId,omitempty"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m TierBoundaryListDataSelectorsType) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *TierBoundaryListDataSelectorsType) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// TierBoundaryDescriptionDataType complex type
type TierBoundaryDescriptionDataType struct {
	BoundaryId               *TierBoundaryIdType    `json:"boundaryId,omitempty"`
	BoundaryType             *TierBoundaryTypeType  `json:"boundaryType,omitempty"`
	ValidForTierId           *TierIdType            `json:"validForTierId,omitempty"`
	SwitchToTierIdWhenLower  *TierIdType            `json:"switchToTierIdWhenLower,omitempty"`
	SwitchToTierIdWhenHigher *TierIdType            `json:"switchToTierIdWhenHigher,omitempty"`
	BoundaryUnit             *UnitOfMeasurementType `json:"boundaryUnit,omitempty"`
	Label                    *LabelType             `json:"label,omitempty"`
	Description              *DescriptionType       `json:"description,omitempty"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m TierBoundaryDescriptionDataType) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *TierBoundaryDescriptionDataType) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// TierBoundaryDescriptionListDataType complex type
type TierBoundaryDescriptionListDataType struct {
	TierBoundaryDescriptionData []TierBoundaryDescriptionDataType `json:"tierBoundaryDescriptionData,omitempty"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m TierBoundaryDescriptionListDataType) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *TierBoundaryDescriptionListDataType) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// TierBoundaryDescriptionListDataSelectorsType complex type
type TierBoundaryDescriptionListDataSelectorsType struct {
	BoundaryId   *TierBoundaryIdType   `json:"boundaryId,omitempty"`
	BoundaryType *TierBoundaryTypeType `json:"boundaryType,omitempty"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m TierBoundaryDescriptionListDataSelectorsType) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *TierBoundaryDescriptionListDataSelectorsType) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// CommodityDataType complex type
type CommodityDataType struct {
	CommodityId             *CommodityIdType     `json:"commodityId,omitempty"`
	CommodityType           *CommodityTypeType   `json:"commodityType,omitempty"`
	PositiveEnergyDirection *EnergyDirectionType `json:"positiveEnergyDirection,omitempty"`
	Label                   *LabelType           `json:"label,omitempty"`
	Description             *DescriptionType     `json:"description,omitempty"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m CommodityDataType) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *CommodityDataType) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// CommodityListDataType complex type
type CommodityListDataType struct {
	CommodityData []CommodityDataType `json:"commodityData,omitempty"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m CommodityListDataType) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *CommodityListDataType) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// CommodityListDataSelectorsType complex type
type CommodityListDataSelectorsType struct {
	CommodityId   *CommodityIdType   `json:"commodityId,omitempty"`
	CommodityType *CommodityTypeType `json:"commodityType,omitempty"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m CommodityListDataSelectorsType) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *CommodityListDataSelectorsType) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// TierDataType complex type
type TierDataType struct {
	TierId            *TierIdType       `json:"tierId,omitempty"`
	TimePeriod        *TimePeriodType   `json:"timePeriod,omitempty"`
	TimeTableId       *TimeTableIdType  `json:"timeTableId,omitempty"`
	ActiveIncentiveId []IncentiveIdType `json:"activeIncentiveId,omitempty"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m TierDataType) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *TierDataType) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// TierListDataType complex type
type TierListDataType struct {
	TierData []TierDataType `json:"tierData,omitempty"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m TierListDataType) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *TierListDataType) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// TierListDataSelectorsType complex type
type TierListDataSelectorsType struct {
	TierId            *TierIdType      `json:"tierId,omitempty"`
	ActiveIncentiveId *IncentiveIdType `json:"activeIncentiveId,omitempty"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m TierListDataSelectorsType) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *TierListDataSelectorsType) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// TierIncentiveRelationDataType complex type
type TierIncentiveRelationDataType struct {
	TierId      *TierIdType       `json:"tierId,omitempty"`
	IncentiveId []IncentiveIdType `json:"incentiveId,omitempty"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m TierIncentiveRelationDataType) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *TierIncentiveRelationDataType) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// TierIncentiveRelationListDataType complex type
type TierIncentiveRelationListDataType struct {
	TierIncentiveRelationData []TierIncentiveRelationDataType `json:"tierIncentiveRelationData,omitempty"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m TierIncentiveRelationListDataType) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *TierIncentiveRelationListDataType) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// TierIncentiveRelationListDataSelectorsType complex type
type TierIncentiveRelationListDataSelectorsType struct {
	TierId      *TierIdType      `json:"tierId,omitempty"`
	IncentiveId *IncentiveIdType `json:"incentiveId,omitempty"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m TierIncentiveRelationListDataSelectorsType) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *TierIncentiveRelationListDataSelectorsType) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// TierDescriptionDataType complex type
type TierDescriptionDataType struct {
	TierId      *TierIdType      `json:"tierId,omitempty"`
	TierType    *TierTypeType    `json:"tierType,omitempty"`
	Label       *LabelType       `json:"label,omitempty"`
	Description *DescriptionType `json:"description,omitempty"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m TierDescriptionDataType) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *TierDescriptionDataType) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// TierDescriptionListDataType complex type
type TierDescriptionListDataType struct {
	TierDescriptionData []TierDescriptionDataType `json:"tierDescriptionData,omitempty"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m TierDescriptionListDataType) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *TierDescriptionListDataType) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// TierDescriptionListDataSelectorsType complex type
type TierDescriptionListDataSelectorsType struct {
	TierId   *TierIdType   `json:"tierId,omitempty"`
	TierType *TierTypeType `json:"tierType,omitempty"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m TierDescriptionListDataSelectorsType) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *TierDescriptionListDataSelectorsType) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// IncentiveDataType complex type
type IncentiveDataType struct {
	IncentiveId *IncentiveIdType            `json:"incentiveId,omitempty"`
	ValueType   *IncentiveValueTypeType     `json:"valueType,omitempty"`
	Timestamp   *AbsoluteOrRelativeTimeType `json:"timestamp,omitempty"`
	TimePeriod  *TimePeriodType             `json:"timePeriod,omitempty"`
	TimeTableId *TimeTableIdType            `json:"timeTableId,omitempty"`
	Value       *ScaledNumberType           `json:"value,omitempty"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m IncentiveDataType) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *IncentiveDataType) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// IncentiveListDataType complex type
type IncentiveListDataType struct {
	IncentiveData []IncentiveDataType `json:"incentiveData,omitempty"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m IncentiveListDataType) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *IncentiveListDataType) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// IncentiveListDataSelectorsType complex type
type IncentiveListDataSelectorsType struct {
	IncentiveId       *IncentiveIdType        `json:"incentiveId,omitempty"`
	ValueType         *IncentiveValueTypeType `json:"valueType,omitempty"`
	TimestampInterval *TimestampIntervalType  `json:"timestampInterval,omitempty"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m IncentiveListDataSelectorsType) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *IncentiveListDataSelectorsType) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// IncentiveDescriptionDataType complex type
type IncentiveDescriptionDataType struct {
	IncentiveId       *IncentiveIdType       `json:"incentiveId,omitempty"`
	IncentiveType     *IncentiveTypeType     `json:"incentiveType,omitempty"`
	IncentivePriority *IncentivePriorityType `json:"incentivePriority,omitempty"`
	Currency          *CurrencyType          `json:"currency,omitempty"`
	Unit              *UnitOfMeasurementType `json:"unit,omitempty"`
	Label             *LabelType             `json:"label,omitempty"`
	Description       *DescriptionType       `json:"description,omitempty"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m IncentiveDescriptionDataType) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *IncentiveDescriptionDataType) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// IncentiveDescriptionListDataType complex type
type IncentiveDescriptionListDataType struct {
	IncentiveDescriptionData []IncentiveDescriptionDataType `json:"incentiveDescriptionData,omitempty"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m IncentiveDescriptionListDataType) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *IncentiveDescriptionListDataType) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// IncentiveDescriptionListDataSelectorsType complex type
type IncentiveDescriptionListDataSelectorsType struct {
	IncentiveId   *IncentiveIdType   `json:"incentiveId,omitempty"`
	IncentiveType *IncentiveTypeType `json:"incentiveType,omitempty"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m IncentiveDescriptionListDataSelectorsType) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *IncentiveDescriptionListDataSelectorsType) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}
