// Package ns_p contains models for http://docs.eebus.org/spine/xsd/v1
package model

// Code generated by github.com/andig/xsd2go. DO NOT EDIT.

import "github.com/evcc-io/eebus/util"

// MsgCounterType type
type MsgCounterType uint64

// CmdClassifierType type
type CmdClassifierType string

// CmdClassifierType constants
const (
	CmdClassifierTypeRead   CmdClassifierType = "read"
	CmdClassifierTypeReply  CmdClassifierType = "reply"
	CmdClassifierTypeNotify CmdClassifierType = "notify"
	CmdClassifierTypeWrite  CmdClassifierType = "write"
	CmdClassifierTypeCall   CmdClassifierType = "call"
	CmdClassifierTypeResult CmdClassifierType = "result"
)

// FilterIdType type
type FilterIdType uint

// FilterType complex type
type FilterType struct {
	FilterId   *FilterIdType   `json:"filterId,omitempty"`
	CmdControl *CmdControlType `json:"cmdControl,omitempty"`

	// DataSelectorsChoiceGroup
	ElectricalConnectionPermittedValueSetListDataSelectors    *ElectricalConnectionPermittedValueSetListDataSelectorsType `json:"electricalConnectionPermittedValueSetListDataSelectors,omitempty"`
	ElectricalConnectionDescriptionListDataSelectors          *ElectricalConnectionDescriptionListDataSelectorsType          `json:"electricalConnectionDescriptionListDataSelectors,omitempty"`
	ElectricalConnectionParameterDescriptionListDataSelectors *ElectricalConnectionParameterDescriptionListDataSelectorsType `json:"electricalConnectionParameterDescriptionListDataSelectors,omitempty"`
	MeasurementDescriptionListDataSelectors                   *MeasurementDescriptionListDataSelectorsType                   `json:"measurementDescriptionListDataSelectors,omitempty"`
	MeasurementListDataSelectors                              *MeasurementListDataSelectorsType                              `json:"measurementListDataSelectors,omitempty"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m FilterType) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *FilterType) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// CmdControlType complex type
type CmdControlType struct {
	Delete  *ElementTagType `json:"delete,omitempty"`
	Partial *ElementTagType `json:"partial,omitempty"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m CmdControlType) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *CmdControlType) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// Filter element
type Filter struct {
	FilterId   *FilterIdType   `json:"filterId,omitempty"`
	CmdControl *CmdControlType `json:"cmdControl,omitempty"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m Filter) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *Filter) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// CmdControl element
type CmdControl struct {
	Delete  *ElementTagType `json:"delete,omitempty"`
	Partial *ElementTagType `json:"partial,omitempty"`
}

// MarshalJSON is the SHIP serialization marshaller
func (m CmdControl) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *CmdControl) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}

// CmdType complex type
type CmdType struct {
	// CmdOptionGroup
	Function *FunctionType `json:"function,omitempty"`
	Filter   []FilterType  `json:"filter,omitempty"`

	// DataChoiceGroup
	DeviceClassificationManufacturerData             *DeviceClassificationManufacturerDataType             `json:"deviceClassificationManufacturerData,omitempty"`
	DeviceConfigurationKeyValueDescriptionListData   *DeviceConfigurationKeyValueDescriptionListDataType   `json:"deviceConfigurationKeyValueDescriptionListData,omitempty"`
	DeviceConfigurationKeyValueListData              *DeviceConfigurationKeyValueListDataType              `json:"deviceConfigurationKeyValueListData,omitempty"`
	DeviceDiagnosisHeartbeatData                     *DeviceDiagnosisHeartbeatDataType                     `json:"deviceDiagnosisHeartbeatData,omitempty"`
	DeviceDiagnosisStateData                         *DeviceDiagnosisStateDataType                         `json:"deviceDiagnosisStateData,omitempty"`
	ElectricalConnectionDescriptionListData          *ElectricalConnectionDescriptionListDataType          `json:"electricalConnectionDescriptionListData,omitempty"`
	ElectricalConnectionParameterDescriptionListData *ElectricalConnectionParameterDescriptionListDataType `json:"electricalConnectionParameterDescriptionListData,omitempty"`
	ElectricalConnectionPermittedValueSetListData    *ElectricalConnectionPermittedValueSetListDataType    `json:"electricalConnectionPermittedValueSetListData,omitempty"`
	IdentificationListData                           *IdentificationListDataType                           `json:"identificationListData,omitempty"`
	IncentiveTableDescriptionData                    *IncentiveTableDescriptionDataType                    `json:"incentiveTableDescriptionData,omitempty"`
	IncentiveTableConstraintsData                    *IncentiveTableConstraintsDataType                    `json:"incentiveTableConstraintsData,omitempty"`
	IncentiveTableData                               *IncentiveTableDataType                               `json:"incentiveTableData,omitempty"`
	LoadControlLimitDescriptionListData              *LoadControlLimitDescriptionListDataType              `json:"loadControlLimitDescriptionListData,omitempty"`
	LoadControlLimitListData                         *LoadControlLimitListDataType                         `json:"loadControlLimitListData,omitempty"`
	NodeManagementBindingRequestCall                 *NodeManagementBindingRequestCallType                 `json:"nodeManagementBindingRequestCall,omitempty"`
	NodeManagementDestinationListData                *NodeManagementDestinationListDataType                `json:"nodeManagementDestinationListData,omitempty"`
	NodeManagementDetailedDiscoveryData              *NodeManagementDetailedDiscoveryDataType              `json:"nodeManagementDetailedDiscoveryData,omitempty"`
	NodeManagementSubscriptionData                   *NodeManagementSubscriptionDataType                   `json:"nodeManagementSubscriptionData,omitempty"`
	NodeManagementSubscriptionRequestCall            *NodeManagementSubscriptionRequestCallType            `json:"nodeManagementSubscriptionRequestCall,omitempty"`
	NodeManagementSubscriptionDeleteCall             *NodeManagementSubscriptionDeleteCallType             `json:"nodeManagementSubscriptionDeleteCall,omitempty"`
	NodeManagementUseCaseData                        *NodeManagementUseCaseDataType                        `json:"nodeManagementUseCaseData,omitempty"`
	MeasurementConstraintsListData                   *MeasurementConstraintsListDataType                   `json:"measurementConstraintsListData,omitempty"`
	MeasurementDescriptionListData                   *MeasurementDescriptionListDataType                   `json:"measurementDescriptionListData,omitempty"`
	MeasurementListData                              *MeasurementListDataType                              `json:"measurementListData,omitempty"`
	ResultData                                       *ResultDataType                                       `json:"resultData,omitempty"`
	TimeSeriesConstraintsData                        *TimeSeriesConstraintsDataType                        `json:"timeSeriesConstraintsData,omitempty"`
	TimeSeriesConstraintsListData                    *TimeSeriesConstraintsListDataType                    `json:"timeSeriesConstraintsListData,omitempty"`
	TimeSeriesDescriptionListData                    *TimeSeriesDescriptionListDataType                    `json:"timeSeriesDescriptionListData,omitempty"`
	TimeSeriesListData                               *TimeSeriesListDataType                               `json:"timeSeriesListData,omitempty"`

	// DataExtendGroup
}

// MarshalJSON is the SHIP serialization marshaller
func (m CmdType) MarshalJSON() ([]byte, error) {
	return util.Marshal(m)
}

// UnmarshalJSON is the SHIP serialization unmarshaller
func (m *CmdType) UnmarshalJSON(data []byte) error {
	return util.Unmarshal(data, &m)
}
